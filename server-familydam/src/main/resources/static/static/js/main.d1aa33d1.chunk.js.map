{"version":3,"sources":["components/clock/Clock.js","library/loadingButton/LoadingButton.js","components/logincards/LoginCard.js","components/logincards/LoginCards.js","library/CssGrid/GridContainer.js","library/CssGrid/GridItem.js","library/actions/processors/LoadClientAppsService.js","library/actions/AppSettings.js","library/actions/processors/LogoutService.js","library/actions/AppActions.js","services/CreateUserService.js","components/signupcard/SignupCard.js","services/LoginService.js","library/actions/processors/GetAllUsersService.js","pages/login/LoginPage.js","App.js","index.js"],"names":["Clock","props","context","state","timestamp","Date","getTime","this","timer","setInterval","tick","clearInterval","classes","className","moment","format","Component","withStyles","styleSheet","theme","position","bottom","left","fontSize","color","opacity","LoadingButton","style","handleClick","bind","nextProps","nextState","label","e","console","log","onClick","dir","Button","variant","btn","isLoading","CircularProgress","progress","size","injectIntl","padding","marginRight","LoginCard","user","password","mode","handleSelect","handleCancel","handleLogin","handleKeyDown","setState","refs","pwdField","focus","onCancel","onLogin","id","key","onSelect","Paper","width","height","ButtonBase","focusRipple","firstName","extendedContainer","gridRow","gridColumn","Typography","type","TextField","required","value","onKeyDown","onChange","target","personalCard","border","display","gridGap","gridTemplateColumn","gridTemplateRows","LoginCards","selectedUser","username_","password_","event","_users","users","filter","u","outerContainer","loginGrids","map","loginCardItem","gridTemplateColumns","gridAutoRows","GridContainer","_style","gap","rowTemplate","columnTemplate","children","GridItem","rows","columns","LoginService","source_","sink_","sink","undefined","subscribe","loadApps","data_","request","get","withCredentials","set","end","err","res","status","AppActions","navigateTo","next","_error403","error","_error","statusText","responseText","body","apps","primary","secondary","baseHost","BehaviorSubject","basicUser","window","localStorage","getItem","basicPwd","LogoutService","getUser","baseUrl","AppSettings","getValue","fetch","method","then","response","redirected","url","location","catch","Subject","logout","loadClientApps","source","loadClientAppsService","LoadClientAppsService","logoutService","createUser","formData","FormData","append","lastName","passwordConfirm","email","warn","alert","SignupCard","firstNameError","lastNameError","emailError","passwordError","confirmPasswordError","handleSubmit","CreateUserService","pipe","takeWhile","f","data","clearValidationErrors","isValid","isValidForm","confirmPassword","_user","createUserSubscription","GetAllUsersService","error_","maxWidth","defaultMessage","textField","length","helperText","loginCardForm","backgroundColor","login","_url","username","indexOf","getUsers","headers","Headers","cache","a","json","list","i","_embedded","item","push","sort","b","message","setTimeout","UserActions","getAllUsers","Login","isMounted","activeUser","offlineImage","backgrounds","handleCancelCardSelection","handleCardSelection","mounted","users_","min","max","Math","floor","random","randomBackground","randomIntFromInterval","loginView","background","timeClock","wrapper","top","right","flexGrow","flexWrap","alignItems","justifyContent","backgroundSize","backgroundRepeat","margin","spacing","unit","App","locale","messages","i18nMessages","LoginPage","require","createMuiTheme","palette","deepPurple","indigo","red","renderApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1aa33d1.chunk.js","sourcesContent":["/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport moment from 'moment';\n\n\nconst styleSheet = (theme) => ({\n    timestamp: {\n        position: 'absolute',\n        bottom: '15px',\n        left: '20px',\n        fontSize: '48px',\n        color: '#fff',\n        opacity: '.7'\n    }\n});\n\n\n\nclass Clock extends Component {\n\n    constructor(props, context){\n        super(props);\n\n        this.state = {\n            timestamp:new Date().getTime()\n        };\n    }\n\n    componentDidMount(){\n        this.timer = setInterval(this.tick, 1000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    tick(){\n        //this.setState({timestamp: new Date().getTime()});\n    }\n\n    render() {\n        var classes = this.props.classes;\n        return (\n            <div>\n                <div className={classes.timestamp}>{moment().format('h:mm:ss a')}</div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(Clock);\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styleSheet = (theme) => ({\n    btn: {\n        padding: '4px 12px'\n    },\n    progress: {\n        marginRight: `8px`\n    }\n});\n\nclass LoadingButton extends Component {\n\n    constructor(props, context) {\n\n        if( !props.style ){\n            props.style = {};\n        }\n\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.label !== this.props.label);\n    }\n\n    handleClick(e){\n        console.log(\"loading button click\");\n        if( this.props.onClick ){\n            this.props.onClick(e);\n        }else{\n            console.dir(this.props);\n        }\n    }\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.btn}\n                style={this.props.style}\n                onClick={this.handleClick}>\n                {this.props.isLoading &&\n                    <CircularProgress className={classes.progress} color=\"#fff\" size={25}/>\n                }\n                {this.props.label}\n            </Button>\n\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(LoadingButton));","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport LoadingButton from '../../library/loadingButton/LoadingButton';\n\nconst styleSheet = (theme) => ({\n    personalCard: {\n        border: '1px solid'\n    },\n    extendedContainer: {\n        display: 'grid',\n        gridGap: '16px',\n        gridTemplateColumn: '125px auto auto auto',\n        gridTemplateRows: '16px auto auto auto auto 16px'\n    }\n});\n\nclass LoginCard extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            user: {\n                \"firstName\": \"\",\n                \"lastName\": \"\",\n                \"email\": \"\"\n            },\n            password:'',\n            mode: \"minimal\",\n            isLoading:false\n        };\n\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n\n\n    componentDidMount() {\n        this.setState({\"mounted\":true});\n        if (this.refs.pwdField) this.refs.pwdField.focus();\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n    handleCancel() {\n        this.setState({mode: 'minimal', 'isLoading':false});\n\n        if (this.props.onCancel) {\n            this.props.onCancel();\n        }\n    }\n\n    handleLogin(){\n        if (this.props.onLogin) {\n            this.props.onLogin(this.props.user.id, this.state.password);\n        }\n    }\n\n    handleKeyDown(e){\n        if (e.key === 'Enter') {\n            this.handleLogin();\n        }\n    }\n\n\n    handleSelect() {\n        this.setState({mode: 'extended'});\n\n        if (this.props.onSelect) {\n            this.props.onSelect(this.props.user);\n        }\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        if (this.state.mode === \"minimal\") {\n            return (\n                <Paper style={{width: '150px', height: '176px'}}>\n                    <ButtonBase focusRipple\n                                onClick={this.handleSelect}\n                                style={{'width': '100%', 'backgroundColor': '#fff'}}>\n                        <AccountCircle\n                            style={{'width': 120, 'height': 120}}\n                        />\n                    </ButtonBase>\n                    <ButtonBase focusRipple\n                                onClick={this.handleSelect}\n                                style={{'width': '100%', 'backgroundColor': '#fff'}}>\n                        <h2 style={{'textAlign': 'center'}}>{this.props.user.firstName}</h2>\n                    </ButtonBase>\n                </Paper>\n            );\n        } else {\n            return (\n                <Paper style={{width: '450px', height: '200px'}}>\n                    <div className={classes.extendedContainer}>\n                        <div style={{gridRow: '2/5', gridColumn: '1', 'textAlign':'center'}}>\n                            <AccountCircle\n                                style={{'width': 120, 'height': 120}}\n                            />\n                        </div>\n                        <div style={{gridRow: '2', gridColumn: '2'}}>\n                            <Typography type=\"title\" style={{'textAlign': 'left'}}>{this.props.user.firstName}</Typography>\n                        </div>\n                        <div style={{gridRow: '3', gridColumn: '2'}}>\n                            <TextField\n                                type=\"password\"\n                                label=\"Password\"\n                                required={true}\n                                style={{'width':'100%'}}\n                                value={this.state.password}\n                                onKeyDown={this.handleKeyDown}\n                                onChange={(e)=> {\n                                    this.setState({password: e.target.value})\n                                }}\n                            />\n                        </div>\n                        <div style={{gridRow: '4', gridColumn: '2'}}>\n                            <Button color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n\n                            <LoadingButton\n                                isLoading={this.state.isLoading}\n                                label=\"Login\"\n                                onClick={this.handleLogin}></LoadingButton>\n                        </div>\n                    </div>\n                </Paper>\n            );\n        }\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(LoginCard);","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport LoginCard from './LoginCard';\n\nconst styleSheet = (theme) => ({\n    outerContainer:{\n        width:'100%',\n        height:'100%',\n        display: 'grid',\n        gridGap: '24px',\n        gridTemplateRows: '1fr 80% 1fr',\n        gridTemplateColumns: '1fr 80% 1fr'\n    },\n    loginGrids:{\n        width:'100%',\n        height:'100%',\n        display: 'grid',\n        gridGap: '24px',\n        gridAutoRows: 'auto',\n        gridTemplateColumns: 'repeat(auto-fill, 150px)'\n    },\n    loginCardItem:{\n\n    }\n});\n\n//  /* or 'row', 'row dense', 'column dense' */\nclass LoginCards extends Component {\n\n     constructor(props, context) {\n        super(props);\n\n        this.state = {\n            selectedUser:null\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.setState({\"mounted\":true});\n        if (this.refs.pwdField) this.refs.pwdField.focus();\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n\n    handleLogin(username_, password_){\n        if (this.props.onLogin) {\n            this.props.onLogin(username_, password_);\n        }\n    }\n\n    /**\n     * Select an inactive user\n     * @param event\n     */\n    handleSelect(event){\n        //event.target = this.getDOMNode();\n        this.props.onSelect(this.props.user);\n    }\n\n\n\n    render(){\n        var classes = this.props.classes;\n\n        let _users = [];\n        if( this.props.users ){\n            _users = this.props.users;\n            if( this.state.selectedUser !== null ) {\n                _users = _users.filter( (u)=>u.id === this.state.selectedUser.id );\n            }\n        }\n\n        return(\n            <div className={classes.outerContainer}>\n                <div style={{'gridColumn': '2/3', 'gridRow':'2/3'}}>\n                    <div className={classes.loginGrids}>\n\n                        {_users.map((user)=> {\n                            return (\n                                <div key={user.id}  className={classes.loginCardItem}>\n                                    <LoginCard\n                                        user={user}\n                                        onLogin={this.handleLogin}\n                                        onCancel={(u)=>this.setState({\"selectedUser\":null})}\n                                        onSelect={(u)=>this.setState({\"selectedUser\":u})}/>\n                                </div>\n                            );\n                        })}\n\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(LoginCards);","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass GridContainer extends Component {\n\n    render() {\n        var _style = {};\n        if( this.props.style ) {\n            _style = this.props.style;\n        }\n\n        _style.display = \"grid\";\n        if( !_style.width ) {\n            //_style.width = \"100%\";\n        }\n        if( !_style.height ) {\n            //_style.height = \"100%\";\n        }\n        if( !_style.gridGap ) {\n            _style.gridGap = this.props.gap;\n        }\n        if( !_style.gridTemplateRows ) {\n            _style.gridTemplateRows = this.props.rowTemplate;\n        }\n        if( !_style.gridTemplateColumns ) {\n            _style.gridTemplateColumns = this.props.columnTemplate;\n        }\n\n        return (\n            <div style={_style} {...this.props}>{this.props.children}</div>\n        );\n    }\n}\n\nGridContainer.propTypes = {\n    gap: PropTypes.number,\n    rowTemplate: PropTypes.string,\n    columnTemplate: PropTypes.string\n};\n\nexport default GridContainer;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass GridItem extends Component {\n\n    render() {\n\n        var _style = {}\n        if( this.props.style ) {\n            _style = this.props.style;\n        }\n\n        if( !_style.gridGap ) {\n            _style.gridGap = this.props.gap;\n        }\n        if( !_style.gridTemplateRows ) {\n            _style.gridRow = this.props.rows;\n        }\n        if( !_style.gridTemplateColumns ) {\n            _style.gridColumn = this.props.columns;\n        }\n\n        return (\n            <div style={_style}>{this.props.children}</div>\n        )\n    }\n}\n\nGridItem.propTypes = {\n    gap: PropTypes.number,\n    rows: PropTypes.string,\n    columns: PropTypes.string\n};\n\nexport default GridItem;","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppActions from '../AppActions';\nimport request from 'superagent';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoginService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.loadApps.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    loadApps(data_)\n    {\n\n        //call server get list of apps\n        request.get('/api/v1/core/clientapps')\n            .withCredentials()\n            .set('Accept', 'application/json')\n            .end((err, res)=>{\n\n                if( !err ){\n\n                    //send results to the store\n                    this.sink.next({\n                        \"primaryApps\": res.body.apps.primary,\n                        \"secondaryApps\": res.body.apps.secondary\n                    });\n\n                }else{\n\n                    //send the error to the store (through the sink observer\n                    if( err.status === 401){\n                        AppActions.navigateTo.next(\"/\");\n                    } else if( err.status === 403) {\n                        var _error403 = {'code': err.status,'message': \"Invalid Login (todo: show toast)\"};\n                        this.sink.error(_error403);\n                    }\n                    else\n                    {\n                        console.dir(err);\n                        var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                        this.sink.error(_error);\n                    }\n\n                }\n\n            });\n\n    }\n\n}\n\n\nexport default LoginService;\n","import {BehaviorSubject} from '@reactivex/rxjs';\n\nclass AppSettings {\n\n    baseHost = new BehaviorSubject(\"\");\n    basicUser = new BehaviorSubject(window.localStorage.getItem(\"u\"));\n    basicPwd = new BehaviorSubject(window.localStorage.getItem(\"p\"));\n\n}\n\nexport default new AppSettings();\n","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../../../library/actions/AppSettings';\n\nclass LogoutService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.getUser.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    getUser(username_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        fetch( baseUrl +'/logout', {\n            method: 'GET'\n        })\n        //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\n\nexport default LogoutService;\n","import {Subject} from '@reactivex/rxjs';\n\nimport LoadClientAppsService from './processors/LoadClientAppsService';\nimport LogoutService from \"./processors/LogoutService\";\n\nclass AppActions {\n\n    constructor() {\n        this.loadClientAppsService = new LoadClientAppsService(this.loadClientApps.source, this.loadClientApps.sink);\n        this.logoutService = new LogoutService(this.logout.source, this.logout.sink);\n    }\n\n\n    //Use this to navigation around the app Or outside\n    navigateTo = new Subject();\n\n    logout = {'source':new Subject(), 'sink':new Subject()};\n\n    //used to call repository to get list of installed apps\n    loadClientApps = {source:new Subject(), sink: new Subject()};\n\n}\n\nexport default new AppActions();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppActions from '../library/actions/AppActions';\nimport AppSettings from '../library/actions/AppSettings';\nimport request from 'superagent';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass CreateUserService {\n\n    isLoading=new BehaviorSubject(false);\n    source=new Subject()\n    sink=new Subject();\n\n    constructor() {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (data_) {\n            this.createUser(data_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    createUser(data_) {\n\n        //flip flag\n        this.isLoading.next(true);\n\n        const _data = {};\n\n        const formData = new FormData();\n        formData.append(\"firstName\", data_.firstName);\n        formData.append(\"lastName\", data_.lastName);\n        formData.append(\"password\", data_.password);\n        formData.append(\"pwdConfirm\", data_.passwordConfirm);\n        formData.append(\"email\", data_.email);\n\n\n\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/core/api/users';\n\n        fetch(_url, {\n            method: \"POST\",\n            body: formData\n        })\n            .then(response => {\n                //console.log(\"CreateUser success handler\");\n                //continue on\n                this.isLoading.next(false);\n                this.sink.next(true);\n            })\n            .catch(err => {\n                console.warn(err);\n                this.isLoading.next(false);\n\n                //send the error to the store (through the sink observer\n                if (err.status === 401) {\n                    AppActions.navigateTo.next(\"/\");\n                }\n                else if (err.status === 409) {\n                    // User already exists\n                    AppActions.alert.next(\"User already exists\");\n                }\n                else if (err.status === 403) {\n                    AppActions.alert.next(\"You do not have permission to add a new user\");\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\nexport default new CreateUserService();\n\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from \"react\";\nimport {injectIntl, FormattedMessage} from \"react-intl\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport { takeWhile } from 'rxjs/operators';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport LoadingButton from '../../library/loadingButton/LoadingButton';\n//import AppActions from \"../../actions/AppActions\";\n\nimport { GridContainer, GridItem } from \"../../library/CssGrid\";\nimport CreateUserService from \"../../services/CreateUserService\";\n\n\nconst styleSheet = (theme) => ({\n    loginCardForm:{\n        padding: \"20px\",\n        width: \"100%\",\n        backgroundColor: \"#ffffff\"\n    },\n    textField:{\n        \"width\":\"100%\"\n    }\n});\n\n\n\nclass SignupCard extends Component {\n\n    constructor(props, context){\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            firstNameError:'',\n            lastNameError:'',\n            emailError:'',\n            passwordError:'',\n            confirmPasswordError:'',\n            user: {\n                \"firstName\":\"\",\n                \"lastName\":\"\",\n                \"email\":\"\",\n                \"password\":\"\",\n                \"confirmPassword\":\"\"\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n\n    componentDidMount(){\n        this.setState({\"mounted\":true});\n        //add listener\n        CreateUserService.isLoading.pipe(takeWhile(f => f==true)).subscribe( (data)=>{\n            this.setState({isLoading: data});\n        } )\n    }\n\n    componentWillUnmount(){\n        this.setState({\"mounted\":false});\n    }\n\n\n\n    clearValidationErrors(){\n        this.setState({firstNameError:'',\n            lastNameError:'',\n            emailError:'',\n            passwordError:'',\n            confirmPasswordError:''});\n    }\n\n\n    isValidForm(){\n        this.clearValidationErrors();\n\n        let isValid = true;\n        if(!this.state.firstName){\n            isValid = false;\n            this.setState({firstNameError: \"First name is required\"});\n        }\n        if(!this.state.email){\n            isValid = false;\n            this.setState({emailError: \"Email is required\"});\n        }\n        if(!this.state.password){\n            isValid = false;\n            this.setState({passwordError: \"A password is required\"});\n        }\n\n        return isValid;\n    }\n\n\n    /**\n     * Submit form, on success redirect to the dashboard.\n     * @param event\n     */\n    handleSubmit(event)\n    {\n        console.log(\"handleSubmit - create user\");\n\n        //block double-click\n        if( this.state.isLoading ) return;\n\n        let isValid = this.isValidForm();\n        if( this.state.password !== this.state.confirmPassword){\n            isValid = false;\n            this.setState({confirmPasswordError: \"The passwords must match\"});\n        }\n\n\n        if( isValid ) {\n            this.setState({isLoading: true});\n\n            var _user = {};\n            _user.firstName = this.state.firstName;\n            _user.lastName = this.state.lastName;\n            _user.email = this.state.email;\n            _user.password = this.state.password;\n\n\n            this.createUserSubscription = CreateUserService.sink\n                .pipe(takeWhile(f => f==true))\n                .subscribe( (data_) => {\n                    //load all the users (with our new user)\n                    console.log(\"AuthActions.createUser.sink: \");\n                    console.dir(data_);\n\n                    //after creation, reload all users\n                    GetAllUsersService.source.next(true);\n                }, (error_) => {\n                    alert(error_);\n                });\n\n\n            CreateUserService.source.next(_user);\n        }\n\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <Paper style={{maxWidth:'800px'}}>\n                <GridContainer gap=\"16px\" rowTemplate=\"48px auto\" columnTemplate=\"1fr 1fr\" style={{'margin':'16px'}}>\n\n                    <GridItem rows=\"1\" columns=\"1 / 3\" style={{'borderBottom':'1px solid #ccc'}}>\n                        <div><strong><FormattedMessage id=\"SignupCard.label\" defaultMessage=\"Create First User\"/></strong></div>\n                    </GridItem>\n\n                    <GridItem rows=\"2\" columns=\"1/2\">\n                        <TextField\n                            label=\"First Name\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.firstName}\n                            onChange={(e)=>{this.setState({firstName:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.firstNameError.length>0} helperText={this.state.firstNameError}\n                        />\n                    </GridItem>\n                    <GridItem rows=\"2\" columns=\"2/3\">\n                        <TextField\n                            label=\"Last Name\"\n                            className={classes.textField}\n                            value={this.state.lastName}\n                            onChange={(e)=>{this.setState({lastName:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.lastNameError.length>0} helperText={this.state.lastNameError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"3\" columns=\"1/3\">\n                        <TextField\n                            label=\"Email\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.email}\n                            onChange={(e)=>{this.setState({email:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.emailError.length>0} helperText={this.state.emailError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"4\" columns=\"1/3\">\n                        <TextField\n                            type=\"password\"\n                            label=\"Password\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.password}\n                            onChange={(e)=>{this.setState({password:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.passwordError.length>0} helperText={this.state.passwordError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"5\" columns=\"1/3\">\n                        <TextField\n                            type=\"password\"\n                            required={true}\n                            label=\"Confirm Password\"\n                            className={classes.textField}\n                            value={this.state.confirmPassword}\n                            onChange={(e)=>{this.setState({confirmPassword:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.confirmPasswordError.length>0} helperText={this.state.confirmPasswordError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"6\" columns=\"1/3\">\n                        The first thing we need to do is create an login for you that will be\n                        registered as the \"Administrator\" of this system.\n                    </GridItem>\n\n                    <GridItem rows=\"7\" columns=\"1/3\">\n                        After you login, you will be able to create accounts for each member of your family, in the <strong>User Manager.</strong>\n                    </GridItem>\n\n                    <GridItem rows=\"8\" columns=\"1/3\" style={{\"textAlign\":\"right\"}}>\n                        <LoadingButton isLoading={this.state.isLoading}\n                                       label={\"Create User\"}\n                                       onClick={this.handleSubmit}/>\n                    </GridItem>\n\n                </GridContainer>\n\n            </Paper>\n        )\n    }\n}\n\n\nexport default injectIntl(withStyles(styleSheet)(SignupCard));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoginService {\n\n    isLoading=new BehaviorSubject(false); //todo, wire up\n    source = new Subject();\n    sink = new Subject();\n\n    constructor() {\n        this.source.subscribe(this.login.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    login(data_)\n    {\n        //console.log(\"{Login Service} login(\" +data_.username +\",\" +data_.password +\")\");\n        const baseUrl = AppSettings.baseHost.getValue();\n        //const user = AppSettings.basicUser.getValue();\n        //const pwd = AppSettings.basicPwd.getValue();\n\n        //var _salt = new Date().getTime();\n        var _url = baseUrl +'/login';\n\n        let formData = new FormData();\n        formData.append('username', data_.username);\n        formData.append('password', data_.password);\n\n        fetch(_url, {\n            method: \"POST\",\n            body: formData\n        })\n            .then(response => {\n                console.log(\"login success handler\");\n                console.dir(response);\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    if( response.url.indexOf(\"/home/\") > -1) {\n                        window.location = response.url\n                    }\n                }\n            })\n            .catch(e => {\n                console.warn(e);\n                window.location = \"/\";\n            });\n\n    }\n\n}\n\n\nexport default new LoginService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../AppSettings';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass GetAllUsersService {\n\n    isLoading = new BehaviorSubject(false);\n    source = new Subject();\n    sink = new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.getUsers.bind(this));\n\n        //refresh the list after any user data is saved\n        //saveUserSink_.subscribe(this.getUsers.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    async getUsers()\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/core/api/users';\n\n        const headers = new Headers();\n        headers.append('pragma', 'no-cache');\n        headers.append('cache-control', 'no-cache');\n\n\n        //Save or Create user\n        const users = await fetch( _url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers\n        })\n        //parse json\n        .then(async (response) => response.json())\n        .then( (users) => {\n            var list = [];\n            for (var i = 0; i < users._embedded.users.length; i++) {\n                var item = users._embedded.users[i];\n                list.push(item);\n            }\n            //sort by username (friendly first name0\n            var _sortedUsers = list.sort(function (a, b) {\n                if (a.firstName > b.firstName) return 1;\n                if (a.firstName < b.firstName) return -1;\n                return 0;\n            });\n\n            return _sortedUsers;\n        })\n        .then( (users) => {\n            //flip flag\n            this.isLoading.next(false);\n            return users;\n        })\n        .catch(err => {\n            //send the error to the store (through the sink observer\n            if( err.status === 401 || err.status === 403){\n                window.location = \"/\";\n            } else {\n                var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText||err.message};\n                console.warn(_error);\n                //this.sink.error(_error);\n                //reload\n                setTimeout(()=>{\n                    UserActions.getAllUsers.source.next(true);\n                }, 500);\n\n            }\n        });\n\n        if( users ) {\n            this.sink.next(users);\n        }\n    }\n\n}\n\n\nexport default new GetAllUsersService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport { takeWhile } from 'rxjs/operators';\n\nimport Clock from '../../components/clock/Clock';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport LoginCards from '../../components/logincards/LoginCards';\nimport SignupCard from '../../components/signupcard/SignupCard';\n\nimport AppActions from '../../library/actions/AppActions';\nimport LoginService from \"../../services/LoginService\";\nimport GetAllUsersService from \"../../library/actions/processors/GetAllUsersService.js\";\n\n\nconst styleSheet = (theme) => ({\n    wrapper:{\n\n    },\n\n    loginView: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 0,\n\n        display: 'flex',\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundSize: 'cover !important',\n        backgroundRepeat: 'no-repeat !important',\n\n    },\n    timeClock: {\n        position: 'absolute',\n        bottom:   '20px',\n        right:    '40px',\n        width:    '280px'\n    },\n    progress: {\n        margin: `0 ${theme.spacing.unit * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%'\n    }\n});\n\nclass Login extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            isMounted:true,\n            isLoading:true,\n            users: undefined,\n            activeUser: undefined,\n            offlineImage: \"/images/hex-grid-blue_tran.jpg\",\n            backgrounds: [\n                \"/images/AS6_9771-180__.jpg\"\n                , \"/images/lake-marina_GkuzZvKu__.jpg\"\n                , \"/images/DSC_5803-777__.jpg\"\n                , \"/images/pebble-stack_XJX4rE__.jpg\"\n                , \"/images/fire-texture-15_GyOwSEFd__.jpg\"\n                , \"/images/lake_GyXLZDKu__.jpg\"\n            ]\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleCancelCardSelection = this.handleCancelCardSelection.bind(this);\n        this.handleCardSelection = this.handleCardSelection.bind(this);\n    }\n\n\n    componentWillMount(){\n        this.setState({\"mounted\":true, \"isLoading\": true});\n\n        //takeWhile(() => this.state.mounted).\n        GetAllUsersService.isLoading.subscribe(data => {\n            this.setState({\"isLoading\": data});\n        });\n\n        //\n        GetAllUsersService.sink.takeWhile(() => this.state.mounted).subscribe(users_ => {\n            this.setState({\"users\": users_});\n        });\n\n        //force a logout on page load\n        AppActions.logout.source.next(true);\n        //load all users\n        GetAllUsersService.source.next(true);\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n    handleCardSelection(user) {\n        this.setState({activeUser: user});\n    }\n\n    handleCancelCardSelection(event) {\n        this.setState({activeUser: undefined});\n    }\n\n\n    /**\n     * Submit form, on success redirect to the dashboard.\n     * @param event\n     */\n    handleLogin(username_, password_)\n    {\n        LoginService.source.next({'username':username_, 'password':password_});\n\n        LoginService.sink.subscribe((data)=>{\n            console.log(\"LoginService.sink: SUCCESS\");\n            console.dir(data);\n        }, (err)=>{\n            console.log(\"LoginService.sink: ERROR\");\n            console.dir(err);\n            window.alert(err.message);\n        });\n    }\n\n    randomIntFromInterval(min, max) { // min and max included\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n\n    render() {\n        const classes = this.props.classes;\n        const randomBackground =  this.state.backgrounds[this.randomIntFromInterval(0,this.state.backgrounds.length)];\n\n        if( this.state.isLoading ){\n            return (\n                <div className={classes.loginView}>\n                    <CircularProgress className={classes.progress} size={50}/>\n                </div>\n            );\n        }else {\n            return (\n                <div className={classes.loginView} style={{background: \"url('\" + this.state.offlineImage + \"') no-repeat\"}}>\n                    <div className={classes.loginView} style={{background: \"url('\" + randomBackground + \"') no-repeat\"}}>\n\n                        {(!this.state.users || this.state.users.length === 0) ?\n                            <SignupCard/>\n                            :\n                            <LoginCards\n                                users={this.state.users}\n                                onLogin={this.handleLogin}/>\n                        }\n\n                        <div className={classes.timeClock}>\n                            <Clock/>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default injectIntl(withStyles(styleSheet)(Login));","import React, {Component} from 'react';\n//import {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\n\nimport {withStyles} from '@material-ui/core/styles';\n\n//views\nimport LoginPage from './pages/login/LoginPage';\n\n\n\nconst styleSheet = (theme) => ({\n   //todo\n});\n\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        this.state = {\n            \"context\": context,\n            \"locale\": \"en-EN\",\n            \"isLoading\": false,\n            \"isMounted\": true,\n        };\n\n\n        // set it running locally with npm start, so you can still call running server\n        /*\n        if( window.location.href.indexOf(\":3000\") > -1){\n            AppSettings.baseHost.next(\"http://localhost:9000\");\n            AppSettings.basicUser.next(\"Mike\");\n            AppSettings.basicPwd.next(\"admin\");\n            UserActions.getUser.sink.next( {\"user\":{\"firstName\":\"\",\"lastName\":\"\"}} );\n        }*/\n    }\n\n\n    componentDidMount(){\n        this.setState({\"mounted\":true});\n    }\n\n    componentWillUnmount(){\n        this.setState({\"mounted\":false});\n    }\n\n\n    render() {\n        //const classes = this.props.classes;\n        const locale = \"en-EN\";\n\n        return (\n            <IntlProvider locale={locale} key={locale} messages={this.props.i18nMessages[locale]}>\n                <LoginPage mode=\"login\"/>\n            </IntlProvider>\n        );\n    }\n\n}\n\nexport default withStyles(styleSheet)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {addLocaleData} from 'react-intl';\n//import registerServiceWorker from './registerServiceWorker';\n\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//@see https://www.materialpalette.com\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport './index.css';\n\nimport App from './App';\n\n/**\n * Setup i18n/Localization formats & messages\n */\n//addLocaleData(require('react-intl/locale-data/en'));\nconst i18nMessages = {\n    \"en-EN\":require('./i18n/locales/en-EN.json')\n};\n\n\n\n/**\n * Setup Material-Ui Theme\n */\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light', // Switching the dark mode on is a single property value change.\n        primary: deepPurple, // Purple and green play nicely together.\n        secondary: {\n            ...indigo\n        },\n        error: red\n    }\n});\n\n\n\nconst renderApp = function(){\n\n    ReactDOM.render(\n        <MuiThemeProvider theme={theme}>\n            <App i18nMessages={i18nMessages}/>\n        </MuiThemeProvider>\n        , document.getElementById('root'));\n\n}\n\nrenderApp();\n//registerServiceWorker();\n"],"sourceRoot":""}