{"version":3,"sources":["registerServiceWorker.js","components/clock/Clock.js","library/loadingButton/LoadingButton.js","components/logincards/LoginCard.js","components/logincards/LoginCards.js","library/CssGrid/GridContainer.js","library/CssGrid/GridItem.js","library/actions/processors/LoadClientAppsService.js","library/actions/AppSettings.js","library/actions/processors/LogoutService.js","library/actions/AppActions.js","services/CreateUserService.js","components/signupcard/SignupCard.js","services/LoginService.js","library/actions/processors/GetAllUsersService.js","pages/login/LoginPage.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Clock","props","context","timestamp","Date","getTime","this","timer","setInterval","tick","clearInterval","classes","className","moment","format","Component","withStyles","styleSheet","theme","position","bottom","left","fontSize","color","opacity","LoadingButton","style","handleClick","bind","nextProps","nextState","label","e","onClick","dir","Button","variant","btn","isLoading","CircularProgress","progress","size","injectIntl","padding","marginRight","LoginCard","user","password","mode","handleSelect","handleCancel","handleLogin","handleKeyDown","setState","refs","pwdField","focus","onCancel","onLogin","id","key","onSelect","Paper","width","height","ButtonBase","focusRipple","firstName","extendedContainer","gridRow","gridColumn","Typography","type","TextField","required","value","onKeyDown","onChange","target","personalCard","border","display","gridGap","gridTemplateColumn","gridTemplateRows","LoginCards","selectedUser","username_","password_","event","_users","users","filter","u","outerContainer","loginGrids","map","loginCardItem","gridTemplateColumns","gridAutoRows","GridContainer","_style","gap","rowTemplate","columnTemplate","children","GridItem","rows","columns","LoginService","source_","sink_","sink","undefined","subscribe","loadApps","data_","request","get","withCredentials","set","end","err","res","status","AppActions","navigateTo","next","_error403","_error","statusText","responseText","body","apps","primary","secondary","baseHost","BehaviorSubject","basicUser","localStorage","getItem","basicPwd","LogoutService","getUser","baseUrl","AppSettings","getValue","fetch","method","response","redirected","url","Subject","logout","loadClientApps","source","loadClientAppsService","LoadClientAppsService","logoutService","createUser","username","userProps","toLowerCase","formData","FormData","append","lastName","email","isFamilyAdmin","warn","alert","SignupCard","firstNameError","lastNameError","emailError","passwordError","confirmPasswordError","handleSubmit","CreateUserService","pipe","takeWhile","f","data","clearValidationErrors","isValid","isValidForm","confirmPassword","_user","createUserSubscription","GetAllUsersService","error_","maxWidth","defaultMessage","textField","length","helperText","loginCardForm","backgroundColor","login","_url","indexOf","getUsers","headers","Headers","cache","a","json","list","i","item","push","sort","b","message","setTimeout","UserActions","getAllUsers","Login","isMounted","activeUser","offlineImage","backgrounds","handleCancelCardSelection","handleCardSelection","mounted","users_","min","max","Math","floor","random","randomBackground","randomIntFromInterval","loginView","background","timeClock","wrapper","top","right","flexGrow","flexWrap","alignItems","justifyContent","backgroundSize","backgroundRepeat","margin","spacing","unit","App","locale","messages","i18nMessages","LoginPage","require","createMuiTheme","palette","deepPurple","indigo","red","renderApp","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","checkValidServiceWorker","ready","unregister","reload","registerServiceWorker"],"mappings":"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","file":"static/js/main.16848992.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport moment from 'moment';\n\n\nconst styleSheet = (theme) => ({\n    timestamp: {\n        position: 'absolute',\n        bottom: '15px',\n        left: '20px',\n        fontSize: '48px',\n        color: '#fff',\n        opacity: '.7'\n    }\n});\n\n\n\nclass Clock extends Component {\n\n    constructor(props, context){\n        super(props);\n\n        this.state = {\n            timestamp:new Date().getTime()\n        };\n    }\n\n    componentDidMount(){\n        this.timer = setInterval(this.tick, 1000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.timer);\n    }\n\n    tick(){\n        //this.setState({timestamp: new Date().getTime()});\n    }\n\n    render() {\n        var classes = this.props.classes;\n        return (\n            <div>\n                <div className={classes.timestamp}>{moment().format('h:mm:ss a')}</div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(Clock);\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styleSheet = (theme) => ({\n    btn: {\n        padding: '4px 12px'\n    },\n    progress: {\n        marginRight: `8px`\n    }\n});\n\nclass LoadingButton extends Component {\n\n    constructor(props, context) {\n\n        if( !props.style ){\n            props.style = {};\n        }\n\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.label !== this.props.label);\n    }\n\n    handleClick(e){\n        console.log(\"loading button click\");\n        if( this.props.onClick ){\n            this.props.onClick(e);\n        }else{\n            console.dir(this.props);\n        }\n    }\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                className={classes.btn}\n                style={this.props.style}\n                onClick={this.handleClick}>\n                {this.props.isLoading &&\n                    <CircularProgress className={classes.progress} color=\"#fff\" size={25}/>\n                }\n                {this.props.label}\n            </Button>\n\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(LoadingButton));","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport LoadingButton from '../../library/loadingButton/LoadingButton';\n\nconst styleSheet = (theme) => ({\n    personalCard: {\n        border: '1px solid'\n    },\n    extendedContainer: {\n        display: 'grid',\n        gridGap: '16px',\n        gridTemplateColumn: '125px auto auto auto',\n        gridTemplateRows: '16px auto auto auto auto 16px'\n    }\n});\n\nclass LoginCard extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            user: {\n                \"firstName\": \"\",\n                \"lastName\": \"\",\n                \"email\": \"\"\n            },\n            password:'',\n            mode: \"minimal\",\n            isLoading:false\n        };\n\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n    }\n\n\n\n    componentDidMount() {\n        this.setState({\"mounted\":true});\n        if (this.refs.pwdField) this.refs.pwdField.focus();\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n    handleCancel() {\n        this.setState({mode: 'minimal', 'isLoading':false});\n\n        if (this.props.onCancel) {\n            this.props.onCancel();\n        }\n    }\n\n    handleLogin(){\n        if (this.props.onLogin) {\n            this.props.onLogin(this.props.user.id, this.state.password);\n        }\n    }\n\n    handleKeyDown(e){\n        if (e.key === 'Enter') {\n            this.handleLogin();\n        }\n    }\n\n\n    handleSelect() {\n        this.setState({mode: 'extended'});\n\n        if (this.props.onSelect) {\n            this.props.onSelect(this.props.user);\n        }\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        if (this.state.mode === \"minimal\") {\n            return (\n                <Paper style={{width: '150px', height: '176px'}}>\n                    <ButtonBase focusRipple\n                                onClick={this.handleSelect}\n                                style={{'width': '100%', 'backgroundColor': '#fff'}}>\n                        <AccountCircle\n                            style={{'width': 120, 'height': 120}}\n                        />\n                    </ButtonBase>\n                    <ButtonBase focusRipple\n                                onClick={this.handleSelect}\n                                style={{'width': '100%', 'backgroundColor': '#fff'}}>\n                        <h2 style={{'textAlign': 'center'}}>{this.props.user.firstName}</h2>\n                    </ButtonBase>\n                </Paper>\n            );\n        } else {\n            return (\n                <Paper style={{width: '450px', height: '200px'}}>\n                    <div className={classes.extendedContainer}>\n                        <div style={{gridRow: '2/5', gridColumn: '1', 'textAlign':'center'}}>\n                            <AccountCircle\n                                style={{'width': 120, 'height': 120}}\n                            />\n                        </div>\n                        <div style={{gridRow: '2', gridColumn: '2'}}>\n                            <Typography type=\"title\" style={{'textAlign': 'left'}}>{this.props.user.firstName}</Typography>\n                        </div>\n                        <div style={{gridRow: '3', gridColumn: '2'}}>\n                            <TextField\n                                type=\"password\"\n                                label=\"Password\"\n                                required={true}\n                                style={{'width':'100%'}}\n                                value={this.state.password}\n                                onKeyDown={this.handleKeyDown}\n                                onChange={(e)=> {\n                                    this.setState({password: e.target.value})\n                                }}\n                            />\n                        </div>\n                        <div style={{gridRow: '4', gridColumn: '2'}}>\n                            <Button color=\"primary\" onClick={this.handleCancel}>Cancel</Button>\n\n                            <LoadingButton\n                                isLoading={this.state.isLoading}\n                                label=\"Login\"\n                                onClick={this.handleLogin}></LoadingButton>\n                        </div>\n                    </div>\n                </Paper>\n            );\n        }\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(LoginCard);","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport LoginCard from './LoginCard';\n\nconst styleSheet = (theme) => ({\n    outerContainer:{\n        width:'100%',\n        height:'100%',\n        display: 'grid',\n        gridGap: '24px',\n        gridTemplateRows: '1fr 80% 1fr',\n        gridTemplateColumns: '1fr 80% 1fr'\n    },\n    loginGrids:{\n        width:'100%',\n        height:'100%',\n        display: 'grid',\n        gridGap: '24px',\n        gridAutoRows: 'auto',\n        gridTemplateColumns: 'repeat(auto-fill, 150px)'\n    },\n    loginCardItem:{\n\n    }\n});\n\n//  /* or 'row', 'row dense', 'column dense' */\nclass LoginCards extends Component {\n\n     constructor(props, context) {\n        super(props);\n\n        this.state = {\n            selectedUser:null\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.setState({\"mounted\":true});\n        if (this.refs.pwdField) this.refs.pwdField.focus();\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n\n    handleLogin(username_, password_){\n        if (this.props.onLogin) {\n            this.props.onLogin(username_, password_);\n        }\n    }\n\n    /**\n     * Select an inactive user\n     * @param event\n     */\n    handleSelect(event){\n        //event.target = this.getDOMNode();\n        this.props.onSelect(this.props.user);\n    }\n\n\n\n    render(){\n        var classes = this.props.classes;\n\n        let _users = [];\n        if( this.props.users ){\n            _users = this.props.users;\n            if( this.state.selectedUser !== null ) {\n                _users = _users.filter( (u)=>u.id === this.state.selectedUser.id );\n            }\n        }\n\n        return(\n            <div className={classes.outerContainer}>\n                <div style={{'gridColumn': '2/3', 'gridRow':'2/3'}}>\n                    <div className={classes.loginGrids}>\n\n                        {_users.map((user)=> {\n                            return (\n                                <div key={user.id}  className={classes.loginCardItem}>\n                                    <LoginCard\n                                        user={user}\n                                        onLogin={this.handleLogin}\n                                        onCancel={(u)=>this.setState({\"selectedUser\":null})}\n                                        onSelect={(u)=>this.setState({\"selectedUser\":u})}/>\n                                </div>\n                            );\n                        })}\n\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(LoginCards);","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass GridContainer extends Component {\n\n    render() {\n        var _style = {};\n        if( this.props.style ) {\n            _style = this.props.style;\n        }\n\n        _style.display = \"grid\";\n        if( !_style.width ) {\n            //_style.width = \"100%\";\n        }\n        if( !_style.height ) {\n            //_style.height = \"100%\";\n        }\n        if( !_style.gridGap ) {\n            _style.gridGap = this.props.gap;\n        }\n        if( !_style.gridTemplateRows ) {\n            _style.gridTemplateRows = this.props.rowTemplate;\n        }\n        if( !_style.gridTemplateColumns ) {\n            _style.gridTemplateColumns = this.props.columnTemplate;\n        }\n\n        return (\n            <div style={_style} {...this.props}>{this.props.children}</div>\n        );\n    }\n}\n\nGridContainer.propTypes = {\n    gap: PropTypes.number,\n    rowTemplate: PropTypes.string,\n    columnTemplate: PropTypes.string\n};\n\nexport default GridContainer;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass GridItem extends Component {\n\n    render() {\n\n        var _style = {}\n        if( this.props.style ) {\n            _style = this.props.style;\n        }\n\n        if( !_style.gridGap ) {\n            _style.gridGap = this.props.gap;\n        }\n        if( !_style.gridTemplateRows ) {\n            _style.gridRow = this.props.rows;\n        }\n        if( !_style.gridTemplateColumns ) {\n            _style.gridColumn = this.props.columns;\n        }\n\n        return (\n            <div style={_style}>{this.props.children}</div>\n        )\n    }\n}\n\nGridItem.propTypes = {\n    gap: PropTypes.number,\n    rows: PropTypes.string,\n    columns: PropTypes.string\n};\n\nexport default GridItem;","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppActions from '../AppActions';\nimport request from 'superagent';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoginService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.loadApps.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    loadApps(data_)\n    {\n\n        //call server get list of apps\n        request.get('/api/v1/core/clientapps')\n            .withCredentials()\n            .set('Accept', 'application/json')\n            .end((err, res)=>{\n\n                if( !err ){\n\n                    //send results to the store\n                    this.sink.next({\n                        \"primaryApps\": res.body.apps.primary,\n                        \"secondaryApps\": res.body.apps.secondary\n                    });\n\n                }else{\n\n                    //send the error to the store (through the sink observer\n                    if( err.status === 401){\n                        AppActions.navigateTo.next(\"/\");\n                    } else if( err.status === 403) {\n                        var _error403 = {'code': err.status,'message': \"Invalid Login (todo: show toast)\"};\n                        this.sink.error(_error403);\n                    }\n                    else\n                    {\n                        console.dir(err);\n                        var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                        this.sink.error(_error);\n                    }\n\n                }\n\n            });\n\n    }\n\n}\n\n\nexport default LoginService;\n","import {BehaviorSubject} from '@reactivex/rxjs';\n\nclass AppSettings {\n\n    baseHost = new BehaviorSubject(\"\");\n    basicUser = new BehaviorSubject(window.localStorage.getItem(\"u\"));\n    basicPwd = new BehaviorSubject(window.localStorage.getItem(\"p\"));\n\n}\n\nexport default new AppSettings();\n","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../../../library/actions/AppSettings';\n\nclass LogoutService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.getUser.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    getUser(username_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        fetch( baseUrl +'/logout', {\n            method: 'GET'\n        })\n        //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\n\nexport default LogoutService;\n","import {Subject} from '@reactivex/rxjs';\n\nimport LoadClientAppsService from './processors/LoadClientAppsService';\nimport LogoutService from \"./processors/LogoutService\";\n\nclass AppActions {\n\n    constructor() {\n        this.loadClientAppsService = new LoadClientAppsService(this.loadClientApps.source, this.loadClientApps.sink);\n        this.logoutService = new LogoutService(this.logout.source, this.logout.sink);\n    }\n\n\n    //Use this to navigation around the app Or outside\n    navigateTo = new Subject();\n\n    logout = {'source':new Subject(), 'sink':new Subject()};\n\n    //used to call repository to get list of installed apps\n    loadClientApps = {source:new Subject(), sink: new Subject()};\n\n}\n\nexport default new AppActions();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppActions from '../library/actions/AppActions';\nimport AppSettings from '../library/actions/AppSettings';\nimport request from 'superagent';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass CreateUserService {\n\n    isLoading=new BehaviorSubject(false);\n    source=new Subject()\n    sink=new Subject();\n\n    constructor() {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (data_) {\n            this.createUser(data_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    createUser(data_) {\n\n        //flip flag\n        isLoading.next(true);\n\n        var _data = {};\n        if( !data_.username ){\n            data_.username = data_.userProps.firstName.toLowerCase();\n        }\n        _data.username = data_.username;\n\n        var formData = new FormData();\n        formData.append(\"firstName\", data_.userProps.firstName);\n        formData.append(\"lastName\", data_.userProps.lastName);\n        formData.append(\"password\", data_.password);\n        formData.append(\"pwdConfirm\", data_.password);\n        formData.append(\"email\", data_.userProps.email);\n        formData.append(\"isFamilyAdmin\", data_.isFamilyAdmin);\n\n\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/core/api/users';\n\n        fetch(_url, {\n            method: \"POST\",\n            body: formData\n        })\n            .then(response => {\n                console.log(\"CreateUser success handler\");\n                console.dir(response);\n                isLoading.next(false);\n\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n\n                //continue on\n                this.sink.next(true);\n            })\n            .catch(err => {\n                console.warn(err);\n                isLoading.next(false);\n\n                //send the error to the store (through the sink observer\n                if (err.status === 401) {\n                    AppActions.navigateTo.next(\"/\");\n                }\n                else if (err.status === 409) {\n                    // User already exists\n                    AppActions.alert.next(\"User already exists\");\n                }\n                else if (err.status === 403) {\n                    AppActions.alert.next(\"You do not have permission to add a new user\");\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\nexport default new CreateUserService();\n\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from \"react\";\nimport {injectIntl, FormattedMessage} from \"react-intl\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport { takeWhile } from 'rxjs/operators';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport LoadingButton from '../../library/loadingButton/LoadingButton';\n//import AppActions from \"../../actions/AppActions\";\n\nimport { GridContainer, GridItem } from \"../../library/CssGrid\";\nimport CreateUserService from \"../../services/CreateUserService\";\n\n\nconst styleSheet = (theme) => ({\n    loginCardForm:{\n        padding: \"20px\",\n        width: \"100%\",\n        backgroundColor: \"#ffffff\"\n    },\n    textField:{\n        \"width\":\"100%\"\n    }\n});\n\n\n\nclass SignupCard extends Component {\n\n    constructor(props, context){\n        super(props);\n\n        this.state = {\n            isLoading: false,\n            firstNameError:'',\n            lastNameError:'',\n            emailError:'',\n            passwordError:'',\n            confirmPasswordError:'',\n            user: {\n                \"firstName\":\"\",\n                \"lastName\":\"\",\n                \"email\":\"\",\n                \"password\":\"\",\n                \"confirmPassword\":\"\"\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n\n    componentDidMount(){\n        this.setState({\"mounted\":true});\n        //add listener\n        CreateUserService.isLoading.pipe(takeWhile(f => f==true)).subscribe( (data)=>{\n            this.setState({isLoading: data});\n        } )\n    }\n\n    componentWillUnmount(){\n        this.setState({\"mounted\":false});\n    }\n\n\n\n    clearValidationErrors(){\n        this.setState({firstNameError:'',\n            lastNameError:'',\n            emailError:'',\n            passwordError:'',\n            confirmPasswordError:''});\n    }\n\n\n    isValidForm(){\n        this.clearValidationErrors();\n\n        let isValid = true;\n        if(!this.state.firstName){\n            isValid = false;\n            this.setState({firstNameError: \"First name is required\"});\n        }\n        if(!this.state.email){\n            isValid = false;\n            this.setState({emailError: \"Email is required\"});\n        }\n        if(!this.state.password){\n            isValid = false;\n            this.setState({passwordError: \"A password is required\"});\n        }\n\n        return isValid;\n    }\n\n\n    /**\n     * Submit form, on success redirect to the dashboard.\n     * @param event\n     */\n    handleSubmit(event)\n    {\n        console.log(\"handleSubmit - create user\");\n        if( this.state.isLoading ) return;\n\n        let isValid = this.isValidForm();\n        if( this.state.password !== this.state.confirmPassword){\n            isValid = false;\n            this.setState({confirmPasswordError: \"The passwords must match\"});\n        }\n\n\n        if( isValid ) {\n            this.setState({isLoading: true});\n\n            var _user = {};\n            _user.firstName = this.state.firstName;\n            _user.lastName = this.state.lastName;\n            _user.email = this.state.email;\n            _user.password = this.state.password;\n\n\n            this.createUserSubscription = CreateUserService.sink\n                .pipe(takeWhile(f => f==true))\n                .subscribe( (data_) => {\n                    //load all the users (with our new user)\n                    console.log(\"AuthActions.createUser.sink: \");\n                    console.dir(data_);\n\n                    //after creation, reload all users\n                    GetAllUsersService.source.next(true);\n                }, (error_) => {\n                    alert(error_);\n                });\n\n\n            CreateUserService.source.next(_user);\n        }\n\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <Paper style={{maxWidth:'800px'}}>\n                <GridContainer gap=\"16px\" rowTemplate=\"48px auto\" columnTemplate=\"1fr 1fr\" style={{'margin':'16px'}}>\n\n                    <GridItem rows=\"1\" columns=\"1 / 3\" style={{'borderBottom':'1px solid #ccc'}}>\n                        <div><strong><FormattedMessage id=\"SignupCard.label\" defaultMessage=\"Create First User\"/></strong></div>\n                    </GridItem>\n\n                    <GridItem rows=\"2\" columns=\"1/2\">\n                        <TextField\n                            label=\"First Name\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.firstName}\n                            onChange={(e)=>{this.setState({firstName:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.firstNameError.length>0} helperText={this.state.firstNameError}\n                        />\n                    </GridItem>\n                    <GridItem rows=\"2\" columns=\"2/3\">\n                        <TextField\n                            label=\"Last Name\"\n                            className={classes.textField}\n                            value={this.state.lastName}\n                            onChange={(e)=>{this.setState({lastName:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.lastNameError.length>0} helperText={this.state.lastNameError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"3\" columns=\"1/3\">\n                        <TextField\n                            label=\"Email\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.email}\n                            onChange={(e)=>{this.setState({email:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.emailError.length>0} helperText={this.state.emailError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"4\" columns=\"1/3\">\n                        <TextField\n                            type=\"password\"\n                            label=\"Password\"\n                            required={true}\n                            className={classes.textField}\n                            value={this.state.password}\n                            onChange={(e)=>{this.setState({password:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.passwordError.length>0} helperText={this.state.passwordError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"5\" columns=\"1/3\">\n                        <TextField\n                            type=\"password\"\n                            required={true}\n                            label=\"Confirm Password\"\n                            className={classes.textField}\n                            value={this.state.confirmPassword}\n                            onChange={(e)=>{this.setState({confirmPassword:e.target.value});this.clearValidationErrors()}}\n                            error={this.state.confirmPasswordError.length>0} helperText={this.state.confirmPasswordError}\n                        />\n                    </GridItem>\n\n                    <GridItem rows=\"6\" columns=\"1/3\">\n                        The first thing we need to do is create an login for you that will be\n                        registered as the \"Administrator\" of this system.\n                    </GridItem>\n\n                    <GridItem rows=\"7\" columns=\"1/3\">\n                        After you login, you will be able to create accounts for each member of your family, in the <strong>User Manager.</strong>\n                    </GridItem>\n\n                    <GridItem rows=\"8\" columns=\"1/3\" style={{\"textAlign\":\"right\"}}>\n                        <LoadingButton isLoading={this.state.isLoading}\n                                       label={\"Create User\"}\n                                       onClick={this.handleSubmit}/>\n                    </GridItem>\n\n                </GridContainer>\n\n            </Paper>\n        )\n    }\n}\n\n\nexport default injectIntl(withStyles(styleSheet)(SignupCard));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoginService {\n\n    isLoading=new BehaviorSubject(false); //todo, wire up\n    source = new Subject();\n    sink = new Subject();\n\n    constructor() {\n        this.source.subscribe(this.login.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    login(data_)\n    {\n        //console.log(\"{Login Service} login(\" +data_.username +\",\" +data_.password +\")\");\n        const baseUrl = AppSettings.baseHost.getValue();\n        //const user = AppSettings.basicUser.getValue();\n        //const pwd = AppSettings.basicPwd.getValue();\n\n        //var _salt = new Date().getTime();\n        var _url = baseUrl +'/login';\n\n        let formData = new FormData();\n        formData.append('username', data_.username);\n        formData.append('password', data_.password);\n\n        fetch(_url, {\n            method: \"POST\",\n            body: formData\n        })\n            .then(response => {\n                console.log(\"login success handler\");\n                console.dir(response);\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    if( response.url.indexOf(\"/home/\") > -1) {\n                        window.location = response.url\n                    }\n                }\n            })\n            .catch(e => {\n                console.warn(e);\n                window.location = \"/\";\n            });\n\n    }\n\n}\n\n\nexport default new LoginService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../AppSettings';\nimport {Subject, BehaviorSubject} from \"@reactivex/rxjs\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass GetAllUsersService {\n\n    isLoading = new BehaviorSubject(false);\n    source = new Subject();\n    sink = new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.getUsers.bind(this));\n\n        //refresh the list after any user data is saved\n        //saveUserSink_.subscribe(this.getUsers.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    async getUsers()\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/core/api/users';\n\n        const headers = new Headers();\n        headers.append('pragma', 'no-cache');\n        headers.append('cache-control', 'no-cache');\n\n\n        //Save or Create user\n        const users = await fetch( _url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers\n        })\n        //parse json\n        .then(async (response) => response.json())\n        .then( (users) => {\n            var list = [];\n            for (var i = 0; i < users.length; i++) {\n                var item = users[i];\n                if (item.firstName === undefined) {\n                    item.firstName = item.username;\n                }\n                list.push(item);\n            }\n            //sort by username (friendly first name0\n            var _sortedUsers = list.sort(function (a, b) {\n                if (a.username > b.username) return 1;\n                if (a.username < b.username) return -1;\n                return 0;\n            });\n\n            return _sortedUsers;\n        })\n        .catch(err => {\n            //send the error to the store (through the sink observer\n            if( err.status === 401 || err.status === 403){\n                window.location = \"/\";\n            } else {\n                var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText||err.message};\n                console.warn(_error);\n                //this.sink.error(_error);\n                //reload\n                setTimeout(()=>{\n                    UserActions.getAllUsers.source.next(true);\n                }, 500);\n\n            }\n        });\n\n        if( users ) {\n            this.sink.next(users);\n        }\n    }\n\n}\n\n\nexport default new GetAllUsersService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport { takeWhile } from 'rxjs/operators';\n\nimport Clock from '../../components/clock/Clock';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport LoginCards from '../../components/logincards/LoginCards';\nimport SignupCard from '../../components/signupcard/SignupCard';\n\nimport AppActions from '../../library/actions/AppActions';\nimport LoginService from \"../../services/LoginService\";\nimport GetAllUsersService from \"../../library/actions/processors/GetAllUsersService.js\";\n\n\nconst styleSheet = (theme) => ({\n    wrapper:{\n\n    },\n\n    loginView: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 0,\n\n        display: 'flex',\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n        backgroundSize: 'cover !important',\n        backgroundRepeat: 'no-repeat !important',\n\n    },\n    timeClock: {\n        position: 'absolute',\n        bottom:   '20px',\n        right:    '40px',\n        width:    '280px'\n    },\n    progress: {\n        margin: `0 ${theme.spacing.unit * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%'\n    }\n});\n\nclass Login extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            isMounted:true,\n            users: undefined,\n            activeUser: undefined,\n            offlineImage: \"/images/hex-grid-blue_tran.jpg\",\n            backgrounds: [\n                \"/images/AS6_9771-180__.jpg\"\n                , \"/images/lake-marina_GkuzZvKu__.jpg\"\n                , \"/images/DSC_5803-777__.jpg\"\n                , \"/images/pebble-stack_XJX4rE__.jpg\"\n                , \"/images/fire-texture-15_GyOwSEFd__.jpg\"\n                , \"/images/lake_GyXLZDKu__.jpg\"\n            ]\n        };\n\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleCancelCardSelection = this.handleCancelCardSelection.bind(this);\n        this.handleCardSelection = this.handleCardSelection.bind(this);\n    }\n\n\n    componentWillMount(){\n        this.setState({\"mounted\":true, \"isLoading\": true});\n\n        //\n        GetAllUsersService.isLoading.takeWhile(() => this.state.mounted).subscribe(data => {\n            this.setState({\"isLoading\": data});\n        });\n\n        //\n        GetAllUsersService.sink.takeWhile(() => this.state.mounted).subscribe(users_ => {\n            if (users_) {\n                this.setState({\"users\": users_});\n            }\n        });\n\n        //force a logout on page load\n        AppActions.logout.source.next(true);\n        //load all users\n        GetAllUsersService.source.next(true);\n    }\n\n    componentWillUnmount() {\n        this.setState({\"mounted\":false});\n    }\n\n    handleCardSelection(user) {\n        this.setState({activeUser: user});\n    }\n\n    handleCancelCardSelection(event) {\n        this.setState({activeUser: undefined});\n    }\n\n\n    /**\n     * Submit form, on success redirect to the dashboard.\n     * @param event\n     */\n    handleLogin(username_, password_)\n    {\n        LoginService.source.next({'username':username_, 'password':password_});\n\n        LoginService.sink.subscribe((data)=>{\n            console.log(\"LoginService.sink: SUCCESS\");\n            console.dir(data);\n        }, (err)=>{\n            console.log(\"LoginService.sink: ERROR\");\n            console.dir(err);\n            window.alert(err.message);\n        });\n    }\n\n    randomIntFromInterval(min, max) { // min and max included\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n\n    render() {\n        const classes = this.props.classes;\n        const randomBackground =  this.state.backgrounds[this.randomIntFromInterval(0,this.state.backgrounds.length)];\n\n        if( this.state.isLoading ){\n            return (\n                <div className={classes.loginView}>\n                    <CircularProgress className={classes.progress} size={50}/>\n                </div>\n            );\n        }else {\n            return (\n                <div className={classes.loginView} style={{background: \"url('\" + this.state.offlineImage + \"') no-repeat\"}}>\n                    <div className={classes.loginView} style={{background: \"url('\" + randomBackground + \"') no-repeat\"}}>\n\n                        {(!this.state.users || this.state.users.length === 0) ?\n                            <SignupCard/>\n                            :\n                            <LoginCards\n                                users={this.state.users}\n                                onLogin={this.handleLogin}/>\n                        }\n\n                        <div className={classes.timeClock}>\n                            <Clock/>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default injectIntl(withStyles(styleSheet)(Login));","import React, {Component} from 'react';\n//import {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\n\nimport {withStyles} from '@material-ui/core/styles';\n\n//views\nimport LoginPage from './pages/login/LoginPage';\n\n\n\nconst styleSheet = (theme) => ({\n   //todo\n});\n\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        this.state = {\n            \"context\": context,\n            \"locale\": \"en-EN\",\n            \"isLoading\": false,\n            \"isMounted\": true,\n        };\n\n\n        // set it running locally with npm start, so you can still call running server\n        /*\n        if( window.location.href.indexOf(\":3000\") > -1){\n            AppSettings.baseHost.next(\"http://localhost:9000\");\n            AppSettings.basicUser.next(\"Mike\");\n            AppSettings.basicPwd.next(\"admin\");\n            UserActions.getUser.sink.next( {\"user\":{\"firstName\":\"\",\"lastName\":\"\"}} );\n        }*/\n    }\n\n\n    componentDidMount(){\n        this.setState({\"mounted\":true});\n    }\n\n    componentWillUnmount(){\n        this.setState({\"mounted\":false});\n    }\n\n\n    render() {\n        //const classes = this.props.classes;\n        const locale = \"en-EN\";\n\n        return (\n            <IntlProvider locale={locale} key={locale} messages={this.props.i18nMessages[locale]}>\n                <LoginPage mode=\"login\"/>\n            </IntlProvider>\n        );\n    }\n\n}\n\nexport default withStyles(styleSheet)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {addLocaleData} from 'react-intl';\nimport registerServiceWorker from './registerServiceWorker';\n\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//@see https://www.materialpalette.com\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport './index.css';\n\nimport App from './App';\n\n/**\n * Setup i18n/Localization formats & messages\n */\n//addLocaleData(require('react-intl/locale-data/en'));\nconst i18nMessages = {\n    \"en-EN\":require('./i18n/locales/en-EN.json')\n};\n\n\n\n/**\n * Setup Material-Ui Theme\n */\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light', // Switching the dark mode on is a single property value change.\n        primary: deepPurple, // Purple and green play nicely together.\n        secondary: {\n            ...indigo\n        },\n        error: red\n    }\n});\n\n\n\nconst renderApp = function(){\n\n    ReactDOM.render(\n        <MuiThemeProvider theme={theme}>\n            <App i18nMessages={i18nMessages}/>\n        </MuiThemeProvider>\n        , document.getElementById('root'));\n\n}\n\nrenderApp();\nregisterServiceWorker();\n"],"sourceRoot":""}