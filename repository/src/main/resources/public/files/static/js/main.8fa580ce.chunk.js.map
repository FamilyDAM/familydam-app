{"version":3,"sources":["registerServiceWorker.js","library/actions/AppSettings.js","library/actions/AppActions.js","library/sidebar/Sidebar.js","library/appheader/AppHeader.js","library/services/LoadClientAppsService.js","library/appShell/AppShell.js","components/newfolderdialog/NewFolderDialog.js","services/GetFileAndFoldersService.js","components/fileinfosidebar/SingleImageView.js","components/tableView/TableView.js","services/CreateFolderService.js","services/UploadFileService.js","services/DeleteFileOrFolderService.js","services/SaveFileOrFolderService.js","pages/files/FilesPage.js","library/services/GetUserService.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","baseHost","BehaviorSubject","basicUser","localStorage","getItem","basicPwd","navigateTo","Subject","logout","Sidebar","nextProps","nextState","open","this","props","user","apps","secondaryApps","clear","AppActions","source","next","slug","app","classes","profileApp","findApp","Paper","className","sidebarOpen","sidebarClosed","sidebarUserInfo","sidebarUserInfoClosed","sidebarProfileIcon","style","sidebarProfileName","Typography","component","type","name","lastName","sidebarButtons","Button","onClick","handleLogout","path","appListsOpen","appListsClosed","gridColumn","gridRow","openLabel","closedLabel","paddingTop","List","map","item","ListItem","button","key","href","Avatar","marginRight","ListItemText","primary","label","primaryTypographyProps","Component","injectIntl","withStyles","styleSheet","theme","width","minHeight","height","background","padding","display","gridGap","gridTemplateRows","gridTemplateColumns","alignSelf","justifySelf","marginTop","AppHeader","context","state","openMoreMenu","handleToggle","bind","handleOpenMoreMenu","onToggle","event","setState","openMoreMenuAnchorEl","currentTarget","onNavClick","AppBar","root","position","Toolbar","IconButton","menuButton","color","aria-label","variant","flex","handleNavClick","aria-owns","aria-haspopup","moreButton","Menu","id","keepMounted","anchorEl","MenuItem","handleMenuClose","Divider","headerContainer","hamburgerMenu","mainSection","rightSection","textAlign","marginLeft","isLoading","sink","subscribe","loadApps","data_","baseUrl","AppSettings","getValue","_url","headers","Headers","append","fetch","method","cache","credentials","json","response","status","_embedded","primaryApps","forEach","push","_primaryApps","sort","a","b","order","_secondaryApps","AppShell","isOpenCachedValue","undefined","isMounted","isOpen","handleOpenCloseToggle","children","pipe","takeWhile","substring","history","LoadClientAppsService","data","val","setItem","dashboardShellContainerOpen","dashboardShellContainerClosed","header","main","withRouter","fontSize","NewFolderDialog","showModal","hideModal","folderName","handleSave","newProps","onSave","length","visible","onCancel","onOk","okText","cancelText","title","TextField","value","onChange","e","target","margin","path_","getFilesAndFolders","startsWith","req","_nodes","nodes","filter","f","statusText","text","_error","error","request","get","withCredentials","set","end","err","res","alert","responseText","body","toString","TextArea","Input","TabPane","Tabs","Option","Select","SingleImageView","keyword","tabIndex","handleRatingChange","handleTagChange","handleDescriptionChange","handleDescriptionSave","rating","node","onRatingChange","tags","onTagChange","onDescriptionChange","tag","gridListRoot","itemPreview","maxWidth","src","alt","maxHeight","itemRating","allowHalf","float","itemKeywords","mode","placeholder","itemDescription","rows","onBlur","itemInfo","defaultActiveKey","tab","Table","TableBody","TableRow","TableCell","scope","align","moment","format","palette","paper","justifyContent","TableView","showDeleteFileDialog","showSidebar","pendingFileToDelete","folders","files","selectedFile","handleRowClick","handleFileDelete","handleFileDeleteConfirmation","handleFolderDelete","handleFolderDeleteConfirmation","handleNodeChange","attributes","onRowClick","pagination","filters","sorter","extra","console","log","event_","deletePath","onDeleteFile","showDeleteFolderDialog","onDeleteFolder","onNodeChange","c","primaryType","trim","toLowerCase","d","createdDate","dataIndex","render","record","FolderOutlined","mimeType","FileOutlined","fieldNameSorter","to","responsive","fieldDateSorter","parseISO","downloadBtn","_links","download","onDownload","data-path","deleteBtn","self","editBtn","size","selectedRowKeys","selectedRows","getCheckboxProps","disabled","contentType","concat","rowSelection","getRowSelection","rowKey","loading","columns","getColumns","dataSource","hideOnSinglePage","sortDirections","onTableChangeHandler","placement","closable","getContainer","bodyStyle","onClose","React","PureComponent","source_","sink_","props_","createDirectory","formData","FormData","Error","dir","mergeMap","file_","Array","isArray","uploadNextFile","i","debug","file","Observable","of","flatMap","Promise","resolve","reject","uploadFile","then","result","catch","retry","progress","errorMsg","message","filePathName","webkitRelativePath","relativePath","substr","lastIndexOf","lastModified","post","charset","send","parse","onSuccess","on","percent","onProgress","_name","reader","getReader","bytesReceived","read","done","onError","n","execute","node_","JSON","stringify","FilesPage","canAddFile","canAddFolder","showAddFolderDialog","showUploadSidebar","showNewFolderDialog","showUploadDialog","selectedFiles","uploadFiles","visibleRoot","fileInputFieldRef","createRef","uploadRef","validatePath","GetFilesAndFoldersService","CreateFolderService","SaveFileOrFolderService","v","info","pathname","state_","currentPath","newPath","_path","part","parts","split","slice","visibleParts","p","join","folder","location_","DeleteFileOrFolderService","name_","link","document","createElement","appendChild","click","remove","success","fileList","allDone","x","reload","UploadFileService","action","originNode","_sidebarVisible","Dragger","Upload","draggerProps","multiple","listType","directory","showUploadList","showRemoveIcon","showPreviewIcon","showDownloadIcon","UploadOnChangeHandler","customRequest","UploadCustomRequestHandler","itemRender","UploadItemRenderHandler","config","top","duration","maxCount","pathParts","parseBreadcrumbPath","fileGrid","elevation","fileGridAppBar","toolbarContainer","Item","HomeOutlined","icon","FolderAddOutlined","fileGridFileList","handleOnRowClick","handleFileDownload","ref","handleCreateFolder","handleFileChange","spacing","left","transform","zIndex","colorDefault","fileGridSidebar","filePondSidebar","mainGrid","overflow","flexGrow","getUser","username_","redirected","url","App","indexOf","GetUserService","user_","locale","CircularProgress","messages","i18nMessages","require","createMuiTheme","deepPurple","secondary","indigo","red","renderApp","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8fa580ce.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {BehaviorSubject} from '@reactivex/rxjs';\n\nclass AppSettings {\n\n    baseHost = new BehaviorSubject(null);\n    basicUser = new BehaviorSubject(window.localStorage.getItem(\"u\"));\n    basicPwd = new BehaviorSubject(window.localStorage.getItem(\"p\"));\n\n}\n\nexport default new AppSettings();\n","import {Subject} from '@reactivex/rxjs';\nimport LogoutService from \"./processors/LogoutService\";\n\nclass AppActions {\n\n\n\n    //Use this to navigation around the app Or outside\n    navigateTo = new Subject();\n\n    //todo delete\n    logout = {'source':new Subject(), 'sink':new Subject()};\n\n}\n\nexport default new AppActions();\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\n//import Button from '@material-ui/core/Button';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n//import PhotoIcon from '@material-ui/icons/Photo';\n\nimport AppActions from '../actions/AppActions';\n\n\nconst styleSheet = (theme) => ({\n\n    sidebarOpen:{\n        width: '240px',\n        minHeight: '100vh',\n        height: '100%',\n        background:'#fff'\n    },\n\n    sidebarClosed:{\n        width: '72px',\n        minHeight: '100vh',\n        height: '100%',\n        background:'#fff'\n    },\n\n    sidebarUserInfo:{\n        width:'100%',\n        padding:'8px',\n        display:'grid',\n        gridGap: '8px',\n        gridTemplateRows: \"auto\",\n        gridTemplateColumns: \"60px auto\"\n    },\n\n    sidebarUserInfoClosed:{\n        display:'none'\n    },\n\n    sidebarProfileIcon:{\n        gridColumn: \"1\",\n        gridRow: \"1\",\n    },\n\n    sidebarProfileName:{\n        gridColumn: \"2\",\n        gridRow: \"1\",\n        alignSelf:'center'\n    },\n\n    sidebarButtons:{\n        gridColumn: \"1/3\",\n        gridRow: \"2\",\n        justifySelf:'center'\n    },\n\n    appListsOpen:{\n        display:'grid',\n        gridGap: '0px',\n        gridTemplateRows: \"24px auto\",\n        gridTemplateColumns: \"auto\",\n        marginTop:'16px'\n    },\n\n    appListsClosed:{\n        height:'90%',\n        display:'grid',\n        gridGap: '0px',\n        gridTemplateRows: \"0px auto 72px\",\n        gridTemplateColumns: \"auto\"\n    },\n\n    openLabel:{\n        display:'inline'\n    },\n\n    closedLabel:{\n        display:'none'\n    },\n\n\n\n});\n\nclass Sidebar extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.open !== this.props.open\n            || nextProps.user !== this.props.user\n            || nextProps.apps !== this.props.apps\n            || nextProps.secondaryApps !== this.props.secondaryApps);\n    }\n\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        window.location = \"/index.html\";\n    }\n\n\n    findApp(slug, apps){\n        if( apps ) {\n            for (let app of apps) {\n                if (app.slug === slug) {\n                    return app;\n                }\n            }\n        }\n        return null;\n    }\n\n\n\n    render() {\n        var classes = this.props.classes;\n        //find specific app in the installed list of apps, if it's not installed don't show link\n        var profileApp = this.findApp('usermanager', this.props.secondaryApps);\n\n        return (\n            <Paper className={this.props.open?classes.sidebarOpen:classes.sidebarClosed} >\n\n                <Paper className={this.props.open?classes.sidebarUserInfo:classes.sidebarUserInfoClosed}>\n                    <div className={classes.sidebarProfileIcon}>\n                        <AccountCircle\n                            style={{'width': 60, 'height': 60}}\n                        />\n                    </div>\n                    <div className={classes.sidebarProfileName}>\n                        <Typography component=\"div\" type={\"title\"}>{this.props.user.name} {this.props.user.lastName}</Typography>\n                    </div>\n                    <div className={classes.sidebarButtons}>\n\n                        <Button onClick={this.handleLogout}>Logout</Button>\n\n                        {profileApp &&\n                        <Button onClick={()=>AppActions.navigateTo.next(profileApp.path)}>Profile</Button>\n                        }\n                    </div>\n                </Paper>\n\n\n                <div className={this.props.open?classes.appListsOpen:classes.appListsClosed}>\n\n                    <div style={{gridColumn: \"1\",gridRow: \"1\"}}>\n                        <Typography type=\"title\"\n                                    className={this.props.open?classes.openLabel:classes.closedLabel}\n                                    style={{'paddingLeft':'16px', paddingTop:'16px', gridColumn: \"1\", gridRow: \"1\"}}>Apps</Typography>\n                    </div>\n\n                    <List style={{gridColumn: \"1\",gridRow: \"2\"}}>\n\n                        {this.props.apps && this.props.apps.map((item)=>{\n                            return (\n                                <ListItem button key={item.path} onClick={()=>window.location.href = item.path}>\n                                    <Avatar style={{marginRight:'8px'}}>\n                                        <FolderIcon />\n                                    </Avatar>\n                                    <ListItemText primary={item.label} primaryTypographyProps={{type:\"body2\"}}\n                                                  className={this.props.open?classes.openLabel:classes.closedLabel}/>\n                                </ListItem>\n\n                            )\n                        })}\n                    </List>\n\n\n                    <List style={{gridColumn: \"1\",gridRow: \"3\"}} className={!this.props.open?classes.openLabel:classes.closedLabel}>\n                        <ListItem button onClick={()=>window.location.href = '://app-usermanager/index.html'}>\n                            <Avatar>\n                                <AccountCircle\n                                    style={{'width': 48, 'height': 48}}\n                                />\n                            </Avatar>\n                        </ListItem>\n                    </List>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(Sidebar));","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport AppBar from '@material-ui/core/AppBar';\n//import Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport AppActions from '../actions/AppActions';\n\n\nconst styleSheet = (theme) => ({\n\n    root: {\n        width: '100%',\n        height: '64px'\n    },\n    headerContainer: {\n        display: \"grid\",\n        gridTemplateRows: \"auto\",\n        gridTemplateColumns: \"48px auto 48px\"\n    },\n    hamburgerMenu: {\n        display: 'block',\n        gridRow: \"1\",\n        gridColumn: \"1\",\n    },\n    mainSection: {\n        gridRow: \"1\",\n        gridColumn: \"2\"\n    },\n    rightSection: {\n        gridRow: \"2\",\n        gridColumn: \"3\",\n        textAlign: \"right\"\n    },\n    flex: {\n        flex: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: '#ffffff'\n    },\n    moreButton:{\n        color: '#ffffff'\n    }\n});\n\nclass AppHeader extends Component {\n\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            openMoreMenu:false\n        };\n\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleOpenMoreMenu = this.handleOpenMoreMenu.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.onToggle !== this.props.onToggle\n                || nextProps.apps !== this.props.apps\n                || nextState.openMoreMenu !== this.state.openMoreMenu);\n    }\n\n    handleOpenMoreMenu(event){\n        this.setState({ openMoreMenu: true, openMoreMenuAnchorEl: event.currentTarget });\n    }\n\n    handleToggle(){\n        if( this.props.onToggle){\n            this.props.onToggle();\n        }\n    }\n\n    handleNavClick(path){\n        if( this.props.onNavClick){\n            this.props.onNavClick(path);\n        }\n    }\n\n    handleMenuClose(){\n        this.setState({\"openMoreMenu\": false});\n    }\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        window.location = \"/\";\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <AppBar className={classes.root} position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        onClick={this.handleToggle}\n                        className={classes.menuButton}\n                        color=\"secondary\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.flex} onClick={()=>this.handleNavClick('://home/index.html')}>\n                        Family <i>D.A.M</i>\n                    </Typography>\n\n                    <IconButton\n                        aria-label=\"More\"\n                        aria-owns={this.state.open ? 'long-menu' : null}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpenMoreMenu}\n                        className={classes.moreButton}>\n                        <MoreVertIcon/>\n                    </IconButton>\n\n                    <Menu\n                        id=\"long-menu\"\n                        keepMounted\n                        anchorEl={this.state.openMoreMenuAnchorEl}\n                        open={this.state.openMoreMenu}>\n                        <MenuItem onClick={()=>{this.handleLogout();this.handleMenuClose()}}>Logout</MenuItem>\n                        <Divider/>\n                        {this.props.apps && this.props.apps.map((item)=>{\n                            return (\n                                <MenuItem key={item.path}\n                                          color=\"secondary\"\n                                          onClick={()=>{window.location=item.path;this.handleMenuClose()}}>{item.label}</MenuItem>\n                            )\n                        })}\n\n                    </Menu>\n                </Toolbar>\n\n            </AppBar>\n        );\n\n\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(AppHeader));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from \"../actions/AppSettings\";\nimport {BehaviorSubject, Subject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoadClientAppsService {\n\n    isLoading=new BehaviorSubject(false);\n    source=new Subject();\n    sink=new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.loadApps.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    async loadApps(data_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n        const _url = baseUrl +'/api/v1/apps/'; //+'/core/api/apps';\n\n        const headers = new Headers();\n        headers.append('Accept', 'application/hal+json');\n\n        this.isLoading.next(true);\n\n        //Save or Create user\n        const apps = await fetch( _url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers,\n            credentials: 'include'\n        });\n\n        const response = await apps.json();\n        if( apps.status == 200 && response._embedded && response._embedded.apps ){\n            const primaryApps = [];\n            const secondaryApps = [];\n            response._embedded.apps.forEach( (app)=>{\n                if( app.primary ){\n                    primaryApps.push(app);\n                    return;\n                }\n                secondaryApps.push(app);\n            });\n\n            var _primaryApps = primaryApps.sort((a,b)=>a.order - b.order)\n            var _secondaryApps = secondaryApps.sort((a,b)=>a.order - b.order)\n            this.sink.next({\"primaryApps\":_primaryApps, \"secondaryApps\":_secondaryApps});\n        }\n\n    }\n\n}\n\n\nexport default new LoadClientAppsService();\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withRouter} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {takeWhile} from 'rxjs/operators';\n\nimport Sidebar from '../sidebar/Sidebar';\nimport AppHeader from '../appheader/AppHeader';\nimport AppActions from '../actions/AppActions';\nimport LoadClientAppsService from \"../services/LoadClientAppsService\";\n\n\nconst styleSheet = (theme) => ({\n\n    dashboardShellContainerOpen:{\n        display: \"grid\",\n        gridTemplateRows: \"64px auto\",\n        gridTemplateColumns: \"240px auto\"\n\n    },\n    dashboardShellContainerClosed:{\n        display: \"grid\",\n        gridTemplateRows: \"64px auto\",\n        gridTemplateColumns: \"72px auto\"\n    },\n    header: {\n        gridColumn: \"1/3\",\n        gridRow: \"1\",\n        position: \"inherit\",\n        height: '64px'\n    },\n\n    main:{\n        fontSize: '.5rem',\n        background:'#eee'\n    },\n\n});\n\nclass AppShell extends Component {\n\n\n    constructor(props, context) {\n        super(props);\n\n        var isOpenCachedValue = window.localStorage.getItem(\"AppShell.isOpen\");\n\n        if( !isOpenCachedValue ){\n            if( props.open !== undefined ) {\n                isOpenCachedValue = props.open;\n            }else{\n                isOpenCachedValue = true;\n            }\n        }\n\n        this.state = {\n            isMounted:true,\n            isOpen:Boolean(isOpenCachedValue)\n        };\n\n        this.handleOpenCloseToggle = this.handleOpenCloseToggle.bind(this);\n        this.handleOpenMoreMenu = this.handleOpenMoreMenu.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.open !== this.props.open\n            || nextProps.user !== this.props.user\n            || nextProps.children !== this.props.children\n            || nextState.isOpen !== this.state.isOpen\n            || nextState.primaryApps !== this.state.primaryApps\n            || nextState.secondaryApps !== this.state.secondaryApps );\n    }\n\n\n    componentDidMount(){\n        this.setState({\"isMounted\":true});\n\n        AppActions.navigateTo.pipe(takeWhile(() => this.state.isMounted)).subscribe(function(path){\n            //debugger;\n            if ( path !== \"://\" && path.substring(0, 3) === \"://\") {\n                window.location.href = path.substring(2);\n            }else if(this.props.history){\n                this.props.history.push(path);\n            }\n        }.bind(this));\n\n        LoadClientAppsService.sink.pipe(takeWhile(() => this.state.isMounted)).subscribe( (data)=> {\n            if( data ) {\n                this.setState({\n                    \"primaryApps\": data.primaryApps || [],\n                    \"secondaryApps\": data.secondaryApps || []\n                });\n            }\n        });\n        LoadClientAppsService.source.next(true);\n    }\n\n    componentWillUnmount() {\n        this.setState({\"isMounted\":false});\n    }\n\n    handleOpenMoreMenu(event){\n        this.setState({ openMoreMenu: true, openMoreMenuAnchorEl: event.currentTarget });\n    }\n\n    handleOpenCloseToggle(){\n        var val = !this.state.isOpen;\n        this.setState({'isOpen':val});\n        window.localStorage.setItem(\"AppShell.isOpen\", val);\n    }\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        AppActions.navigateTo.next(\"://\");\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        if( !this.props.user ){\n            return (<div></div>);\n        }\n\n        return (\n            <div className={this.state.isOpen?classes.dashboardShellContainerOpen:classes.dashboardShellContainerClosed}>\n                <header className={classes.header}>\n                    <AppHeader\n                        apps={this.state.secondaryApps}\n                        onToggle={this.handleOpenCloseToggle}\n                        onNavClick={(path)=>window.location=path}/>\n                </header>\n\n\n                <Sidebar\n                    user={this.props.user}\n                    apps={this.state.primaryApps}\n                    secondaryApps={this.state.secondaryApps}\n                    open={this.state.isOpen}\n                    onNavClick={(path)=>window.location=path}/>\n\n\n                <div className={classes.main}>\n                    {this.props.children}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(withRouter(withStyles(styleSheet)(AppShell)));","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n//import AppActions from \"../../actions/AppActions\";\n\nimport { Modal } from 'antd';\nimport TextField from '@material-ui/core/TextField';\n\nconst styleSheet = (theme) => ({ });\n\n\n\nclass NewFolderDialog extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            folderName:\"\",\n            open:false\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isMounted:true});\n    }\n\n\n    componentWillUnmount(){\n        this.setState({isMounted:false});\n    }\n\n    componentWillReceiveProps(newProps){\n        this.props = newProps;\n        this.setState({\"open\":newProps.open})\n    }\n\n\n    showModal = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            open: false,\n        });\n    };\n\n\n    handleSave(){\n        if( this.props.onSave && this.state.folderName.length > 0) {\n            this.props.onSave(this.state.folderName)\n        }\n        this.setState({\"open\":false});\n    }\n\n\n    render() {\n        //var classes = this.props.classes;\n        return (\n            <Modal\n                visible={this.state.open}\n                onCancel={this.hideModal}\n                onOk={this.handleSave}\n                okText=\"Create\"\n                cancelText=\"Cancel\"\n                title=\"New Folder\">\n\n                    <TextField\n                        id=\"newFolderName\"\n                        label=\"Folder Name\"\n                        value={this.state.folderName}\n                        onChange={(e)=>this.setState({folderName: e.target.value})}\n                        margin=\"dense\"\n                    />\n\n            </Modal>\n\n        );\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(NewFolderDialog);","import AppActions from '../library/actions/AppActions.js';\nimport AppSettings from '../library/actions/AppSettings.js';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\nclass GetFilesAndFoldersService {\n\n    isLoading = new BehaviorSubject(false);\n    sink = new Subject();\n    source = new Subject();\n\n    constructor() {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (path_) {\n            this.getFilesAndFolders(path_);\n        }.bind(this));\n\n\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async getFilesAndFolders(path_)\n    {\n        //console.log(\"loading files & folders: \" +path_);\n\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n\n        let _url = baseUrl +'/content/';\n\n        if (path_ && path_.length > 1) {\n            if( path_.startsWith(\"http\")){\n                _url = path_;\n            }else {\n                _url = baseUrl + path_;\n            }\n        }\n\n        const headers = new Headers();\n        headers.append('Accept', 'application/hal+json');\n\n        this.isLoading.next(true);\n\n        //Save or Create user\n        const req = await fetch(_url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers,\n            credentials: 'include'\n        });\n\n        const json = await req.json();\n        if (req.status == 200 ) {\n            if( json._embedded ) {\n                var _nodes = json._embedded.nodes.filter(f => !f.name.startsWith(\".\"));\n                this.sink.next(_nodes);\n            }else{\n                this.sink.next([]);\n            }\n\n            this.isLoading.next(false);\n        } else {\n            this.isLoading.next(false);\n            //console.dir(req);\n            var _error = {'code': req.status, 'status': req.statusText, 'message': await req.text()};\n            this.sink.error(_error);\n        }\n\n\n    }\n\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    getFilesAndFoldersOld(path_)\n    {\n        //console.log(\"loading files & folders: \" +path_);\n\n        const baseUrl = AppSettings.baseHost.getValue();\n\n\n        if( path_ !== undefined && path_.length > 0 )\n        {\n\n            //console.log(\"{GetFiles Service} getFiles()\");\n            //\"http://localhost:9000/\"\n            var _url = baseUrl +path_;// + \".graph.1.json/nt:file,sling:file,nt:folder,sling:folder,dam:file,dam:folder/name,index,parent,links,path,jcr:primaryType,jcr:created,jcr:mixinTypes&t=1\";\n\n\n            request.get(_url)\n                .withCredentials()\n                .set('Accept', 'application/json')\n                .end((err, res) => {\n\n                    if (!err) {\n\n                        var _nodes = [];\n                        if (res.body) {\n                            _nodes = res.body.filter(f => !f.name.toString().startsWith(\".\"));\n                        }\n                        this.sink.next(_nodes);\n\n                    } else {\n                        //send the error to the store (through the sink observer\n                        if (err.status === 401) {\n                            AppActions.navigateTo.next(\"/\");\n                        } else if (err.status === 403) {\n                            AppActions.alert.next(\"You do not have permission to access these files\");\n                        } else {\n                            var _error = {\n                                'code': err.status,\n                                'status': err.statusText,\n                                'message': err.responseText\n                            };\n                            this.sink.error(_error);\n                        }\n                    }\n\n                });\n\n        }\n    }\n\n};\n\n\nexport default new GetFilesAndFoldersService();\n","import React, {Component} from 'react';\n\nimport { Input, Rate, Select, Tabs } from 'antd';\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nimport {withStyles} from \"@material-ui/core/styles\";\nimport AppSettings from \"../../library/actions/AppSettings\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport moment from \"moment\";\n\nconst styleSheet = (theme) => ({\n    gridListRoot: {\n        margin: '0px',\n        display:'grid',\n        gridGap:'8px',\n        gridTemplateRows:'175px 25px 50px 25px 50px 25px 25px 3fr',\n        gridTemplateColumns:'16px auto 16px',\n        background: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    itemPreview: {\n        gridRow: '1',\n        gridColumn: '2',\n        justifyContent: 'center'\n    },\n    itemRating: {\n        gridRow: '2',\n        gridColumn: '2'\n    },\n    itemKeywords: {\n        gridRow: '3',\n        gridColumn: '2'\n    },\n    itemDescription: {\n        gridRow: '5',\n        gridColumn: '2',\n        width: '100%'\n    },\n    itemInfo: {\n        gridRow: '8',\n        gridColumn: '2'\n    },\n});\n\n\nclass SingleImageView extends Component {\n\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            keyword: \"\",\n            tabIndex: this.props.tabIndex?this.props.tabIndex:0\n        };\n\n        this.handleRatingChange = this.handleRatingChange.bind(this);\n        this.handleTagChange = this.handleTagChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleDescriptionSave = this.handleDescriptionSave.bind(this);\n    }\n\n    handleRatingChange(rating){\n        this.props.node['rating'] = rating;\n\n        if( this.props.onRatingChange ){\n            this.props.onRatingChange(this.props.node);\n        }\n\n        this.setState({\"rating\":rating}); //set value to refresh UI\n    }\n\n    //send to parent, with keyword field value\n    handleTagChange(tags){\n        this.props.node['tags'] = tags;\n\n        if( this.props.onTagChange ){\n            this.props.onTagChange(this.props.node);\n        }\n\n        this.setState({\"tags\":tags}); //set value to refresh UI\n    }\n\n    //update local prop\n    handleDescriptionChange(event){\n        this.props.node['description'] = event.currentTarget.value;\n        this.setState({\"description\":event.currentTarget.value}); //set value to refresh UI\n    }\n\n    //on focus out, save to server\n    handleDescriptionSave(event){\n        if( this.props.onDescriptionChange ){\n            this.props.onDescriptionChange(this.props.node);\n        }\n    }\n\n\n\n    render(){\n        var classes = this.props.classes;\n\n        const tags = [];\n        if(this.props.node['tags']){\n            this.props.node['tags'].map((tag)=>{\n                tags.push(<Option key={tag}>{tag}</Option>);\n            });\n        }\n\n\n        return (\n            <div className={classes.gridListRoot}>\n\n                <div className={classes.itemPreview} >\n\n                    <div style={{height: '100%', maxWidth: '100%', textAlign: 'center'}}>\n                        <img src={AppSettings.baseHost.getValue() + (this.props.node['path'])}\n                             alt={this.props.node['path']}\n                             style={{maxHeight: '100%', maxWidth: '100%', alignSelf: 'center'}}/>\n                    </div>\n\n                </div>\n\n\n                <div className={classes.itemRating}>\n                    <Rate\n                        allowHalf\n                        onChange={this.handleRatingChange}\n                        value={this.props.node['rating']}\n                        style={{ float: 'right' }}/>\n                </div>\n\n\n\n                <div className={classes.itemKeywords}>\n                    <Typography variant=\"h6\">Keywords:</Typography>\n\n                    <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Tags Mode\" value={this.props.node['tags']} onChange={this.handleTagChange}>\n                        {tags}\n                    </Select>\n                </div>\n\n                <div className={classes.itemDescription}>\n                    <Typography variant=\"h6\">Description:</Typography>\n                    <TextArea id=\"description\"\n                              rows={3}\n                              value={this.props.node['description']}\n                              onChange={this.handleDescriptionChange}\n                              onBlur={this.handleDescriptionSave}></TextArea>\n                </div>\n\n                <div className={classes.itemInfo}>\n\n                    <Tabs defaultActiveKey=\"details\" style={{width:'100%'}}>\n                        <TabPane tab=\"Details\" key=\"details\">\n                            <div>\n                                <Table>\n                                    <TableBody>\n                                        <TableRow style={{padding:'8px'}}>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Type</TableCell>\n                                            <TableCell align=\"left\">{this.props.node['mimeType']}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Resolution</TableCell>\n                                            <TableCell align=\"left\">{this.props.node['width']} x {this.props.node['height']}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Created</TableCell>\n                                            <TableCell align=\"left\">{moment(this.props.node['dateCreated']).format('MMM Do YYYY, h:mm:ss a')}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Modified</TableCell>\n                                            <TableCell align=\"left\">{moment(this.props.node['dateLastModified']).format('MMM Do YYYY, h:mm:ss a')}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                                <br/>\n                                <p>{this.props.node['path']}</p>\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Versions\" key=\"versions\">\n                            (coming soon)\n                        </TabPane>\n                        <TabPane tab=\"Duplicates\" key=\"duplicates\">\n                            (coming soon)\n                        </TabPane>\n                    </Tabs>\n\n                </div>\n\n\n            </div>\n        )\n\n    }\n}\n\nexport default withStyles(styleSheet)(SingleImageView);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {Drawer, Modal, Space, Table} from 'antd';\nimport {FileOutlined, FolderOutlined} from '@ant-design/icons';\n\n\nimport {format, parseISO} from 'date-fns'\nimport Button from \"@material-ui/core/Button\";\nimport SingleImageView from \"../fileinfosidebar/SingleImageView\";\n\n\nclass TableView extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMounted: true,\n            showDeleteFileDialog: false,\n            showSidebar: false,\n            pendingFileToDelete: [],\n            folders: [],\n            files: [],\n            selectedFile: {}\n        };\n\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleFileDelete = this.handleFileDelete.bind(this);\n        this.handleFileDeleteConfirmation = this.handleFileDeleteConfirmation.bind(this);\n        this.handleFolderDelete = this.handleFolderDelete.bind(this);\n        this.handleFolderDeleteConfirmation = this.handleFolderDeleteConfirmation.bind(this);\n        this.handleNodeChange = this.handleNodeChange.bind(this);\n    }\n\n    handleRowClick(e){\n        const id = e.currentTarget.attributes['data-id'].value;\n        this.props.onRowClick(id);\n    }\n\n    onTableChangeHandler(pagination, filters, sorter, extra){\n        //extra: { currentDataSource: [], action: paginate | sort | filter }\n        console.log(\"onTableChange\");\n    }\n\n    handleFileDelete(event_){\n        const path = event_.currentTarget.attributes['data-path'].value;\n        this.setState({showDeleteFileDialog:true, deletePath:path});//, pendingFileToDelete: path_\n        return false;\n    }\n\n    handleFileDeleteConfirmation(event_){\n        if( this.props.onDeleteFile ) this.props.onDeleteFile(this.state.deletePath);\n        this.setState({showDeleteFileDialog:false, deletePath:null}); //, pendingFileToDelete: path_\n        return false;\n    }\n\n    handleFolderDelete(event_){\n        const path = event_.currentTarget.attributes['data-path'].value;\n        this.setState({showDeleteFolderDialog:true, deletePath:path}); //, pendingFolderToDelete: path_\n        return false;\n    }\n\n    handleFolderDeleteConfirmation(event_){\n        if( this.props.onDeleteFolder ) this.props.onDeleteFolder(this.state.deletePath);\n        this.setState({showDeleteFolderDialog:false, deletePath:null}); //, pendingFolderToDelete: path_\n        return false;\n    }\n\n    //Save changes\n    handleNodeChange(node){\n        if( this.props.onNodeChange ){\n            this.props.onNodeChange(node);\n        }\n    }\n\n\n    fieldNameSorter(a, b, c){\n        //first put folders before files\n        console.log(c);\n        if( a.primaryType===\"nt:folder\" && b.primaryType===\"nt:file\") return -1;\n        else if( a.primaryType===\"nt:file\" && b.primaryType===\"nt:folder\") return 1;\n        else if( a.primaryType === b.primaryType) {\n            // sort by field\n            if( a.name.trim().toLowerCase() < b.name.trim().toLowerCase() ) return -1;//c===\"descend\")?-1:1;\n            else if( a.name.trim().toLowerCase() > b.name.trim().toLowerCase() ) return 1;//c===\"descend\")?1:-1;\n            else return 0;\n        }\n        else return 0;\n    }\n\n    fieldDateSorter(a, b, c, d){\n        //first put folders before files\n        if( a.primaryType===\"nt:folder\" && b.primaryType===\"nt:file\") return -1;\n        else if( a.primaryType===\"nt:file\" && b.primaryType===\"nt:folder\") return 1;\n        else if( a.primaryType === b.primaryType) {\n            // sort by field\n            if( a.createdDate < b.createdDate ) return c===\"ascend\"?1:-1;\n            else if( a.createdDate > b.createdDate ) return c===\"ascend\"?-1:1;\n            else return 0;\n        }\n        else return 0;\n    }\n\n\n\n\n    getColumns(){\n        return [\n            {\n                title: '',\n                dataIndex: 'type',\n                width: 30,\n                render: (text, record) => {\n                    if( record.primaryType === \"nt:folder\" ){\n                        return (<FolderOutlined style={{fontSize:'24px'}}/>);\n                    }if( record.primaryType === \"nt:file\" && record.mimeType.startsWith(\"image/\") ){\n                        return (<img src={record.path +\"?size=100\"} alt=\"\" style={{width:'24px'}}/>);\n                    }else{\n                        return (<FileOutlined style={{fontSize:'24px'}}/>);\n                    }\n                }\n            }, {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                sorter: this.fieldNameSorter,\n                render: (text, record) => {\n\n                    if( record.primaryType === \"nt:folder\" ){\n                        return (<Link to={record.path}>{text}</Link>);\n                    }else{\n                        return (<a onClick={()=>this.setState({showSidebar:true, selectedFile: record})}>{text}</a>);\n                    }\n                },\n            },\n            {\n                title: 'Date Created',\n                dataIndex: 'dateCreated',\n                key: 'dateCreated',\n                width: 200,\n                responsive: ['md'],\n                sorter: this.fieldDateSorter,\n                render: text => <span>{text?format(parseISO(text || \"\"),'yyyy-MM-dd hh:mm:ss a'):''}</span>,\n            },\n            {\n                title: 'Action',\n                key: 'action',\n                width: 200,\n                render: (text, record) => {\n                    const downloadBtn = record._links.download && this.props.onDownload? <Button type=\"link\" data-path={record.path} onClick={()=>this.props.onDownload(record.name, record._links.download.href)}>Download</Button> : <span/>;\n                    const deleteBtn = record._links.self? <Button type=\"link\" data-path={record.path} onClick={this.handleFileDelete}>Delete</Button> : <span/>;\n                    const editBtn = <span/>; //<Button type=\"link\" data-path={record.path} onClick={()=>this.setState({showSidebar:true, selectedFile: record})}>Edit</Button>\n\n                    if (record.primaryType === 'nt:file' && record.mimeType.startsWith(\"image/\")) {\n                        return (<Space size=\"middle\">\n                            {downloadBtn}\n                            {deleteBtn}\n                            {editBtn}\n                        </Space>)\n                    } else {\n                        return (<Space size=\"middle\">\n                            {downloadBtn}\n                            {deleteBtn}\n                        </Space>)\n                    }\n                },\n            },\n        ];\n    }\n\n    getRowSelection(){\n        return  {\n            onChange: (selectedRowKeys, selectedRows) => {\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n            },\n            getCheckboxProps: record => ({\n                disabled: record.contentType === 'application/folder', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n    }\n\n\n\n    render() {\n        const classes = this.props.classes;\n\n\n        let rows = [];\n        rows = rows.concat(this.props.folders);\n        rows = rows.concat(this.props.files);\n        rows.sort(this.fieldNameSorter);\n\n        const rowSelection = this.getRowSelection();\n\n        return (\n            <div>\n                <Table rowKey=\"path\"\n                       loading={this.props.loading}\n                       columns={this.getColumns()}\n                       dataSource={rows}\n                       size=\"small\"\n                       pagination={{'pageSize':10, hideOnSinglePage:false}}\n                       sortDirections={['ascend', 'descend']}\n                       rowSelection={{\n                           type: \"checkbox\",\n                           ...rowSelection,\n                       }}\n                       onChange={this.onTableChangeHandler}></Table>\n\n                <Drawer\n                    title=\"File Info\"\n                    placement=\"right\"\n                    closable={true}\n                    getContainer={false}\n                    width=\"350\"\n                    bodyStyle={{padding:'0px'}}\n                    onClose={()=>this.setState({showSidebar:false, selectedFile:{}})}\n                    visible={this.state.showSidebar}\n                >\n                    <SingleImageView\n                        node={this.state.selectedFile}\n                        onRatingChange={this.handleNodeChange}\n                        onDescriptionChange={this.handleNodeChange}\n                        onTagChange={this.handleNodeChange}/>\n                </Drawer>\n\n                <Modal\n                    visible={this.state.showDeleteFileDialog}\n                    onCancel={() => {this.setState({showDeleteFileDialog: false})}}\n                    onOk={this.handleFileDeleteConfirmation}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Are you sure?\">\n                    <p>Do you want to delete this file?</p>\n                </Modal>\n\n                <Modal\n                    visible={this.state.showDeleteFolderDialog}\n                    onCancel={() => {this.setState({showDeleteFolderDialog: false})}}\n                    onOk={this.handleFolderDeleteConfirmation}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Are you sure?\">\n                    <p>Do you want to delete this folder and all files in it?</p>\n                </Modal>\n            </div>\n\n    );\n\n    }\n}\n\nTableView.propTypes = {\n    files: PropTypes.array.isRequired,\n    folders: PropTypes.array.isRequired,\n};\n\nexport default withRouter(TableView);","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass CreateFolderService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (props_) {\n            this.createDirectory(props_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async createDirectory(props_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n\n        var _name = props_.name ;\n        var _url = baseUrl +props_.path +\"/\";\n\n        var formData = new FormData();\n        formData.append(\"name\", props_.name);\n        formData.append(\"jcr:primaryType\", \"nt:folder\");\n\n        try {\n            const req = await fetch(_url, {\n                method: \"POST\",\n                body: formData,\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                const body = await req.json();\n                const location = body._links.self.href;\n                this.sink.next(location);\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n        /**\n            .then(response => {\n                console.info(\"CreateFolder success handler\");\n                if(response.redirected) {\n                    console.debug(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                //continue on\n                this.sink.next(true);\n            })\n            .then((response) => response.json())\n            .then(json => {\n                if (!json.firstName) {\n                    json.firstName = json.username;\n                }\n                this.sink.next(json);\n            })\n            .catch(err => {\n                console.warn(err);\n                //send the error to the store (through the sink observer\n                if (err.status === 401) {\n                    AppActions.navigateTo.next(\"/\");\n                }\n                else if (err.status === 403) {\n                    AppActions.alert.next(\"You do not have permission to add a new user\");\n                } else {\n                    console.error(err);\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n         **/\n\n\n        /**\n        return $.ajax({\n                    method: \"post\",\n                    url: _dir,\n                    data: {':name':_name, 'jcr:mixins':'dam:folder'},\n                    'xhrFields': {\n                        withCredentials: true\n                    }\n                }).then(function(data_, status_, xhr_){\n                    _this.sink.onNext(data_);\n                    // refresh the overall directories list\n                    DirectoryActions.refreshDirectories.onNext(true);\n                    FileActions.refreshFiles.onNext(true);\n\n                    // update token\n                    var _token = xhr_.getResponseHeader(\"X-Auth-Token\");\n                    if( _token != null && _token !== undefined ){\n                        AuthActions.saveToken.onNext(_token);\n                    }\n\n                }, function (xhr_, status_, errorThrown_){\n\n                    //send the error to the store (through the sink observer\n                    if( xhr_.status == 401){\n                        AuthActions.loginRedirect.onNext(true);\n                    }else\n                    {\n                        UserActions.alert.onNext(\"Error creating folder, you might now have permission\");\n                        //var _error = {'code':xhr_.status, 'status':xhr_.statusText, 'message': xhr_.responseText};\n                        //_this.sink.onError(_error);\n                    }\n                });\n         **/\n\n\n    }\n\n}\n\n\nexport default new CreateFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject, BehaviorSubject, Observable} from '@reactivex/rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport request from \"superagent\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass UploadFileService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.pipe(mergeMap(file_ => {\n            if( Array.isArray(file_) ){\n                for (var i = 0; i < file_.length; i++) {\n                    var file = file_[i];\n                    return this.uploadNextFile(file_);\n                }\n            }else {\n                return this.uploadNextFile(file_);\n            }\n        }, 3)).subscribe(console.debug);\n    }\n\n\n\n    uploadNextFile(props_) {\n\n        //console.log(\"file: \" + file);\n\n        if (props_.file)//!file.path)\n        {\n            //console.log(\"else clause, upload\");\n            //debugger;\n            return Observable\n                .of(props_)\n                .flatMap(req => new Promise((resolve, reject) => {\n                    return this.uploadFile(props_)\n                        .then(result=>resolve(result))\n                        .catch(err => {\n                            //debugger;\n                            let retry = 1;\n                            if( props_.retry ){\n                                retry=props_.retry+1;\n                            }\n                            props_.progress = 0;\n                            props_.retry = retry;\n                            props_.errorMsg = \"Retrying request (\" +retry +\"/3)\";\n                            return reject(err);\n                        });\n                })).retry(2).catch(err => {\n                    //debugger;\n                    //var _error = {'code': err.status, 'message': err.message};\n                    props_.errorMsg = err.status +\": \" +err.message;\n                    props_.progress = 0;\n                    return Observable.of(err);\n                });\n\n        }\n\n        return null;\n    }\n\n\n\n    /**\n     * The server can't access the file locally, or we are in a browser.\n     * So this method will do a regular AJAX file upload\n     * @param dir\n     * @param path\n     */\n    uploadFile(props_) {\n\n        var filePathName = props_.path;\n        if( props_.file.webkitRelativePath ){\n            filePathName = props_.file.webkitRelativePath;\n        }else if( props_.file.relativePath ){\n            filePathName += props_.file.relativePath.substr(0, props_.file.relativePath.lastIndexOf(\"/\"));\n        }\n\n\n        var formData = new FormData();\n        formData.append(\"name\", props_.file.name);\n        formData.append(\"path\", filePathName);\n        formData.append(\"destination\", filePathName);\n        formData.append(\"file\", props_.file);\n        formData.append(\"type\", props_.file.type);\n        formData.append(\"size\", props_.file.size);\n        formData.append(\"jcr:primaryType\", \"nt:file\");\n        formData.append(\"dam:date.created\", props_.file.lastModified);\n        formData.append(\"dam:date.modified\", props_.file.lastModified);\n\n\n\n        console.log(\"Upload to:\" +baseUrl +filePathName );\n        //console.dir(file_);\n        const baseUrl = AppSettings.baseHost.getValue()|| \"\";\n        const _url = baseUrl +props_.path\n\n        return request\n            .post(_url)\n            .withCredentials()\n            .charset('UTF-8')\n            .send(formData)\n            .parse(({ text }) => {\n                if( props_.onSuccess ) props_.onSuccess(null, props_.file);\n            })\n            .on('progress', event => {\n                //console.log(event);\n                props_.progress = event.percent;\n                if( props_.onProgress ) props_.onProgress({ percent: event.percent });\n\n                //the event is:\n                //{direction: \"upload\" or \"download\"\n                //  percent: 0 to 100 // may be missing if file size is unknown\n                //  total: // total file size, may be missing\n                //  loaded: // bytes downloaded or uploaded so far}\n            });\n\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(props_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        const _name = props_.file.name ;\n        const _url = baseUrl +props_.path;\n\n\n        const contentType = props_.file.type;\n        let relativePath = \"/\";\n        if( props_.file.webkitRelativePath ) {\n            relativePath = props_.file.webkitRelativePath;\n        }\n\n\n\n        var formData = new FormData();\n        formData.append(\"name\", _name);\n        formData.append(\"path\", props_.path);\n        formData.append(\"destination\", relativePath);\n        formData.append(\"file\", props_.file);\n        formData.append(\"type\", props_.file.type);\n        formData.append(\"size\", props_.file.size);\n        formData.append(\"jcr:primaryType\", \"nt:file\");\n        formData.append(\"dam:date.created\", props_.file.lastModified);\n        formData.append(\"dam:date.modified\", props_.file.lastModified);\n\n\n\n        try {\n            const response = await fetch(_url, {\n                method: \"POST\",\n                body: formData,\n                credentials: \"include\"\n            });\n\n            const reader = response.body.getReader();\n            let bytesReceived = 0;\n            while (true) {\n                const result = await reader.read();\n                if (result.done) {\n                    console.log('Fetch complete');\n                    if( props_.onSuccess ) props_.onSuccess(null, props_.file);\n                    this.isLoading.next(false);\n                    break;\n                }\n                //todo, change ajax library. This is not supported by fetch()\n                bytesReceived += result.value.length;\n                console.log('Received', bytesReceived, '/', props_.file.size, 'bytes of data so far | ', props_.file.name);\n                if( props_.onProgress ) props_.onProgress({ percent: (bytesReceived / props_.file.size) * 100 });\n            }\n        }catch(err){\n            if(props_.onError) props_.onError(err);\n            console.dir(err);\n            const _error = {'code': err.status, 'status': err.statusText, 'error':err.message};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n\n    }\n\n}\n\n\nexport default new UploadFileService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * Since most logic needs to invoke this service and wait for results, this class\n * does not use RX sink/source for an async process. Instead code will invoke execute() method\n * directly, using await command.\n *\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass DeleteFileOrFolderService {\n\n    isLoading = new BehaviorSubject();\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(path_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n\n        var _url = baseUrl +path_;\n    ;\n\n        try {\n            this.isLoading.next(true);\n\n            const req = await fetch(_url, {\n                method: \"DELETE\",\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n    }\n\n}\n\n\nexport default new DeleteFileOrFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass SaveFileOrFolderService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (n) {\n            this.execute(n);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(node_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n\n        var _name = node_.name ;\n        var _url = baseUrl +node_.path;\n\n        try {\n            const req = await fetch(_url, {\n                method: \"PUT\",\n                body: JSON.stringify(node_),\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n    }\n\n}\n\n\nexport default new SaveFileOrFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport {Breadcrumb, Button, message, Space, Upload} from 'antd';\nimport {FileOutlined, FolderAddOutlined, FolderOutlined, HomeOutlined} from '@ant-design/icons';\n\nimport AppShell from '../../library/appShell/AppShell';\nimport NewFolderDialog from '../../components/newfolderdialog/NewFolderDialog';\nimport Typography from \"@material-ui/core/Typography\";\nimport GetFilesAndFoldersService from \"../../services/GetFileAndFoldersService\";\nimport TableView from \"../../components/tableView/TableView\";\nimport CreateFolderService from \"../../services/CreateFolderService\";\nimport AppSettings from \"../../library/actions/AppSettings\";\nimport UploadFileService from \"../../services/UploadFileService\";\nimport DeleteFileOrFolderService from \"../../services/DeleteFileOrFolderService\";\nimport SaveFileOrFolderService from \"../../services/SaveFileOrFolderService\";\n\nconst styleSheet = (theme) => ({\n    progress: {\n        margin: `0 ${theme.spacing() * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n\n    toolbarContainer:{\n\n    },\n\n    fileGrid:{\n        height:'100%',\n        display:'grid',\n        gridTemplateRows:'64px auto',\n        gridTemplateColumns:'4fr minmax(2px, 400px)'\n    },\n\n    fileGridAppBar:{\n        gridRow:'1',\n        gridColumn:'1/3',\n        zIndex:500,\n        colorDefault:'#eeeeee'\n    },\n\n    fileGridFileList:{\n        gridRow:'2',\n        gridColumn:'1',\n        margin: '24px'\n    },\n\n    fileGridSidebar:{\n        gridRow:'2',\n        gridColumn:'2',\n        margin: '24px'\n    },\n\n    filePondSidebar:{\n        gridRow:'2',\n        gridColumn:'2',\n        margin: '24px'\n    },\n\n\n\n    mainGrid:{\n        height: '100%',\n        overflow: 'scroll',\n        display:'grid',\n        gridGap:'16px',\n        gridTemplateRows:'1fr 1fr 1fr',\n        gridTemplateColumns:'2fr 6fr'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }\n});\n\n\nclass FilesPage extends React.PureComponent {\n\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            isLoading:true,\n            isMounted:true,\n            canAddFile:true,\n            canAddFolder:true,\n            showAddFolderDialog:false,\n            showUploadSidebar:false,\n            showNewFolderDialog:false,\n            showUploadDialog:false,\n            selectedFiles:[],\n            uploadFiles:[],\n            path:\"/content/files\",\n            visibleRoot:\"/content/files\",\n            folders:[],\n            files:[]\n        };\n\n        //create refs\n        this.fileInputFieldRef = React.createRef();\n        this.uploadRef = React.createRef();\n\n        this.handleFileDelete = this.handleFileDelete.bind(this);\n        this.handleFolderDelete = this.handleFolderDelete.bind(this);\n        this.handleNodeChange = this.handleNodeChange.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setState({isMounted:true});\n        this.validatePath();\n\n        GetFilesAndFoldersService.isLoading.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            this.setState({'isLoading': data_ });\n        });\n        CreateFolderService.isLoading.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            this.setState({'isLoading': data_ });\n        });\n\n        GetFilesAndFoldersService.sink.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            const folder = data_;\n            const folders = data_.folders || [];\n            const files = data_.files || [];\n\n            this.setState({'folder': data_, 'folders': data_, 'files': files});\n        });\n\n\n        SaveFileOrFolderService.sink.takeWhile(() => this.state.isMounted).subscribe({\n            next: (v) => message.info('Item has been saved'),\n            error: (e) => message.info('Error saving item')\n        });\n\n\n        //trigger load of all folders and files\n        if( this.props.location.pathname.startsWith(this.state.path)) {\n            this.setState({path: this.props.location.pathname})\n            GetFilesAndFoldersService.source.next(this.props.location.pathname );\n        }else{\n            GetFilesAndFoldersService.source.next(this.state.path);\n        }\n    }\n\n\n    componentWillUnmount(){\n        this.setState({isMounted:false});\n    }\n\n\n    componentDidUpdate(props_, state_) {\n        //this.props = props_;\n        this.setState({showAddFolderDialog:false, showUploadSidebar:false, showNewFolderDialog:false, showUploadDialog:false});\n\n        const currentPath = this.state.path;\n        const newPath = this.validatePath();\n        if( currentPath !== newPath ) {\n            GetFilesAndFoldersService.source.next(newPath);\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\n    //     return this.props.location.pathname != nextProps.location.pathname\n    //         || this.state.folders != nextState.folders\n    //         || this.state.files != nextState.files\n    //         || this.state.showNewFolderDialog != nextState.showNewFolderDialog\n    //         || this.state.isLoading != nextState.isLoading;\n    // }\n\n\n    validatePath() {\n        let _path = this.props.path;\n        if( this.props.location.pathname && this.props.location.pathname.toString().startsWith(this.state.visibleRoot) ){\n            _path = this.props.location.pathname;\n        }\n        if( !_path ){\n            _path = this.state.visibleRoot;\n        }\n\n        if( _path.toString().startsWith(this.state.visibleRoot)) {\n            this.setState({\"path\": _path});\n            return _path;\n        }else{\n            //todo show invalid path\n            console.log(\"Invalid Path: \" +_path);\n            return this.props.path;\n        }\n    }\n\n\n    parseBreadcrumbPath(path, part){\n        let parts = path.split(\"/\");\n        if(path.startsWith(\"/\")){\n            parts = parts.slice(1)\n        }\n\n        const visibleParts = [];\n        for (let i = 1; i < parts.length; i++) {\n            const p = parts[i];\n            visibleParts.push( {label: p, path: '/' +parts.slice(0, i+1).join(\"/\")} )\n        }\n        return visibleParts;\n    }\n\n\n    handleCreateFolder(folderName){\n        const parentId = this.state.folder.id || null;\n        const basehost = AppSettings.baseHost.value;\n\n        CreateFolderService.sink.takeWhile(() => this.state.isMounted).subscribe(function (location_) {\n            console.log(\"Create Folder:\" +location_);\n            this.setState({showAddFolderDialog:false, showUploadSidebar:false, showNewFolderDialog:false, showUploadDialog:false});\n\n            //trigger load of all folders and files\n            GetFilesAndFoldersService.source.next(this.state.path);\n        }.bind(this));\n        CreateFolderService.source.next({\"path\": this.state.path, \"name\": folderName});\n    }\n\n\n    async handleFileDelete(path_){\n        await DeleteFileOrFolderService.execute(path_);\n        //reload after deletion\n        GetFilesAndFoldersService.source.next(this.state.path);\n    }\n\n    async handleFolderDelete(path_){\n        await DeleteFileOrFolderService.execute(path_);\n        //reload after deletion\n        GetFilesAndFoldersService.source.next(this.state.path);\n    }\n\n\n    handleFileDownload(name_, path_){\n        var link=document.createElement('a');\n        document.body.appendChild(link);\n        link.href=path_ ;\n        link.download=name_;\n        link.click();\n        link.remove();\n    }\n\n\n    UploadOnChangeHandler(info){\n        //console.log(\"Upload OnChange\");\n        //console.dir(info);\n        //console.dir(this.uploadRef);\n\n        const { status } = info.file;\n        if (status !== 'uploading') {\n            //console.log(info.file, info.fileList);\n        }\n        if (status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully.`);\n            if(info.fileList){\n                let allDone = true;\n                info.fileList.forEach((x)=>{\n                    if( x.status !== \"done\"){\n                        allDone = false;\n                    }\n                });\n\n                if( allDone ){\n                    //GetFilesAndFoldersService.source.next(this.props.location.pathname);\n                    //window.location = location.pathname;\n                    window.location.reload();\n                    //console.log(\"done\");\n                }\n            }\n        } else if (status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n    UploadCustomRequestHandler(req){\n        UploadFileService.source.next({path:req.action, file:req.file, onError:req.onError, onProgress:req.onProgress, onSuccess:req.onSuccess})\n    }\n\n    /**\n     * remove file items that have been uploaded successfully\n     * @param originNode : ReactElement\n     * @param file\n     * @param fileList\n     * @return originNode\n     * @constructor\n     */\n    UploadItemRenderHandler(originNode, file, fileList){\n        if( file.status !== \"done\" ) {\n            return originNode;\n        }\n    }\n\n\n    handleOnRowClick(event){\n        console.log(event);\n    }\n\n\n\n    //Node has been update, save changes\n    handleNodeChange(node){\n        SaveFileOrFolderService.source.next(node);\n    }\n\n\n\n    render() {\n        //console.log(\"render:\" +this.state.uploadFiles.length);\n        var classes = this.props.classes;\n        const _sidebarVisible = this.state.showUploadSidebar || this.state.uploadFiles.length>0 || this.state.selectedFiles.length>0;\n        const {Dragger} = Upload;\n        const location = this.props.location;\n\n        const draggerProps = {\n            name: 'file',\n            multiple: true,\n            listType: 'picture',\n            withCredentials: true,\n            directory:true,\n            showUploadList: {showRemoveIcon:true, showPreviewIcon:false, showDownloadIcon:false},\n            action: this.props.location.pathname,\n            onChange: this.UploadOnChangeHandler.bind(this),\n            customRequest: this.UploadCustomRequestHandler.bind(this),\n            itemRender: this.UploadItemRenderHandler.bind(this)\n        };\n\n        message.config({\n            top: 24,\n            duration: .5,\n            maxCount: 3\n        });\n\n        //console.dir(draggerProps);\n\n        const pathParts = this.parseBreadcrumbPath(this.props.location.pathname);\n\n\n        return (\n            <AppShell user={this.props.user} open={false}>\n                <div className={classes.fileGrid}>\n                    <AppBar color=\"default\" position=\"static\" elevation={0}\n                            className={classes.fileGridAppBar}>\n\n                        <Toolbar className={classes.toolbarContainer}>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                <Breadcrumb>\n                                    <Breadcrumb.Item href=\"/home/index.html\">\n                                        <HomeOutlined />\n                                    </Breadcrumb.Item>\n                                    <Breadcrumb.Item href={'#/'}>\n                                        <FileOutlined />\n                                        <span>Files</span>\n                                    </Breadcrumb.Item>\n                                    {pathParts.map((p)=>{\n                                        return (<Breadcrumb.Item key={p.path}><Link to={p.path} >{p.label}</Link></Breadcrumb.Item>);\n                                    })}\n                                </Breadcrumb>\n                            </Typography>\n                            <Space>\n                                <Button type=\"primary\"\n                                        disabled={!this.state.canAddFolder}\n                                        onClick={()=>{this.setState({'showNewFolderDialog':true})}}\n                                        icon={<FolderAddOutlined />}>New Folder</Button>\n                            </Space>\n                        </Toolbar>\n                    </AppBar>\n\n\n                    <div className={classes.fileGridFileList} style={{gridColumn:_sidebarVisible?'1/2':'1/3'}}>\n\n                        <TableView\n                            loading={this.state.isLoading}\n                            folders={this.state.folders}\n                            files={this.state.files}\n                            onRowClick={this.handleOnRowClick}\n                            onNodeChange={this.handleNodeChange}\n                            onDownload={this.handleFileDownload}\n                            onDeleteFile={this.handleFileDelete}\n                            onDeleteFolder={this.handleFolderDelete}/>\n\n\n                        <div style={{marginTop:'24px'}}>\n                            <Dragger {...draggerProps} ref={this.uploadRef}>\n                                <p className=\"ant-upload-drag-icon\">\n                                    <FolderOutlined />\n                                </p>\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                <p className=\"ant-upload-hint\">\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                                    band files\n                                </p>\n                            </Dragger>\n                        </div>\n                    </div>\n\n\n                    <NewFolderDialog\n                        onSave={this.handleCreateFolder.bind(this)}\n                        onClose={()=>{this.setState({'showNewFolderDialog':false})}}\n                        open={this.state.showNewFolderDialog}\n                        path={this.state.path}/>\n                </div>\n\n\n                <input type=\"file\"\n                       ref={this.fileInputFieldRef}\n                       style={{'display': 'none'}}\n                       multiple\n                       onChange={this.handleFileChange}/>\n\n            </AppShell>\n        );\n\n    }\n}\n\n\nexport default injectIntl(withRouter(withStyles(styleSheet)(FilesPage)));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../actions/AppSettings';\nimport {BehaviorSubject, Subject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass GetUsersService {\n\n    isLoading=new BehaviorSubject(false); //todo, wire up\n    source = new Subject();\n    sink = new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.getUser.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    getUser(username_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue() || \"\";\n        const _url = baseUrl +'/api/v1/auth/user/me';\n\n        const headers = new Headers();\n        headers.append('pragma', 'no-cache');\n        headers.append('cache-control', 'no-cache');\n        headers.append('accept', 'application/json');\n\n        this.isLoading.next(true);\n\n        fetch( _url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: headers,\n            credentials: \"include\"\n        })\n            //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            //parse json\n            .then((response) => response.json())\n            .then(json => {\n                this.sink.next(json);\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    console.error(err.statusText);\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText||err.message};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\n\nexport default new GetUsersService();\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// https://rsuitejs.com/\nimport 'rsuite/dist/styles/rsuite-default.css';\n\n//views\nimport FilesPage from './pages/files/FilesPage';\nimport GetUserService from \"./library/services/GetUserService\";\nimport AppSettings from \"./library/actions/AppSettings\";\n\nconst styleSheet = (theme) => ({\n    progress: {\n        margin: `0 ${theme.spacing() * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n});\n\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        this.state = {\n            \"context\": context,\n            \"locale\": \"en-EN\",\n            \"isAuthenticated\": false,\n            \"isLoading\": true,\n            \"isMounted\": false\n        };\n\n        // set it running locally with npm start, so you can still call running server\n        if( window.location.href.indexOf(\":3000\") > -1){\n            AppSettings.baseHost.next(\"http://localhost:9000\");\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({\"isMounted\": true});\n\n        GetUserService.sink.takeWhile(() => this.state.isMounted).subscribe((user_)=>{\n            // redirect to dashboard\n            if( user_ )\n            {\n                this.setState({\"isAuthenticated\":true, \"isLoading\":false, \"user\": user_});\n            }\n        });\n\n        GetUserService.source.next(null);\n    }\n\n\n    componentWillUnmount(){\n        this.setState({\"isMounted\":false});\n    }\n\n\n    render() {\n        const classes = this.props.classes;\n        const locale = \"en-EN\";\n\n\n        if (this.state.isLoading) {\n            return (\n                <div>\n                    <CircularProgress className={classes.progress} size={50}/>\n                </div>\n            );\n        }\n\n        return (\n            <IntlProvider locale={locale} key={locale} messages={this.props.i18nMessages[locale]}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" component={() => <FilesPage user={this.state.user}/>}/>\n                    </Switch>\n                </Router>\n            </IntlProvider>\n        );\n\n    }\n\n}\n\nexport default withStyles(styleSheet)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {addLocaleData} from 'react-intl';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport 'antd/dist/antd.css';\n\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//@see https://www.materialpalette.com\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport './index.css';\n\nimport App from './App';\n\n/**\n * Setup i18n/Localization formats & messages\n */\n//addLocaleData(require('../react-intl/locale-data/en'));\nconst i18nMessages = {\n    \"en-EN\":require('./i18n/locales/en-EN.json')\n};\n\n\n\n/**\n * Setup Material-Ui Theme\n */\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light', // Switching the dark mode on is a single property value change.\n        primary: deepPurple, // Purple and green play nicely together.\n        secondary: {\n            ...indigo\n        },\n        error: red\n    }\n});\n\n\n\nconst renderApp = function(){\n\n    ReactDOM.render(\n        <MuiThemeProvider theme={theme}>\n            <App i18nMessages={i18nMessages}/>\n        </MuiThemeProvider>\n        , document.getElementById('root'));\n\n}\n\nrenderApp();\n//registerServiceWorker();\n"],"sourceRoot":""}