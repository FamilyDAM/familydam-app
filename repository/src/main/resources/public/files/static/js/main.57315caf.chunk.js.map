{"version":3,"sources":["registerServiceWorker.js","library/actions/AppSettings.js","library/actions/processors/LogoutService.js","library/actions/AppActions.js","library/sidebar/Sidebar.js","library/appheader/AppHeader.js","library/services/LoadClientAppsService.js","library/appShell/AppShell.js","actions/processors/GetFileDataService.js","actions/processors/UploadFileService.js","actions/processors/DeleteFileOrFolderService.js","actions/processors/CreateFolderService.js","actions/processors/SetFilePropertyService.js","actions/FileActions.js","services/GetFileAndFoldersService.js","components/newfolderdialog/NewFolderDialog.js","components/fileinfosidebar/SingleImageView.js","components/tableView/TableView.js","services/CreateFolderService.js","services/UploadFileService.js","services/DeleteFileOrFolderService.js","services/SaveFileOrFolderService.js","pages/files/FilesPage.js","library/services/GetUserService.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","baseHost","BehaviorSubject","basicUser","localStorage","getItem","basicPwd","LogoutService","source_","sink_","sink","undefined","this","subscribe","getUser","bind","username_","baseUrl","AppSettings","getValue","fetch","method","response","redirected","url","err","status","_error","statusText","responseText","navigateTo","Subject","logout","logoutService","source","Sidebar","nextProps","nextState","open","props","user","apps","secondaryApps","clear","AppActions","next","slug","app","classes","profileApp","findApp","Paper","className","sidebarOpen","sidebarClosed","sidebarUserInfo","sidebarUserInfoClosed","sidebarProfileIcon","style","sidebarProfileName","Typography","component","type","name","lastName","sidebarButtons","Button","onClick","handleLogout","path","appListsOpen","appListsClosed","gridColumn","gridRow","openLabel","closedLabel","paddingTop","List","map","item","ListItem","button","key","href","Avatar","marginRight","ListItemText","primary","label","primaryTypographyProps","Component","injectIntl","withStyles","styleSheet","theme","width","minHeight","height","background","padding","display","gridGap","gridTemplateRows","gridTemplateColumns","alignSelf","justifySelf","marginTop","AppHeader","context","openMoreMenu","handleToggle","handleOpenMoreMenu","onToggle","event","setState","openMoreMenuAnchorEl","currentTarget","onNavClick","AppBar","root","position","Toolbar","IconButton","menuButton","color","aria-label","variant","flex","handleNavClick","aria-owns","aria-haspopup","moreButton","Menu","id","keepMounted","anchorEl","MenuItem","handleMenuClose","Divider","headerContainer","hamburgerMenu","mainSection","rightSection","textAlign","marginLeft","isLoading","loadApps","data_","_url","headers","Headers","append","cache","credentials","json","_embedded","primaryApps","forEach","push","_primaryApps","sort","a","b","order","_secondaryApps","AppShell","isOpenCachedValue","isMounted","isOpen","handleOpenCloseToggle","children","pipe","takeWhile","substring","history","LoadClientAppsService","data","val","setItem","dashboardShellContainerOpen","dashboardShellContainerClosed","header","main","withRouter","fontSize","GetFileDataService","path_","getFiles","paths_","length","pathPromises","i","promise","request","get","withCredentials","set","Promise","all","results","nodes","body","reason","require","UploadFileService","mergeMap","file_","Array","isArray","uploadNextFile","file","debug","Observable","of","flatMap","req","resolve","reject","uploadFile","result","retry","progress","message","filePathName","uploadPath","webkitRelativePath","substr","lastIndexOf","relativePath","formData","FormData","size","lastModified","post","charset","send","parse","text","JSON","on","percent","FileActions","uploadProgress","DeleteFileOrFolderService","deleteFileOrFolder","delete","end","res","alert","CreateFolderService","createDirectory","_name","username","info","firstName","warn","SetFilePropertyService","properties_","execute","getFileData","setFileProperty","createFolder","stageAction","stageFile","uploadCompleted","uploadError","getFileDataService","setFilePropertyService","uploadFileService","deleteFileOrFolderService","createFolderService","getFilesAndFolders","startsWith","_nodes","filter","f","toString","NewFolderDialog","showModal","hideModal","folderName","handleSave","newProps","onSave","visible","onCancel","onOk","okText","cancelText","title","TextField","value","onChange","e","target","margin","TextArea","Input","TabPane","Tabs","Option","Select","SingleImageView","keyword","tabIndex","handleRatingChange","handleTagChange","handleDescriptionChange","handleDescriptionSave","rating","node","onRatingChange","tags","onTagChange","onDescriptionChange","tag","gridListRoot","itemPreview","maxWidth","src","alt","maxHeight","itemRating","allowHalf","float","itemKeywords","mode","placeholder","itemDescription","rows","onBlur","itemInfo","defaultActiveKey","tab","Table","TableBody","TableRow","TableCell","scope","align","moment","format","palette","paper","justifyContent","TableView","showDeleteFileDialog","showSidebar","pendingFileToDelete","folders","files","selectedFile","handleRowClick","handleFileDelete","handleFileDeleteConfirmation","handleFolderDelete","handleFolderDeleteConfirmation","handleNodeChange","attributes","onRowClick","pagination","filters","sorter","extra","event_","deletePath","onDeleteFile","showDeleteFolderDialog","onDeleteFolder","onNodeChange","c","primaryType","trim","toLowerCase","d","createdDate","dataIndex","render","record","FolderOutlined","mimeType","FileOutlined","fieldNameSorter","to","responsive","fieldDateSorter","parseISO","downloadBtn","_links","download","onDownload","data-path","deleteBtn","self","editBtn","selectedRowKeys","selectedRows","getCheckboxProps","disabled","contentType","concat","rowSelection","getRowSelection","rowKey","loading","columns","getColumns","dataSource","hideOnSinglePage","sortDirections","onTableChangeHandler","placement","closable","getContainer","bodyStyle","onClose","React","PureComponent","props_","Error","dir","errorMsg","onSuccess","onProgress","reader","getReader","bytesReceived","read","done","onError","n","node_","stringify","FilesPage","canAddFile","canAddFolder","showAddFolderDialog","showUploadSidebar","showNewFolderDialog","showUploadDialog","selectedFiles","uploadFiles","visibleRoot","fileInputFieldRef","createRef","uploadRef","validatePath","GetFilesAndFoldersService","SaveFileOrFolderService","v","pathname","state_","currentPath","newPath","_path","part","parts","split","slice","visibleParts","p","join","folder","location_","name_","link","document","createElement","appendChild","click","remove","success","fileList","allDone","x","reload","action","originNode","_sidebarVisible","Dragger","Upload","draggerProps","multiple","listType","directory","showUploadList","showRemoveIcon","showPreviewIcon","showDownloadIcon","UploadOnChangeHandler","customRequest","UploadCustomRequestHandler","itemRender","UploadItemRenderHandler","config","top","duration","maxCount","pathParts","parseBreadcrumbPath","fileGrid","elevation","fileGridAppBar","toolbarContainer","Item","HomeOutlined","icon","FolderAddOutlined","fileGridFileList","handleOnRowClick","handleFileDownload","ref","handleCreateFolder","handleFileChange","spacing","left","transform","zIndex","colorDefault","fileGridSidebar","filePondSidebar","mainGrid","overflow","flexGrow","App","indexOf","GetUserService","user_","locale","CircularProgress","messages","i18nMessages","createMuiTheme","deepPurple","secondary","indigo","red","renderApp","ReactDOM","getElementById","URL","process","origin","addEventListener","checkValidServiceWorker","ready","unregister","registerServiceWorker"],"mappings":"+PAUMA,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DA6BR,SAASC,gBAAgBC,GACvBC,UAAUC,cACLC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,2bC5DpD,O,0DANXC,SAAW,IAAIC,mBAAgB,yB,KAC/BC,UAAY,IAAID,mBAAgBtB,OAAOwB,aAAaC,QAAQ,M,KAC5DC,SAAW,IAAIJ,mBAAgBtB,OAAOwB,aAAaC,QAAQ,OC6ChDE,G,WAzCX,uBAAYC,EAASC,GAAQ,qCAF7BC,UAAKC,EAIDC,KAAKF,KAAOD,EACZD,EAAQK,UAAUD,KAAKE,QAAQC,KAAKH,O,wEAQhCI,GACP,IAAD,OACUC,EAAUC,GAAYjB,SAASkB,WAErCC,MAAOH,EAAS,UAAW,CACvBI,OAAQ,QAGPhC,MAAK,SAAAiC,GAKF,OAJGA,EAASC,aACR1B,QAAQC,IAAI,gBAAiBwB,EAASE,KACtC5C,OAAOC,SAAWyC,EAASE,KAExBF,KAEVvB,OAAM,SAAA0B,GAEH,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B9C,OAAOC,SAAW,QACf,CACH,IAAI8C,EAAS,CAAC,KAAQF,EAAIC,OAAQ,OAAUD,EAAIG,WAAY,QAAWH,EAAII,cAC3E,EAAKnB,KAAKV,MAAM2B,W,iBCzBrB,OAZX,sBAAe,kCAMfG,WAAa,IAAIC,WANH,KAQdC,OAAS,CAAC,OAAS,IAAID,WAAW,KAAO,IAAIA,YAPzCnB,KAAKqB,cAAgB,IAAI1B,GAAcK,KAAKoB,OAAOE,OAAQtB,KAAKoB,OAAOtB,OCuFzEyB,G,wOAEoBC,EAAWC,GAC7B,OAAQD,EAAUE,OAAS1B,KAAK2B,MAAMD,MAC/BF,EAAUI,OAAS5B,KAAK2B,MAAMC,MAC9BJ,EAAUK,OAAS7B,KAAK2B,MAAME,MAC9BL,EAAUM,gBAAkB9B,KAAK2B,MAAMG,gB,kDAK9C9D,OAAOwB,aAAauC,QAEpBC,GAAWZ,OAAOE,OAAOW,MAAK,GAC9BjE,OAAOC,SAAW,gB,sCAIdiE,EAAML,GACV,GAAIA,EAAO,CAAC,IAAD,gBACSA,GADT,IACP,2BAAsB,CAAC,IAAdM,EAAa,QAClB,GAAIA,EAAID,OAASA,EACb,OAAOC,GAHR,+BAOX,OAAO,O,sCAKD,IAAD,OACDC,EAAUpC,KAAK2B,MAAMS,QAErBC,EAAarC,KAAKsC,QAAQ,cAAetC,KAAK2B,MAAMG,eAExD,OACI,kBAACS,EAAA,EAAD,CAAOC,UAAWxC,KAAK2B,MAAMD,KAAKU,EAAQK,YAAYL,EAAQM,eAE1D,kBAACH,EAAA,EAAD,CAAOC,UAAWxC,KAAK2B,MAAMD,KAAKU,EAAQO,gBAAgBP,EAAQQ,uBAC9D,yBAAKJ,UAAWJ,EAAQS,oBACpB,kBAAC,KAAD,CACIC,MAAO,CAAC,MAAS,GAAI,OAAU,OAGvC,yBAAKN,UAAWJ,EAAQW,oBACpB,kBAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,KAAM,SAAUlD,KAAK2B,MAAMC,KAAKuB,KAA5D,IAAmEnD,KAAK2B,MAAMC,KAAKwB,WAEvF,yBAAKZ,UAAWJ,EAAQiB,gBAEpB,kBAACC,EAAA,EAAD,CAAQC,QAASvD,KAAKwD,cAAtB,UAECnB,GACD,kBAACiB,EAAA,EAAD,CAAQC,QAAS,0BAAIvB,GAAWd,WAAWe,KAAKI,EAAWoB,QAA3D,aAMR,yBAAKjB,UAAWxC,KAAK2B,MAAMD,KAAKU,EAAQsB,aAAatB,EAAQuB,gBAEzD,yBAAKb,MAAO,CAACc,WAAY,IAAIC,QAAS,MAClC,kBAACb,EAAA,EAAD,CAAYE,KAAK,QACLV,UAAWxC,KAAK2B,MAAMD,KAAKU,EAAQ0B,UAAU1B,EAAQ2B,YACrDjB,MAAO,CAAC,YAAc,OAAQkB,WAAW,OAAQJ,WAAY,IAAKC,QAAS,MAFvF,SAKJ,kBAACI,EAAA,EAAD,CAAMnB,MAAO,CAACc,WAAY,IAAIC,QAAS,MAElC7D,KAAK2B,MAAME,MAAQ7B,KAAK2B,MAAME,KAAKqC,KAAI,SAACC,GACrC,OACI,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKH,EAAKV,KAAMF,QAAS,0BAAIvF,OAAOC,SAASsG,KAAOJ,EAAKV,OACtE,kBAACe,EAAA,EAAD,CAAQ1B,MAAO,CAAC2B,YAAY,QACxB,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAcC,QAASR,EAAKS,MAAOC,uBAAwB,CAAC3B,KAAK,SACnDV,UAAW,EAAKb,MAAMD,KAAKU,EAAQ0B,UAAU1B,EAAQ2B,mBAQnF,kBAACE,EAAA,EAAD,CAAMnB,MAAO,CAACc,WAAY,IAAIC,QAAS,KAAMrB,UAAYxC,KAAK2B,MAAMD,KAAuBU,EAAQ2B,YAA1B3B,EAAQ0B,WAC7E,kBAACM,EAAA,EAAD,CAAUC,QAAM,EAACd,QAAS,0BAAIvF,OAAOC,SAASsG,KAAO,kCACjD,kBAACC,EAAA,EAAD,KACI,kBAAC,KAAD,CACI1B,MAAO,CAAC,MAAS,GAAI,OAAU,e,SAxF7CgC,aAmGPC,eAAWC,aA7KP,SAAbC,WAAcC,GAAD,MAAY,CAE3BzC,YAAY,CACR0C,MAAO,QACPC,UAAW,QACXC,OAAQ,OACRC,WAAW,QAGf5C,cAAc,CACVyC,MAAO,OACPC,UAAW,QACXC,OAAQ,OACRC,WAAW,QAGf3C,gBAAgB,CACZwC,MAAM,OACNI,QAAQ,MACRC,QAAQ,OACRC,QAAS,MACTC,iBAAkB,OAClBC,oBAAqB,aAGzB/C,sBAAsB,CAClB4C,QAAQ,QAGZ3C,mBAAmB,CACfe,WAAY,IACZC,QAAS,KAGbd,mBAAmB,CACfa,WAAY,IACZC,QAAS,IACT+B,UAAU,UAGdvC,eAAe,CACXO,WAAY,MACZC,QAAS,IACTgC,YAAY,UAGhBnC,aAAa,CACT8B,QAAQ,OACRC,QAAS,MACTC,iBAAkB,YAClBC,oBAAqB,OACrBG,UAAU,QAGdnC,eAAe,CACX0B,OAAO,MACPG,QAAQ,OACRC,QAAS,MACTC,iBAAkB,gBAClBC,oBAAqB,QAGzB7B,UAAU,CACN0B,QAAQ,UAGZzB,YAAY,CACRyB,QAAQ,WA0GUR,CAAuBzD,K,kFCxI3CwE,G,kEAGF,mBAAYpE,EAAOqE,GAAU,IAAD,sCACxB,cAAMrE,IAED5C,MAAQ,CACTkH,cAAa,GAGjB,EAAKC,aAAe,EAAKA,aAAa/F,KAAlB,gBACpB,EAAKgG,mBAAqB,EAAKA,mBAAmBhG,KAAxB,gBAC1B,EAAKqD,aAAe,EAAKA,aAAarD,KAAlB,gBATI,E,gGAYNqB,EAAWC,GAC7B,OAAQD,EAAU4E,WAAapG,KAAK2B,MAAMyE,UAC/B5E,EAAUK,OAAS7B,KAAK2B,MAAME,MAC9BJ,EAAUwE,eAAiBjG,KAAKjB,MAAMkH,e,4DAGlCI,GACfrG,KAAKsG,SAAS,CAAEL,cAAc,EAAMM,qBAAsBF,EAAMG,kB,kDAI5DxG,KAAK2B,MAAMyE,UACXpG,KAAK2B,MAAMyE,a,oDAIJ3C,GACPzD,KAAK2B,MAAM8E,YACXzG,KAAK2B,MAAM8E,WAAWhD,K,wDAK1BzD,KAAKsG,SAAS,CAAC,cAAgB,M,kDAI/BtI,OAAOwB,aAAauC,QAEpBC,GAAWZ,OAAOE,OAAOW,MAAK,GAC9BjE,OAAOC,SAAW,M,sCAIZ,IAAD,OACDmE,EAAUpC,KAAK2B,MAAMS,QAEzB,OACI,kBAACsE,EAAA,EAAD,CAAQlE,UAAWJ,EAAQuE,KAAMC,SAAS,UACtC,kBAACC,EAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIvD,QAASvD,KAAKkG,aACd1D,UAAWJ,EAAQ2E,WACnBC,MAAM,YAAYC,aAAW,QAC7B,kBAAC,KAAD,OAGJ,kBAACjE,EAAA,EAAD,CAAYkE,QAAQ,KAAKF,MAAM,UAAUxE,UAAWJ,EAAQ+E,KAAM5D,QAAS,0BAAI,EAAK6D,eAAe,wBAAnG,UACW,qCAGX,kBAACN,GAAA,EAAD,CACIG,aAAW,OACXI,YAAWrH,KAAKjB,MAAM2C,KAAO,YAAc,KAC3C4F,gBAAc,OACd/D,QAASvD,KAAKmG,mBACd3D,UAAWJ,EAAQmF,YACnB,kBAAC,KAAD,OAGJ,kBAACC,GAAA,EAAD,CACIC,GAAG,YACHC,aAAW,EACXC,SAAU3H,KAAKjB,MAAMwH,qBACrB7E,KAAM1B,KAAKjB,MAAMkH,cACjB,kBAAC2B,GAAA,EAAD,CAAUrE,QAAS,mBAAK,EAAKC,eAAe,EAAKqE,oBAAjD,UACA,kBAACC,GAAA,EAAD,MACC9H,KAAK2B,MAAME,MAAQ7B,KAAK2B,MAAME,KAAKqC,KAAI,SAACC,GACrC,OACI,kBAACyD,GAAA,EAAD,CAAUtD,IAAKH,EAAKV,KACVuD,MAAM,YACNzD,QAAS,mBAAKvF,OAAOC,SAASkG,EAAKV,KAAK,EAAKoE,oBAAqB1D,EAAKS,iB,WAtFzFE,aAoGTC,eAAWC,aA1IP,SAAbC,WAAcC,GAAD,MAAY,CAE3ByB,KAAM,CACFxB,MAAO,OACPE,OAAQ,QAEZ0C,gBAAiB,CACbvC,QAAS,OACTE,iBAAkB,OAClBC,oBAAqB,kBAEzBqC,cAAe,CACXxC,QAAS,QACT3B,QAAS,IACTD,WAAY,KAEhBqE,YAAa,CACTpE,QAAS,IACTD,WAAY,KAEhBsE,aAAc,CACVrE,QAAS,IACTD,WAAY,IACZuE,UAAW,SAEfhB,KAAM,CACFA,KAAM,GAEVJ,WAAY,CACRqB,YAAa,GACb3D,YAAa,GACbuC,MAAO,WAEXO,WAAW,CACPP,MAAO,cAwGWhC,CAAuBe,KCvFlC,O,WAlDX,iCAAe,6CALfsC,UAAU,IAAI/I,oBAAgB,GAKhB,KAJdgC,OAAO,IAAIH,WAIG,KAHdrB,KAAK,IAAIqB,WAKLnB,KAAKsB,OAAOrB,UAAUD,KAAKsI,SAASnI,KAAKH,O,wHAQ9BuI,G,uGAELlI,EAAUC,GAAYjB,SAASkB,WAC/BiI,EAAOnI,EAAS,iBAEhBoI,EAAU,IAAIC,SACZC,OAAO,SAAU,wBAEzB3I,KAAKqI,UAAUpG,MAAK,G,SAGDzB,MAAOgI,EAAM,CAC5B/H,OAAQ,MACRmI,MAAO,WACPH,QAASA,EACTI,YAAa,Y,cAJXhH,E,iBAOiBA,EAAKiH,O,QAAtBpI,E,OACa,KAAfmB,EAAKf,QAAiBJ,EAASqI,WAAarI,EAASqI,UAAUlH,OACzDmH,EAAc,GACdlH,EAAgB,GACtBpB,EAASqI,UAAUlH,KAAKoH,SAAS,SAAC9G,GAC1BA,EAAIwC,QACJqE,EAAYE,KAAK/G,GAGrBL,EAAcoH,KAAK/G,MAGnBgH,EAAeH,EAAYI,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAEE,MAAQD,EAAEC,SACnDC,EAAiB1H,EAAcsH,MAAK,SAACC,EAAEC,GAAH,OAAOD,EAAEE,MAAQD,EAAEC,SAC3DvJ,KAAKF,KAAKmC,KAAK,CAAC,YAAckH,EAAc,cAAgBK,K,mJCtBlEC,G,gEAGF,kBAAY9H,EAAOqE,GAAU,IAAD,6BACxB,cAAMrE,GAEN,IAAI+H,EAAoB1L,OAAOwB,aAAaC,QAAQ,mBAH5B,OAKnBiK,IAEGA,OADe3J,IAAf4B,EAAMD,MACcC,EAAMD,MAMlC,EAAK3C,MAAQ,CACT4K,WAAU,EACVC,OAAO7L,QAAQ2L,IAGnB,EAAKG,sBAAwB,EAAKA,sBAAsB1J,KAA3B,gBAC7B,EAAKgG,mBAAqB,EAAKA,mBAAmBhG,KAAxB,gBAnBF,E,+FAsBNqB,EAAWC,GAC7B,OAAQD,EAAUE,OAAS1B,KAAK2B,MAAMD,MAC/BF,EAAUI,OAAS5B,KAAK2B,MAAMC,MAC9BJ,EAAUsI,WAAa9J,KAAK2B,MAAMmI,UAClCrI,EAAUmI,SAAW5J,KAAKjB,MAAM6K,QAChCnI,EAAUuH,cAAgBhJ,KAAKjB,MAAMiK,aACrCvH,EAAUK,gBAAkB9B,KAAKjB,MAAM+C,gB,4DAI9B,IAAD,OACf9B,KAAKsG,SAAS,CAAC,WAAY,IAE3BtE,GAAWd,WAAW6I,KAAKC,aAAU,kBAAM,EAAKjL,MAAM4K,cAAY1J,UAAU,SAASwD,GAEnE,QAATA,GAA2C,QAAzBA,EAAKwG,UAAU,EAAG,GACrCjM,OAAOC,SAASsG,KAAOd,EAAKwG,UAAU,GACjCjK,KAAK2B,MAAMuI,SAChBlK,KAAK2B,MAAMuI,QAAQhB,KAAKzF,IAE9BtD,KAAKH,OAEPmK,GAAsBrK,KAAKiK,KAAKC,aAAU,kBAAM,EAAKjL,MAAM4K,cAAY1J,WAAW,SAACmK,GAC3EA,GACA,EAAK9D,SAAS,CACV,YAAe8D,EAAKpB,aAAe,GACnC,cAAiBoB,EAAKtI,eAAiB,QAInDqI,GAAsB7I,OAAOW,MAAK,K,kEAIlCjC,KAAKsG,SAAS,CAAC,WAAY,M,4DAGZD,GACfrG,KAAKsG,SAAS,CAAEL,cAAc,EAAMM,qBAAsBF,EAAMG,kB,oEAIhE,IAAI6D,GAAOrK,KAAKjB,MAAM6K,OACtB5J,KAAKsG,SAAS,CAAC,OAAS+D,IACxBrM,OAAOwB,aAAa8K,QAAQ,kBAAmBD,K,kDAI/CrM,OAAOwB,aAAauC,QAEpBC,GAAWZ,OAAOE,OAAOW,MAAK,GAC9BD,GAAWd,WAAWe,KAAK,S,sCAK3B,IAAIG,EAAUpC,KAAK2B,MAAMS,QAEzB,OAAKpC,KAAK2B,MAAMC,KAKZ,yBAAKY,UAAWxC,KAAKjB,MAAM6K,OAAOxH,EAAQmI,4BAA4BnI,EAAQoI,+BAC1E,4BAAQhI,UAAWJ,EAAQqI,QACvB,kBAAC,GAAD,CACI5I,KAAM7B,KAAKjB,MAAM+C,cACjBsE,SAAUpG,KAAK6J,sBACfpD,WAAY,oBAAChD,GAAD,OAAQzF,OAAOC,SAASwF,MAI5C,kBAAC,GAAD,CACI7B,KAAM5B,KAAK2B,MAAMC,KACjBC,KAAM7B,KAAKjB,MAAMiK,YACjBlH,cAAe9B,KAAKjB,MAAM+C,cAC1BJ,KAAM1B,KAAKjB,MAAM6K,OACjBnD,WAAY,oBAAChD,GAAD,OAAQzF,OAAOC,SAASwF,KAGxC,yBAAKjB,UAAWJ,EAAQsI,MACnB1K,KAAK2B,MAAMmI,WAtBZ,kC,UApFGhF,aAkHRC,eAAW4F,YAAW3F,aA7IlB,SAAbC,WAAcC,GAAD,MAAY,CAE3BqF,4BAA4B,CACxB/E,QAAS,OACTE,iBAAkB,YAClBC,oBAAqB,cAGzB6E,8BAA8B,CAC1BhF,QAAS,OACTE,iBAAkB,YAClBC,oBAAqB,aAEzB8E,OAAQ,CACJ7G,WAAY,MACZC,QAAS,IACT+C,SAAU,UACVvB,OAAQ,QAGZqF,KAAK,CACDE,SAAU,QACVtF,WAAW,WAuHkBN,CAAuByE,M,yCC/F7CoB,G,WAnDX,4BAAYjL,EAASC,GAAQ,0CAF7BC,UAAKC,EAIDC,KAAKF,KAAOD,EAEZD,EAAQK,UAAU,SAAU6K,GACxB9K,KAAK+K,SAASD,IAChB3K,KAAKH,O,+EAQFgL,GACR,IAAD,OACU3K,EAAUC,GAAYjB,SAASkB,WAGrC,QAAeR,IAAXiL,GAAwBA,EAAOC,OAAS,EAC5C,CAGI,IAFA,IAAIC,EAAe,GAEVC,EAAI,EAAGA,EAAIH,EAAOC,OAAQE,IAAK,CACpC,IAAI1H,EAAOuH,EAAOG,GAEdC,EAAUC,KAAQC,IAAKjL,EAASoD,GAC/B8H,kBACAC,IAAI,SAAU,oBAEnBN,EAAahC,KAAKkC,GAGtBK,QAAQC,IAAIR,GAAczM,MAAK,SAACkN,GAG5B,IADD,IAAIC,EAAQ,GACFT,EAAI,EAAGA,EAAIQ,EAAQV,OAAQE,IAAK,CACrC,IAAIzK,EAAWiL,EAAQR,GACvBS,EAAM1C,KAAKxI,EAASmL,MAEzB,EAAK/L,KAAKmC,KAAK2J,MACfzM,OAAM,SAAA2M,GAEL7M,QAAQC,IAAI4M,W,sBC1C5BC,EAAQ,IAARA,CAA8BV,M,IA4PfW,G,WApPX,2BAAYpM,EAASC,GAAQ,IAAD,gDAJ5BC,UAAOC,EAMHC,KAAKF,KAAOD,EAEZ,IAAMQ,EAAUC,GAAYjB,SAASkB,WAErCX,EACKqM,UAAS,SAAAC,GACN,IAAIC,MAAMC,QAAQF,GAMd,OAAO,EAAKG,eAAehM,EAAS6L,GALpC,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAMjB,OAAQE,IAAK,CACnC,IAAImB,EAAOJ,EAAMf,GACjB,OAAO,EAAKkB,eAAehM,EAASiM,MAK7C,GACFrM,UAAUhB,QAAQsN,O,0FAIZlM,EAASiM,GAAO,IAAD,OAI1B,OAAIA,EAIOE,cACFC,GAAGH,GACHI,SAAQ,SAAAC,GAAG,OAAI,IAAIlB,SAAQ,SAACmB,EAASC,GAClC,OAAO,EAAKC,WAAWzM,EAASiM,GAC3B7N,MAAK,SAAAsO,GAAM,OAAEH,EAAQG,MACrB5N,OAAM,SAAA0B,GAEH,IAAImM,EAAQ,EAOZ,OANIV,EAAKU,QACLA,EAAMV,EAAKU,MAAM,GAErBV,EAAKW,SAAW,EAChBX,EAAKU,MAAQA,EACbV,EAAKlN,MAAQ,qBAAsB4N,EAAO,MACnCH,EAAOhM,YAEtBmM,MAAM,GAAG7N,OAAM,SAAA0B,GAKf,OAFAyL,EAAKlN,MAAQyB,EAAIC,OAAQ,KAAMD,EAAIqM,QACnCZ,EAAKW,SAAW,EACTT,cAAWC,GAAG5L,MAK1B,O,4CA6CAR,EAAS6L,GAEhB,IAAIiB,EAAejB,EAAMkB,WACrBlB,EAAMmB,mBACNF,GAAgB,IAAKjB,EAAMmB,mBAAmBC,OAAO,EAAGpB,EAAMmB,mBAAmBE,YAAY,MACvFrB,EAAMsB,eACZL,GAAgBjB,EAAMsB,aAAaF,OAAO,EAAGpB,EAAMsB,aAAaD,YAAY,OAIhF,IAAIE,EAAW,IAAIC,SAgBnB,OAfAD,EAAS9E,OAAO,OAAQuD,EAAM/I,MAC9BsK,EAAS9E,OAAO,OAAQwE,GACxBM,EAAS9E,OAAO,cAAewE,GAC/BM,EAAS9E,OAAO,OAAQuD,GACxBuB,EAAS9E,OAAO,OAAQuD,EAAMhJ,MAC9BuK,EAAS9E,OAAO,OAAQuD,EAAMyB,MAC9BF,EAAS9E,OAAO,kBAAmB,WACnC8E,EAAS9E,OAAO,mBAAoBuD,EAAM0B,cAC1CH,EAAS9E,OAAO,oBAAqBuD,EAAM0B,cAOpCvC,KACFwC,KAAKxN,EAAS8M,GACd5B,kBACAuC,QAAQ,SACRC,KAAKN,GACLO,OAAM,YAAe,IAAZC,EAAW,EAAXA,KACN,OAAoB,IAAhBA,EAAKhD,OAAsB,GACxBiD,KAAKF,MAAMC,MAErBE,GAAG,YAAY,SAAA9H,GAEZ6F,EAAMe,SAAW5G,EAAM+H,QACvBC,GAAYC,eAAerM,KAAKiK,U,qBC/FjCqC,G,WAnDX,mCAAY3O,EAASC,GAAQ,iDAF7BC,UAAKC,EAIDC,KAAKF,KAAOD,EAEZD,EAAQK,UAAU,SAAU6K,GACxB9K,KAAKwO,mBAAmB1D,IAC1B3K,KAAKH,O,0GAQQ8K,GAClB,IAAD,OACUzK,EAAUC,GAAYjB,SAASkB,WAErC,QAAcR,IAAV+K,GAAuBA,EAAMG,OAAS,EAC1C,CACI,IAAIzC,EAAQnI,EAASyK,EAErBO,KAAQoD,OAAOjG,GACV+C,kBACAC,IAAI,SAAU,oBACdkD,KAAI,SAAC7N,EAAK8N,GAEP,GAAK9N,EAMD,GAAmB,MAAfA,EAAIC,OACJkB,GAAWd,WAAWe,KAAK,UACxB,GAAmB,MAAfpB,EAAIC,OACXkB,GAAW4M,MAAM3M,KAAK,wDACnB,CACH,IAAIlB,EAAS,CAAC,KAAQF,EAAIC,OAAQ,OAAUD,EAAIG,WAAY,QAAWH,EAAII,cAC3E,EAAKnB,KAAKV,MAAM2B,QAVpB,EAAKjB,KAAKmC,MAAK,W,6BC2ExB4M,G,WAlGX,6BAAYjP,EAASC,GAAQ,2CAF7BC,UAAKC,EAIDC,KAAKF,KAAOD,EACZD,EAAQK,UAAUD,KAAK8O,gBAAgB3O,KAAKH,O,8FAQhCuI,GACf,IAAD,OACUlI,EAAUC,GAAYjB,SAASkB,WAEjCwO,EAAQxG,EAAMpF,KACdqF,EAAOnI,EAASkI,EAAM9E,KAAM,IAAKsL,EAEjCtB,EAAW,IAAIC,SACnBD,EAAS9E,OAAO,OAAQJ,EAAMyG,UAC9BvB,EAAS9E,OAAO,kBAAmB,aAEnCnI,MAAMgI,EAAM,CACR/H,OAAQ,OACRoL,KAAM4B,IAELhP,MAAK,SAAAiC,GACFzB,QAAQgQ,KAAK,gCACVvO,EAASC,aACR1B,QAAQsN,MAAM,gBAAiB7L,EAASE,KACxC5C,OAAOC,SAAWyC,EAASE,KAG/B,EAAKd,KAAKmC,MAAK,MAElBxD,MAAK,SAACiC,GAAD,OAAcA,EAASoI,UAC5BrK,MAAK,SAAAqK,GACGA,EAAKoG,YACNpG,EAAKoG,UAAYpG,EAAKkG,UAE1B,EAAKlP,KAAKmC,KAAK6G,MAElB3J,OAAM,SAAA0B,GAGH,GAFA5B,QAAQkQ,KAAKtO,GAEM,MAAfA,EAAIC,OACJkB,GAAWd,WAAWe,KAAK,UAE1B,GAAmB,MAAfpB,EAAIC,OACTkB,GAAW4M,MAAM3M,KAAK,oDACnB,CACHhD,QAAQG,MAAMyB,GACd,IAAIE,EAAS,CAAC,KAAQF,EAAIC,OAAQ,OAAUD,EAAIG,WAAY,QAAWH,EAAII,cAC3E,EAAKnB,KAAKV,MAAM2B,W,uBCHrBqO,G,WA1DX,gCAAYxP,EAASC,GAAQ,8CAF7BC,UAAKC,EAIDC,KAAKF,KAAOD,EAEZD,EAAQK,UAAU,SAAUoP,GACxBrP,KAAKsP,QAAQD,IACflP,KAAKH,O,iFAQHqP,GACP,IAAD,OACUhP,EAAUC,GAAYjB,SAASkB,WAEjCkN,EAAW,IAAIC,SACnB,IAAK,IAAMpJ,KAAO+K,EAEF,SAAR/K,GACAmJ,EAAS9E,OAAOrE,EAAK+K,EAAY/K,IAKzC9D,MAAOH,EAASgP,EAAW,KAAU,CACjC5O,OAAQ,MACRoL,KAAM4B,IAGLhP,MAAK,SAAAiC,GAKF,OAJGA,EAASC,aACR1B,QAAQC,IAAI,gBAAiBwB,EAASE,KACtC5C,OAAOC,SAAWyC,EAASE,KAExBF,KAGVjC,MAAK,SAACiC,GAAD,OAAcA,EAASoI,UAC5BrK,MAAK,SAAAqK,GACF,EAAKhJ,KAAKmC,KAAK6G,MAElB3J,OAAM,SAAA0B,GAEH,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B9C,OAAOC,SAAW,QACf,CACH,IAAI8C,EAAS,CAAC,KAAQF,EAAIC,OAAQ,OAAUD,EAAIG,WAAY,QAAWH,EAAII,cAAcJ,EAAIqM,SAC7F,EAAKpN,KAAKV,MAAM2B,W,0BCOrB,OAjDX,uBAAe,mCAYfwO,YAAc,CAACjO,OAAO,IAAIH,WAAWrB,KAAK,IAAIqB,YAZhC,KAiBdqO,gBAAkB,CAAClO,OAAO,IAAIH,WAAWrB,KAAK,IAAIqB,YAjBpC,KAsBd2L,WAAa,CAACxL,OAAO,IAAIH,WAAWrB,KAAK,IAAIqB,YAtB/B,KA2BdqN,mBAAqB,CAAClN,OAAO,IAAIH,WAAWrB,KAAK,IAAIqB,YA3BvC,KAiCdsO,aAAe,CAACnO,OAAO,IAAIH,WAAWrB,KAAK,IAAIqB,YAjCjC,KAuCduO,YAAc,IAAIvO,WAvCJ,KAwCdwO,UAAY,IAAIxO,WAxCF,KAyCdmN,eAAiB,IAAInN,WAzCP,KA0CdyO,gBAAkB,IAAIzO,WA1CR,KA2Cd0O,YAAc,IAAI1O,WA1CdnB,KAAK8P,mBAAqB,IAAIjF,GAAmB7K,KAAKuP,YAAYjO,OAAQtB,KAAKuP,YAAYzP,MAC3FE,KAAK+P,uBAAyB,IAAIX,GAAuBpP,KAAKwP,gBAAgBlO,OAAQtB,KAAKwP,gBAAgB1P,MAC3GE,KAAKgQ,kBAAoB,IAAIhE,GAAkBhM,KAAK8M,WAAWxL,OAAQtB,KAAK8M,WAAWhN,MACvFE,KAAKiQ,0BAA4B,IAAI1B,GAA0BvO,KAAKwO,mBAAmBlN,OAAQtB,KAAKwO,mBAAmB1O,MACvHE,KAAKkQ,oBAAsB,IAAIrB,GAAoB7O,KAAKyP,aAAanO,OAAQtB,KAAKyP,aAAa3P,OCgHxF,O,WAzHX,qCAAe,iDAJfuI,UAAY,IAAI/I,oBAAgB,GAIlB,KAHdQ,KAAO,IAAIqB,WAGG,KAFdG,OAAS,IAAIH,WAITnB,KAAKsB,OAAOrB,UAAU,SAAU6K,GAC5B9K,KAAKmQ,mBAAmBrF,IAC1B3K,KAAKH,O,sIAUc8K,G,mGAIfzK,EAAUC,GAAYjB,SAASkB,WAEjCiI,EAAOnI,EAAS,YAEhByK,GAASA,EAAMG,OAAS,IAEpBzC,EADAsC,EAAMsF,WAAW,QACVtF,EAEAzK,EAAUyK,IAInBrC,EAAU,IAAIC,SACZC,OAAO,SAAU,wBAEzB3I,KAAKqI,UAAUpG,MAAK,G,SAGFzB,MAAMgI,EAAM,CAC1B/H,OAAQ,MACRmI,MAAO,WACPH,QAASA,EACTI,YAAa,Y,cAJX8D,E,iBAOaA,EAAI7D,O,WAAjBA,E,OACY,KAAd6D,EAAI7L,O,iBACAgI,EAAKC,WACDsH,EAASvH,EAAKC,UAAU6C,MAAM0E,QAAO,SAAAC,GAAC,OAAKA,EAAEpN,KAAKiN,WAAW,QACjEpQ,KAAKF,KAAKmC,KAAKoO,IAEfrQ,KAAKF,KAAKmC,KAAK,IAGnBjC,KAAKqI,UAAUpG,MAAK,G,+BAEpBjC,KAAKqI,UAAUpG,MAAK,G,KAEE0K,EAAI7L,O,KAAkB6L,EAAI3L,W,UAA6B2L,EAAIsB,O,oBAA7ElN,E,CAAU,K,KAAoB,O,KAA0B,Q,MAC5Df,KAAKF,KAAKV,MAAM2B,G,mMAYF+J,GACrB,IAAD,OAGUzK,EAAUC,GAAYjB,SAASkB,WAGrC,QAAcR,IAAV+K,GAAuBA,EAAMG,OAAS,EAC1C,CAII,IAAIzC,EAAOnI,EAASyK,EAGpBO,QAAQC,IAAI9C,GACP+C,kBACAC,IAAI,SAAU,oBACdkD,KAAI,SAAC7N,EAAK8N,GAEP,GAAK9N,EAUD,GAAmB,MAAfA,EAAIC,OACJkB,GAAWd,WAAWe,KAAK,UACxB,GAAmB,MAAfpB,EAAIC,OACXkB,GAAW4M,MAAM3M,KAAK,wDACnB,CACH,IAAIlB,EAAS,CACT,KAAQF,EAAIC,OACZ,OAAUD,EAAIG,WACd,QAAWH,EAAII,cAEnB,EAAKnB,KAAKV,MAAM2B,OApBd,CAEN,IAAIsP,EAAS,GACT1B,EAAI9C,OACJwE,EAAS1B,EAAI9C,KAAKyE,QAAO,SAAAC,GAAC,OAAKA,EAAEpN,KAAKqN,WAAWJ,WAAW,SAEhE,EAAKtQ,KAAKmC,KAAKoO,Y,8BCxFjCI,G,8EAEF,yBAAY9O,EAAOqE,GAAU,IAAD,4CACxB,cAAMrE,IAyBV+O,UAAY,WACR,EAAKpK,SAAS,CACV5E,MAAM,KA5Bc,EAgC5BiP,UAAY,WACR,EAAKrK,SAAS,CACV5E,MAAM,KA/BV,EAAK3C,MAAQ,CACT6R,WAAW,GACXlP,MAAK,GAGT,EAAKmP,WAAa,EAAKA,WAAW1Q,KAAhB,gBARM,E,gGAYxBH,KAAKsG,SAAS,CAACqD,WAAU,M,kEAKzB3J,KAAKsG,SAAS,CAACqD,WAAU,M,0EAGHmH,GACtB9Q,KAAK2B,MAAQmP,EACb9Q,KAAKsG,SAAS,CAAC,KAAOwK,EAASpP,S,8CAkB3B1B,KAAK2B,MAAMoP,QAAU/Q,KAAKjB,MAAM6R,WAAW3F,OAAS,GACpDjL,KAAK2B,MAAMoP,OAAO/Q,KAAKjB,MAAM6R,YAEjC5Q,KAAKsG,SAAS,CAAC,MAAO,M,sCAIhB,IAAD,OAEL,OACI,kBAAC,KAAD,CACI0K,QAAShR,KAAKjB,MAAM2C,KACpBuP,SAAUjR,KAAK2Q,UACfO,KAAMlR,KAAK6Q,WACXM,OAAO,SACPC,WAAW,SACXC,MAAM,cAEF,kBAACC,GAAA,EAAD,CACI7J,GAAG,gBACH7C,MAAM,cACN2M,MAAOvR,KAAKjB,MAAM6R,WAClBY,SAAU,kBAACC,GAAD,OAAK,EAAKnL,SAAS,CAACsK,WAAYa,EAAEC,OAAOH,SACnDI,OAAO,e,iBAjED7M,aA4EfE,gBAhFI,SAAbC,WAAcC,GAAD,MAAY,KAgFhBF,CAAuByL,I,6IC1F9BmB,GAAaC,KAAbD,SACAE,GAAYC,KAAZD,QACAE,GAAWC,KAAXD,OAkDFE,G,8EAGF,yBAAYvQ,EAAOqE,GAAU,IAAD,4CACxB,cAAMrE,EAAOqE,IACRjH,MAAQ,CACToT,QAAS,GACTC,SAAU,EAAKzQ,MAAMyQ,SAAS,EAAKzQ,MAAMyQ,SAAS,GAGtD,EAAKC,mBAAqB,EAAKA,mBAAmBlS,KAAxB,gBAC1B,EAAKmS,gBAAkB,EAAKA,gBAAgBnS,KAArB,gBACvB,EAAKoS,wBAA0B,EAAKA,wBAAwBpS,KAA7B,gBAC/B,EAAKqS,sBAAwB,EAAKA,sBAAsBrS,KAA3B,gBAVL,E,gGAaTsS,GACfzS,KAAK2B,MAAM+Q,KAAX,OAA4BD,EAExBzS,KAAK2B,MAAMgR,gBACX3S,KAAK2B,MAAMgR,eAAe3S,KAAK2B,MAAM+Q,MAGzC1S,KAAKsG,SAAS,CAAC,OAASmM,M,sDAIZG,GACZ5S,KAAK2B,MAAM+Q,KAAX,KAA0BE,EAEtB5S,KAAK2B,MAAMkR,aACX7S,KAAK2B,MAAMkR,YAAY7S,KAAK2B,MAAM+Q,MAGtC1S,KAAKsG,SAAS,CAAC,KAAOsM,M,sEAIFvM,GACpBrG,KAAK2B,MAAM+Q,KAAX,YAAiCrM,EAAMG,cAAc+K,MACrDvR,KAAKsG,SAAS,CAAC,YAAcD,EAAMG,cAAc+K,U,kEAI/BlL,GACdrG,KAAK2B,MAAMmR,qBACX9S,KAAK2B,MAAMmR,oBAAoB9S,KAAK2B,MAAM+Q,Q,sCAO9C,IAAItQ,EAAUpC,KAAK2B,MAAMS,QAEnBwQ,EAAO,GAQb,OAPG5S,KAAK2B,MAAM+Q,KAAX,MACC1S,KAAK2B,MAAM+Q,KAAX,KAAwBxO,KAAI,SAAC6O,GACzBH,EAAK1J,KAAK,kBAAC8I,GAAD,CAAQ1N,IAAKyO,GAAMA,OAMjC,yBAAKvQ,UAAWJ,EAAQ4Q,cAEpB,yBAAKxQ,UAAWJ,EAAQ6Q,aAEpB,yBAAKnQ,MAAO,CAACuC,OAAQ,OAAQ6N,SAAU,OAAQ/K,UAAW,WACtD,yBAAKgL,IAAK7S,GAAYjB,SAASkB,WAAcP,KAAK2B,MAAM+Q,KAAX,KACxCU,IAAKpT,KAAK2B,MAAM+Q,KAAX,KACL5P,MAAO,CAACuQ,UAAW,OAAQH,SAAU,OAAQtN,UAAW,cAMrE,yBAAKpD,UAAWJ,EAAQkR,YACpB,kBAAC,KAAD,CACIC,WAAS,EACT/B,SAAUxR,KAAKqS,mBACfd,MAAOvR,KAAK2B,MAAM+Q,KAAX,OACP5P,MAAO,CAAE0Q,MAAO,YAKxB,yBAAKhR,UAAWJ,EAAQqR,cACpB,kBAACzQ,EAAA,EAAD,CAAYkE,QAAQ,MAApB,aAEA,kBAAC,KAAD,CAAQwM,KAAK,OAAO5Q,MAAO,CAAEqC,MAAO,QAAUwO,YAAY,YAAYpC,MAAOvR,KAAK2B,MAAM+Q,KAAX,KAAyBlB,SAAUxR,KAAKsS,iBAChHM,IAIT,yBAAKpQ,UAAWJ,EAAQwR,iBACpB,kBAAC5Q,EAAA,EAAD,CAAYkE,QAAQ,MAApB,gBACA,kBAAC0K,GAAD,CAAUnK,GAAG,cACHoM,KAAM,EACNtC,MAAOvR,KAAK2B,MAAM+Q,KAAX,YACPlB,SAAUxR,KAAKuS,wBACfuB,OAAQ9T,KAAKwS,yBAG3B,yBAAKhQ,UAAWJ,EAAQ2R,UAEpB,kBAAC,KAAD,CAAMC,iBAAiB,UAAUlR,MAAO,CAACqC,MAAM,SAC3C,kBAAC2M,GAAD,CAASmC,IAAI,UAAU3P,IAAI,WACvB,6BACI,kBAAC4P,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtR,MAAO,CAACyC,QAAQ,QACtB,kBAAC8O,GAAA,EAAD,CAAWpR,UAAU,KAAKqR,MAAM,MAAMC,MAAM,QAAQzR,MAAO,CAACyC,QAAQ,QAApE,QACA,kBAAC8O,GAAA,EAAD,CAAWE,MAAM,QAAQvU,KAAK2B,MAAM+Q,KAAX,WAE7B,kBAAC0B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWpR,UAAU,KAAKqR,MAAM,MAAMC,MAAM,QAAQzR,MAAO,CAACyC,QAAQ,QAApE,cACA,kBAAC8O,GAAA,EAAD,CAAWE,MAAM,QAAQvU,KAAK2B,MAAM+Q,KAAX,MAAzB,MAAsD1S,KAAK2B,MAAM+Q,KAAX,SAE1D,kBAAC0B,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWpR,UAAU,KAAKqR,MAAM,MAAMC,MAAM,QAAQzR,MAAO,CAACyC,QAAQ,QAApE,WACA,kBAAC8O,GAAA,EAAD,CAAWE,MAAM,QAAQC,KAAOxU,KAAK2B,MAAM+Q,KAAX,aAAgC+B,OAAO,4BAE3E,kBAACL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWpR,UAAU,KAAKqR,MAAM,MAAMC,MAAM,QAAQzR,MAAO,CAACyC,QAAQ,QAApE,YACA,kBAAC8O,GAAA,EAAD,CAAWE,MAAM,QAAQC,KAAOxU,KAAK2B,MAAM+Q,KAAX,kBAAqC+B,OAAO,8BAIxF,6BACA,2BAAIzU,KAAK2B,MAAM+Q,KAAX,QAGZ,kBAACZ,GAAD,CAASmC,IAAI,WAAW3P,IAAI,YAA5B,iBAGA,kBAACwN,GAAD,CAASmC,IAAI,aAAa3P,IAAI,cAA9B,wB,iBAxIMQ,aAsJfE,gBAzLI,SAAbC,WAAcC,GAAD,MAAY,CAC3B8N,aAAc,CACVrB,OAAQ,MACRnM,QAAQ,OACRC,QAAQ,MACRC,iBAAiB,0CACjBC,oBAAoB,iBACpBL,WAAYJ,EAAMwP,QAAQpP,WAAWqP,MACrCC,eAAgB,UAEpB3B,YAAa,CACTpP,QAAS,IACTD,WAAY,IACZgR,eAAgB,UAEpBtB,WAAY,CACRzP,QAAS,IACTD,WAAY,KAEhB6P,aAAc,CACV5P,QAAS,IACTD,WAAY,KAEhBgQ,gBAAiB,CACb/P,QAAS,IACTD,WAAY,IACZuB,MAAO,QAEX4O,SAAU,CACNlQ,QAAS,IACTD,WAAY,QA2JLoB,CAAuBkN,IChMhC2C,G,kEACF,mBAAYlT,GAAQ,IAAD,sCACf,cAAMA,IACD5C,MAAQ,CACT4K,WAAW,EACXmL,sBAAsB,EACtBC,aAAa,EACbC,oBAAqB,GACrBC,QAAS,GACTC,MAAO,GACPC,aAAc,IAGlB,EAAKC,eAAiB,EAAKA,eAAejV,KAApB,gBACtB,EAAKkV,iBAAmB,EAAKA,iBAAiBlV,KAAtB,gBACxB,EAAKmV,6BAA+B,EAAKA,6BAA6BnV,KAAlC,gBACpC,EAAKoV,mBAAqB,EAAKA,mBAAmBpV,KAAxB,gBAC1B,EAAKqV,+BAAiC,EAAKA,+BAA+BrV,KAApC,gBACtC,EAAKsV,iBAAmB,EAAKA,iBAAiBtV,KAAtB,gBAjBT,E,kFAoBJsR,GACX,IAAMhK,EAAKgK,EAAEjL,cAAckP,WAAW,WAAWnE,MACjDvR,KAAK2B,MAAMgU,WAAWlO,K,gEAGLmO,EAAYC,EAASC,EAAQC,GAE9C9W,QAAQC,IAAI,mB,wDAGC8W,GACb,IAAMvS,EAAOuS,EAAOxP,cAAckP,WAAW,aAAanE,MAE1D,OADAvR,KAAKsG,SAAS,CAACwO,sBAAqB,EAAMmB,WAAWxS,KAC9C,I,gFAGkBuS,GAGzB,OAFIhW,KAAK2B,MAAMuU,cAAelW,KAAK2B,MAAMuU,aAAalW,KAAKjB,MAAMkX,YACjEjW,KAAKsG,SAAS,CAACwO,sBAAqB,EAAOmB,WAAW,QAC/C,I,4DAGQD,GACf,IAAMvS,EAAOuS,EAAOxP,cAAckP,WAAW,aAAanE,MAE1D,OADAvR,KAAKsG,SAAS,CAAC6P,wBAAuB,EAAMF,WAAWxS,KAChD,I,oFAGoBuS,GAG3B,OAFIhW,KAAK2B,MAAMyU,gBAAiBpW,KAAK2B,MAAMyU,eAAepW,KAAKjB,MAAMkX,YACrEjW,KAAKsG,SAAS,CAAC6P,wBAAuB,EAAOF,WAAW,QACjD,I,wDAIMvD,GACT1S,KAAK2B,MAAM0U,cACXrW,KAAK2B,MAAM0U,aAAa3D,K,sDAKhBrJ,EAAGC,EAAGgN,GAGlB,OADArX,QAAQC,IAAIoX,GACQ,cAAhBjN,EAAEkN,aAA6C,YAAhBjN,EAAEiN,aAAiC,EAC7C,YAAhBlN,EAAEkN,aAA2C,cAAhBjN,EAAEiN,YAAkC,EACjElN,EAAEkN,cAAgBjN,EAAEiN,YAErBlN,EAAElG,KAAKqT,OAAOC,cAAgBnN,EAAEnG,KAAKqT,OAAOC,eAAwB,EAC/DpN,EAAElG,KAAKqT,OAAOC,cAAgBnN,EAAEnG,KAAKqT,OAAOC,cAAuB,EAChE,EAEJ,I,sDAGApN,EAAGC,EAAGgN,EAAGI,GAErB,MAAoB,cAAhBrN,EAAEkN,aAA6C,YAAhBjN,EAAEiN,aAAiC,EAC7C,YAAhBlN,EAAEkN,aAA2C,cAAhBjN,EAAEiN,YAAkC,EACjElN,EAAEkN,cAAgBjN,EAAEiN,YAErBlN,EAAEsN,YAAcrN,EAAEqN,YAAyB,WAAJL,EAAa,GAAG,EAClDjN,EAAEsN,YAAcrN,EAAEqN,YAAyB,WAAJL,GAAc,EAAE,EACpD,EAEJ,I,8CAMH,IAAD,OACR,MAAO,CACH,CACIjF,MAAO,GACPuF,UAAW,OACXzR,MAAO,GACP0R,OAAQ,gBAAC5I,EAAM6I,GACX,MAA2B,cAAvBA,EAAOP,YACC,kBAACQ,EAAA,EAAD,CAAgBjU,MAAO,CAAC8H,SAAS,UACjB,YAAvBkM,EAAOP,aAA6BO,EAAOE,SAAS5G,WAAW,UACxD,yBAAK+C,IAAK2D,EAAOrT,KAAM,YAAa2P,IAAI,GAAGtQ,MAAO,CAACqC,MAAM,UAEzD,kBAAC8R,EAAA,EAAD,CAAcnU,MAAO,CAAC8H,SAAS,YAGhD,CACCyG,MAAO,OACPuF,UAAW,OACXtS,IAAK,OACLwR,OAAQ9V,KAAKkX,gBACbL,OAAQ,gBAAC5I,EAAM6I,GAEX,MAA2B,cAAvBA,EAAOP,YACC,kBAAC,IAAD,CAAMY,GAAIL,EAAOrT,MAAOwK,GAExB,uBAAG1K,QAAS,0BAAI,EAAK+C,SAAS,CAACyO,aAAY,EAAMI,aAAc2B,MAAW7I,KAI9F,CACIoD,MAAO,eACPuF,UAAW,cACXtS,IAAK,cACLa,MAAO,IACPiS,WAAY,CAAC,MACbtB,OAAQ9V,KAAKqX,gBACbR,OAAQ,gBAAA5I,GAAI,OAAI,8BAAOA,EAAKwG,aAAO6C,aAASrJ,GAAQ,IAAI,yBAAyB,MAErF,CACIoD,MAAO,SACP/M,IAAK,SACLa,MAAO,IACP0R,OAAQ,gBAAC5I,EAAM6I,GACX,IAAMS,EAAcT,EAAOU,OAAOC,UAAY,EAAK9V,MAAM+V,WAAY,kBAACpU,EAAA,EAAD,CAAQJ,KAAK,OAAOyU,YAAWb,EAAOrT,KAAMF,QAAS,0BAAI,EAAK5B,MAAM+V,WAAWZ,EAAO3T,KAAM2T,EAAOU,OAAOC,SAASlT,QAAnH,YAA8I,+BAC7MqT,EAAYd,EAAOU,OAAOK,KAAM,kBAACvU,EAAA,EAAD,CAAQJ,KAAK,OAAOyU,YAAWb,EAAOrT,KAAMF,QAAS,EAAK8R,kBAA1D,UAA8F,+BAC9HyC,EAAU,+BAEhB,MAA2B,YAAvBhB,EAAOP,aAA6BO,EAAOE,SAAS5G,WAAW,UACvD,kBAAC,IAAD,CAAOzC,KAAK,UACf4J,EACAK,EACAE,GAGG,kBAAC,IAAD,CAAOnK,KAAK,UACf4J,EACAK,Q,wDASrB,MAAQ,CACJpG,SAAU,kBAACuG,EAAiBC,GACxB/Y,QAAQC,IAAR,2BAAgC6Y,GAAmB,iBAAkBC,IAEzEC,iBAAkB,0BAAAnB,GAAM,MAAK,CACzBoB,SAAiC,uBAAvBpB,EAAOqB,YACjBhV,KAAM2T,EAAO3T,U,sCAOf,IAAD,OAID0Q,GAHY7T,KAAK2B,MAAMS,QAGhB,KAEXyR,GADAA,EAAOA,EAAKuE,OAAOpY,KAAK2B,MAAMsT,UAClBmD,OAAOpY,KAAK2B,MAAMuT,QACzB9L,KAAKpJ,KAAKkX,iBAEf,IAAMmB,EAAerY,KAAKsY,kBAE1B,OACI,6BACI,kBAAC,KAAD,CAAOC,OAAO,OACPC,QAASxY,KAAK2B,MAAM6W,QACpBC,QAASzY,KAAK0Y,aACdC,WAAY9E,EACZlG,KAAK,QACLiI,WAAY,CAAC,SAAW,GAAIgD,kBAAiB,GAC7CC,eAAgB,CAAC,SAAU,WAC3BR,aAAY,aACRnV,KAAM,YACHmV,GAEP7G,SAAUxR,KAAK8Y,uBAEtB,kBAAC,KAAD,CACIzH,MAAM,YACN0H,UAAU,QACVC,UAAU,EACVC,cAAc,EACd9T,MAAM,MACN+T,UAAW,CAAC3T,QAAQ,OACpB4T,QAAS,0BAAI,EAAK7S,SAAS,CAACyO,aAAY,EAAOI,aAAa,MAC5DnE,QAAShR,KAAKjB,MAAMgW,aAEpB,kBAAC,GAAD,CACIrC,KAAM1S,KAAKjB,MAAMoW,aACjBxC,eAAgB3S,KAAKyV,iBACrB3C,oBAAqB9S,KAAKyV,iBAC1B5C,YAAa7S,KAAKyV,oBAG1B,kBAAC,KAAD,CACIzE,QAAShR,KAAKjB,MAAM+V,qBACpB7D,SAAU,oBAAO,EAAK3K,SAAS,CAACwO,sBAAsB,KACtD5D,KAAMlR,KAAKsV,6BACXnE,OAAO,MACPC,WAAW,KACXC,MAAM,iBACN,gEAGJ,kBAAC,KAAD,CACIL,QAAShR,KAAKjB,MAAMoX,uBACpBlF,SAAU,oBAAO,EAAK3K,SAAS,CAAC6P,wBAAwB,KACxDjF,KAAMlR,KAAKwV,+BACXrE,OAAO,MACPC,WAAW,KACXC,MAAM,iBACN,2F,WAvOI+H,IAAMC,eAqPf1O,eAAWkK,ICxHX,O,WAxHX,6BAAYjV,EAASC,GAAQ,2CAJ7BC,KAAO,IAAIqB,WAIiB,KAH5BG,OAAS,IAAIH,WAGe,KAF5BkH,UAAY,IAAI/I,mBAIZU,KAAKsB,OAAOrB,UAAU,SAAUqZ,GAC5BtZ,KAAK8O,gBAAgBwK,IACvBnZ,KAAKH,O,6HAQWsZ,G,mGAEZjZ,EAAUC,GAAYjB,SAASkB,WAEzB+Y,EAAOnW,KACfqF,EAAOnI,EAASiZ,EAAO7V,KAAM,KAE7BgK,EAAW,IAAIC,UACV/E,OAAO,OAAQ2Q,EAAOnW,MAC/BsK,EAAS9E,OAAO,kBAAmB,a,kBAGbnI,MAAMgI,EAAM,CAC1B/H,OAAQ,OACRoL,KAAM4B,EACN5E,YAAa,Y,UAIC,MAPZ8D,E,QAOE7L,O,kCACe6L,EAAI7D,O,QAAjB+C,E,OACA5N,EAAW4N,EAAK2L,OAAOK,KAAKtT,KAClCvE,KAAKF,KAAKmC,KAAKhE,GACf+B,KAAKqI,UAAUpG,MAAK,G,8BAEd,IAAIsX,MAAM,iB,0DAGpBta,QAAQua,IAAR,MACIzY,EAAS,CAAC,KAAQ,KAAID,OAAQ,OAAU,KAAIE,WAAY,QAAW,KAAIC,cAC3EjB,KAAKF,KAAKV,MAAM2B,GAChBf,KAAKqI,UAAUpG,MAAK,G,2KC4IjB,O,WArLX,2BAAYrC,EAASC,GAAQ,IAAD,gDAJ5BC,KAAO,IAAIqB,WAIiB,KAH5BG,OAAS,IAAIH,WAGe,KAF5BkH,UAAY,IAAI/I,mBAIZU,KAAKsB,OAAOyI,KAAKkC,cAAS,SAAAC,GACtB,IAAIC,MAAMC,QAAQF,GAMd,OAAO,EAAKG,eAAeH,GAL3B,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAMjB,OAAQE,IAAK,CACxBe,EAAMf,GACjB,OAAO,EAAKkB,eAAeH,MAKpC,IAAIjM,UAAUhB,QAAQsN,O,0FAKd+M,GAAS,IAAD,OAInB,OAAIA,EAAOhN,KAIAE,cACFC,GAAG6M,GACH5M,SAAQ,SAAAC,GAAG,OAAI,IAAIlB,SAAQ,SAACmB,EAASC,GAClC,OAAO,EAAKC,WAAWwM,GAClB7a,MAAK,SAAAsO,GAAM,OAAEH,EAAQG,MACrB5N,OAAM,SAAA0B,GAEH,IAAImM,EAAQ,EAOZ,OANIsM,EAAOtM,QACPA,EAAMsM,EAAOtM,MAAM,GAEvBsM,EAAOrM,SAAW,EAClBqM,EAAOtM,MAAQA,EACfsM,EAAOG,SAAW,qBAAsBzM,EAAO,MACxCH,EAAOhM,YAEtBmM,MAAM,GAAG7N,OAAM,SAAA0B,GAKf,OAFAyY,EAAOG,SAAW5Y,EAAIC,OAAQ,KAAMD,EAAIqM,QACxCoM,EAAOrM,SAAW,EACXT,cAAWC,GAAG5L,MAK1B,O,4CAWAyY,GAEP,IAAInM,EAAemM,EAAO7V,KACtB6V,EAAOhN,KAAKe,mBACZF,EAAemM,EAAOhN,KAAKe,mBACrBiM,EAAOhN,KAAKkB,eAClBL,GAAgBmM,EAAOhN,KAAKkB,aAAaF,OAAO,EAAGgM,EAAOhN,KAAKkB,aAAaD,YAAY,OAI5F,IAAIE,EAAW,IAAIC,SACnBD,EAAS9E,OAAO,OAAQ2Q,EAAOhN,KAAKnJ,MACpCsK,EAAS9E,OAAO,OAAQwE,GACxBM,EAAS9E,OAAO,cAAewE,GAC/BM,EAAS9E,OAAO,OAAQ2Q,EAAOhN,MAC/BmB,EAAS9E,OAAO,OAAQ2Q,EAAOhN,KAAKpJ,MACpCuK,EAAS9E,OAAO,OAAQ2Q,EAAOhN,KAAKqB,MACpCF,EAAS9E,OAAO,kBAAmB,WACnC8E,EAAS9E,OAAO,mBAAoB2Q,EAAOhN,KAAKsB,cAChDH,EAAS9E,OAAO,oBAAqB2Q,EAAOhN,KAAKsB,cAIjD3O,QAAQC,IAAI,aAAcmB,EAAS8M,GAEnC,IAAM9M,EAAUC,GAAYjB,SAASkB,WAC/BiI,EAAOnI,EAASiZ,EAAO7V,KAE7B,OAAO4H,KACFwC,KAAKrF,GACL+C,kBACAuC,QAAQ,SACRC,KAAKN,GACLO,OAAM,YAAc,EAAXC,KACFqL,EAAOI,WAAYJ,EAAOI,UAAU,KAAMJ,EAAOhN,SAExD6B,GAAG,YAAY,SAAA9H,GAEZiT,EAAOrM,SAAW5G,EAAM+H,QACpBkL,EAAOK,YAAaL,EAAOK,WAAW,CAAEvL,QAAS/H,EAAM+H,e,6EAgBzDkL,G,yGAEJjZ,EAAUC,GAAYjB,SAASkB,WAE/BwO,EAAQuK,EAAOhN,KAAKnJ,KACpBqF,EAAOnI,EAASiZ,EAAO7V,KAGT6V,EAAOhN,KAAKpJ,KAC5BsK,EAAe,IACf8L,EAAOhN,KAAKe,qBACZG,EAAe8L,EAAOhN,KAAKe,qBAK3BI,EAAW,IAAIC,UACV/E,OAAO,OAAQoG,GACxBtB,EAAS9E,OAAO,OAAQ2Q,EAAO7V,MAC/BgK,EAAS9E,OAAO,cAAe6E,GAC/BC,EAAS9E,OAAO,OAAQ2Q,EAAOhN,MAC/BmB,EAAS9E,OAAO,OAAQ2Q,EAAOhN,KAAKpJ,MACpCuK,EAAS9E,OAAO,OAAQ2Q,EAAOhN,KAAKqB,MACpCF,EAAS9E,OAAO,kBAAmB,WACnC8E,EAAS9E,OAAO,mBAAoB2Q,EAAOhN,KAAKsB,cAChDH,EAAS9E,OAAO,oBAAqB2Q,EAAOhN,KAAKsB,c,oBAKtBpN,MAAMgI,EAAM,CAC/B/H,OAAQ,OACRoL,KAAM4B,EACN5E,YAAa,Y,QAHXnI,E,OAMAkZ,EAASlZ,EAASmL,KAAKgO,YACzBC,EAAgB,E,yBAEKF,EAAOG,O,aAAtBhN,E,QACKiN,K,wBACP/a,QAAQC,IAAI,kBACRoa,EAAOI,WAAYJ,EAAOI,UAAU,KAAMJ,EAAOhN,MACrDtM,KAAKqI,UAAUpG,MAAK,G,6BAIxB6X,GAAiB/M,EAAOwE,MAAMtG,OAC9BhM,QAAQC,IAAI,WAAY4a,EAAe,IAAKR,EAAOhN,KAAKqB,KAAM,0BAA2B2L,EAAOhN,KAAKnJ,MACjGmW,EAAOK,YAAaL,EAAOK,WAAW,CAAEvL,QAAU0L,EAAgBR,EAAOhN,KAAKqB,KAAQ,M,2EAG3F2L,EAAOW,SAASX,EAAOW,QAAP,MACnBhb,QAAQua,IAAR,MACMzY,EAAS,CAAC,KAAQ,KAAID,OAAQ,OAAU,KAAIE,WAAY,MAAQ,KAAIkM,SAC1ElN,KAAKF,KAAKV,MAAM2B,GAChBf,KAAKqI,UAAUpG,MAAK,G,wJCtIjB,O,iGAxCXoG,UAAY,IAAI/I,mB,2HAOFwL,G,2FAEJzK,EAAUC,GAAYjB,SAASkB,WAEjCiI,EAAOnI,EAASyK,E,SAIhB9K,KAAKqI,UAAUpG,MAAK,G,SAEFzB,MAAMgI,EAAM,CAC1B/H,OAAQ,SACRoI,YAAa,Y,UAIC,K,OAAV/H,O,iBACJd,KAAKqI,UAAUpG,MAAK,G,8BAEd,IAAIsX,MAAM,iB,0DAGpBta,QAAQua,IAAR,MACIzY,EAAS,CAAC,KAAQ,KAAID,OAAQ,OAAU,KAAIE,WAAY,QAAW,KAAIC,cAC3EjB,KAAKF,KAAKV,MAAM2B,GAChBf,KAAKqI,UAAUpG,MAAK,G,+JCYjB,O,WA5CX,iCAAYrC,EAASC,GAAQ,+CAJ7BC,KAAO,IAAIqB,WAIiB,KAH5BG,OAAS,IAAIH,WAGe,KAF5BkH,UAAY,IAAI/I,mBAIZU,KAAKsB,OAAOrB,UAAU,SAAUia,GAC5Bla,KAAKsP,QAAQ4K,IACf/Z,KAAKH,O,yHAQGma,G,2FAEJ9Z,EAAUC,GAAYjB,SAASkB,WAEzB4Z,EAAMhX,KACdqF,EAAOnI,EAAS8Z,EAAM1W,K,kBAGJjD,MAAMgI,EAAM,CAC1B/H,OAAQ,MACRoL,KAAMqC,KAAKkM,UAAUD,GACrBtR,YAAa,Y,UAIC,K,OAAV/H,O,iBACJd,KAAKqI,UAAUpG,MAAK,G,8BAEd,IAAIsX,MAAM,iB,0DAGpBta,QAAQua,IAAR,MACIzY,EAAS,CAAC,KAAQ,KAAID,OAAQ,OAAU,KAAIE,WAAY,QAAW,KAAIC,cAC3EjB,KAAKF,KAAKV,MAAM2B,GAChBf,KAAKqI,UAAUpG,MAAK,G,6JCqC1BoY,G,kEAGF,mBAAY1Y,EAAOqE,GAAU,IAAD,sCACxB,cAAMrE,IAED5C,MAAQ,CACTsJ,WAAU,EACVsB,WAAU,EACV2Q,YAAW,EACXC,cAAa,EACbC,qBAAoB,EACpBC,mBAAkB,EAClBC,qBAAoB,EACpBC,kBAAiB,EACjBC,cAAc,GACdC,YAAY,GACZpX,KAAK,iBACLqX,YAAY,iBACZ7F,QAAQ,GACRC,MAAM,IAIV,EAAK6F,kBAAoB3B,IAAM4B,YAC/B,EAAKC,UAAY7B,IAAM4B,YAEvB,EAAK3F,iBAAmB,EAAKA,iBAAiBlV,KAAtB,gBACxB,EAAKoV,mBAAqB,EAAKA,mBAAmBpV,KAAxB,gBAC1B,EAAKsV,iBAAmB,EAAKA,iBAAiBtV,KAAtB,gBA1BA,E,0FA8BR,IAAD,OACfH,KAAKsG,SAAS,CAACqD,WAAU,IACzB3J,KAAKkb,eAELC,GAA0B9S,UAAU2B,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,WAAU,SAACsI,GACjF,EAAKjC,SAAS,CAAC,UAAaiC,OAEhCsG,GAAoBxG,UAAU2B,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,WAAU,SAACsI,GAC3E,EAAKjC,SAAS,CAAC,UAAaiC,OAGhC4S,GAA0Brb,KAAKkK,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,WAAU,SAACsI,GAE5DA,EAAM0M,QADtB,IAEMC,EAAQ3M,EAAM2M,OAAS,GAE7B,EAAK5O,SAAS,CAAC,OAAUiC,EAAO,QAAWA,EAAO,MAAS2M,OAI/DkG,GAAwBtb,KAAKkK,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,UAAU,CACzEgC,KAAM,cAACoZ,GAAD,OAAOnO,IAAQ+B,KAAK,wBAC1B7P,MAAO,eAACqS,GAAD,OAAOvE,IAAQ+B,KAAK,wBAK3BjP,KAAK2B,MAAM1D,SAASqd,SAASlL,WAAWpQ,KAAKjB,MAAM0E,OACnDzD,KAAKsG,SAAS,CAAC7C,KAAMzD,KAAK2B,MAAM1D,SAASqd,WACzCH,GAA0B7Z,OAAOW,KAAKjC,KAAK2B,MAAM1D,SAASqd,WAE1DH,GAA0B7Z,OAAOW,KAAKjC,KAAKjB,MAAM0E,Q,kEAMrDzD,KAAKsG,SAAS,CAACqD,WAAU,M,4DAIV2P,EAAQiC,GAEvBvb,KAAKsG,SAAS,CAACkU,qBAAoB,EAAOC,mBAAkB,EAAOC,qBAAoB,EAAOC,kBAAiB,IAE/G,IAAMa,EAAcxb,KAAKjB,MAAM0E,KACzBgY,EAAUzb,KAAKkb,eACjBM,IAAgBC,GAChBN,GAA0B7Z,OAAOW,KAAKwZ,K,kDAc1C,IAAIC,EAAQ1b,KAAK2B,MAAM8B,KAQvB,OAPIzD,KAAK2B,MAAM1D,SAASqd,UAAYtb,KAAK2B,MAAM1D,SAASqd,SAAS9K,WAAWJ,WAAWpQ,KAAKjB,MAAM+b,eAC9FY,EAAQ1b,KAAK2B,MAAM1D,SAASqd,UAE3BI,IACDA,EAAQ1b,KAAKjB,MAAM+b,aAGnBY,EAAMlL,WAAWJ,WAAWpQ,KAAKjB,MAAM+b,cACvC9a,KAAKsG,SAAS,CAAC,KAAQoV,IAChBA,IAGPzc,QAAQC,IAAI,iBAAkBwc,GACvB1b,KAAK2B,MAAM8B,Q,8DAKNA,EAAMkY,GACtB,IAAIC,EAAQnY,EAAKoY,MAAM,KACpBpY,EAAK2M,WAAW,OACfwL,EAAQA,EAAME,MAAM,IAIxB,IADA,IAAMC,EAAe,GACZ5Q,EAAI,EAAGA,EAAIyQ,EAAM3Q,OAAQE,IAAK,CACnC,IAAM6Q,EAAIJ,EAAMzQ,GAChB4Q,EAAa7S,KAAM,CAACtE,MAAOoX,EAAGvY,KAAM,IAAKmY,EAAME,MAAM,EAAG3Q,EAAE,GAAG8Q,KAAK,OAEtE,OAAOF,I,4DAIQnL,GAAY,IAAD,OACT5Q,KAAKjB,MAAMmd,OAAOzU,GAClBnH,GAAYjB,SAASkS,MAEtC1C,GAAoB/O,KAAKkK,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,UAAU,SAAUkc,GAC/Eld,QAAQC,IAAI,iBAAkBid,GAC9Bnc,KAAKsG,SAAS,CAACkU,qBAAoB,EAAOC,mBAAkB,EAAOC,qBAAoB,EAAOC,kBAAiB,IAG/GQ,GAA0B7Z,OAAOW,KAAKjC,KAAKjB,MAAM0E,OACnDtD,KAAKH,OACP6O,GAAoBvN,OAAOW,KAAK,CAAC,KAAQjC,KAAKjB,MAAM0E,KAAM,KAAQmN,M,sFAI/C9F,G,0FACbyD,GAA0Be,QAAQxE,G,OAExCqQ,GAA0B7Z,OAAOW,KAAKjC,KAAKjB,MAAM0E,M,uNAG5BqH,G,2FACfyD,GAA0Be,QAAQxE,G,OAExCqQ,GAA0B7Z,OAAOW,KAAKjC,KAAKjB,MAAM0E,M,6LAIlC2Y,EAAOtR,GACtB,IAAIuR,EAAKC,SAASC,cAAc,KAChCD,SAASzQ,KAAK2Q,YAAYH,GAC1BA,EAAK9X,KAAKuG,EACVuR,EAAK5E,SAAS2E,EACdC,EAAKI,QACLJ,EAAKK,W,kEAIazN,GAAK,IAKfnO,EAAWmO,EAAK3C,KAAhBxL,OAIR,GAAe,SAAXA,GAEA,GADAoM,IAAQyP,QAAR,UAAmB1N,EAAK3C,KAAKnJ,KAA7B,iCACG8L,EAAK2N,SAAS,CACb,IAAIC,GAAU,EACd5N,EAAK2N,SAAS3T,SAAQ,SAAC6T,GACF,SAAbA,EAAEhc,SACF+b,GAAU,MAIdA,GAGA7e,OAAOC,SAAS8e,cAIN,UAAXjc,GACPoM,IAAQ9N,MAAR,UAAiB6P,EAAK3C,KAAKnJ,KAA3B,2B,4EAImBwJ,GACvBX,GAAkB1K,OAAOW,KAAK,CAACwB,KAAKkJ,EAAIqQ,OAAQ1Q,KAAKK,EAAIL,KAAM2N,QAAQtN,EAAIsN,QAASN,WAAWhN,EAAIgN,WAAYD,UAAU/M,EAAI+M,c,sEAWzGuD,EAAY3Q,EAAMsQ,GACtC,GAAoB,SAAhBtQ,EAAKxL,OACL,OAAOmc,I,wDAKE5W,GACbpH,QAAQC,IAAImH,K,wDAMCqM,GACb0I,GAAwB9Z,OAAOW,KAAKyQ,K,sCAK9B,IAAD,OAEDtQ,EAAUpC,KAAK2B,MAAMS,QACnB8a,EAAkBld,KAAKjB,MAAM0b,mBAAqBza,KAAKjB,MAAM8b,YAAY5P,OAAO,GAAKjL,KAAKjB,MAAM6b,cAAc3P,OAAO,EACpHkS,EAAWC,IAAXD,QAGDE,GAFWrd,KAAK2B,MAAM1D,SAEP,CACjBkF,KAAM,OACNma,UAAU,EACVC,SAAU,UACVhS,iBAAiB,EACjBiS,WAAU,EACVC,eAAgB,CAACC,gBAAe,EAAMC,iBAAgB,EAAOC,kBAAiB,GAC9EZ,OAAQhd,KAAK2B,MAAM1D,SAASqd,SAC5B9J,SAAUxR,KAAK6d,sBAAsB1d,KAAKH,MAC1C8d,cAAe9d,KAAK+d,2BAA2B5d,KAAKH,MACpDge,WAAYhe,KAAKie,wBAAwB9d,KAAKH,QAGlDkN,IAAQgR,OAAO,CACXC,IAAK,GACLC,SAAU,GACVC,SAAU,IAKd,IAAMC,EAAYte,KAAKue,oBAAoBve,KAAK2B,MAAM1D,SAASqd,UAG/D,OACI,kBAAC,GAAD,CAAU1Z,KAAM5B,KAAK2B,MAAMC,KAAMF,MAAM,GACnC,yBAAKc,UAAWJ,EAAQoc,UACpB,kBAAC9X,EAAA,EAAD,CAAQM,MAAM,UAAUJ,SAAS,SAAS6X,UAAW,EAC7Cjc,UAAWJ,EAAQsc,gBAEvB,kBAAC7X,EAAA,EAAD,CAASrE,UAAWJ,EAAQuc,kBACxB,kBAAC3b,EAAA,EAAD,CAAYkE,QAAQ,KAAK1E,UAAWJ,EAAQiP,OACxC,kBAAC,IAAD,KACI,kBAAC,IAAWuN,KAAZ,CAAiBra,KAAK,oBAClB,kBAACsa,EAAA,EAAD,OAEJ,kBAAC,IAAWD,KAAZ,CAAiBra,KAAM,MACnB,kBAAC0S,EAAA,EAAD,MACA,wCAEHqH,EAAUpa,KAAI,SAAC8X,GACZ,OAAQ,kBAAC,IAAW4C,KAAZ,CAAiBta,IAAK0X,EAAEvY,MAAM,kBAAC,IAAD,CAAM0T,GAAI6E,EAAEvY,MAAQuY,EAAEpX,aAIxE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ1B,KAAK,UACLgV,UAAWlY,KAAKjB,MAAMwb,aACtBhX,QAAS,mBAAK,EAAK+C,SAAS,CAAC,qBAAsB,KACnDwY,KAAM,kBAACC,EAAA,EAAD,OAHd,iBASZ,yBAAKvc,UAAWJ,EAAQ4c,iBAAkBlc,MAAO,CAACc,WAAWsZ,EAAgB,MAAM,QAE/E,kBAAC,GAAD,CACI1E,QAASxY,KAAKjB,MAAMsJ,UACpB4M,QAASjV,KAAKjB,MAAMkW,QACpBC,MAAOlV,KAAKjB,MAAMmW,MAClBS,WAAY3V,KAAKif,iBACjB5I,aAAcrW,KAAKyV,iBACnBiC,WAAY1X,KAAKkf,mBACjBhJ,aAAclW,KAAKqV,iBACnBe,eAAgBpW,KAAKuV,qBAGzB,yBAAKzS,MAAO,CAACgD,UAAU,SACnB,kBAACqX,EAAD,iBAAaE,EAAb,CAA2B8B,IAAKnf,KAAKib,YACjC,uBAAGzY,UAAU,wBACT,kBAACuU,EAAA,EAAD,OAEJ,uBAAGvU,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,6GASZ,kBAAC,GAAD,CACIuO,OAAQ/Q,KAAKof,mBAAmBjf,KAAKH,MACrCmZ,QAAS,mBAAK,EAAK7S,SAAS,CAAC,qBAAsB,KACnD5E,KAAM1B,KAAKjB,MAAM2b,oBACjBjX,KAAMzD,KAAKjB,MAAM0E,QAIzB,2BAAOP,KAAK,OACLic,IAAKnf,KAAK+a,kBACVjY,MAAO,CAAC,QAAW,QACnBwa,UAAQ,EACR9L,SAAUxR,KAAKqf,wB,WA5UdjG,IAAMC,eAqVftU,eAAW4F,YAAW3F,aAvZlB,SAAbC,WAAcC,GAAD,MAAY,CAC3B+H,SAAU,CACN0E,OAAO,KAAD,OAAyB,EAAlBzM,EAAMoa,UAAb,MACNna,MAAO,QACPE,OAAQ,QACRuB,SAAU,WACVuX,IAAK,MACLoB,KAAM,MACNC,UAAW,yBAGfb,iBAAiB,GAIjBH,SAAS,CACLnZ,OAAO,OACPG,QAAQ,OACRE,iBAAiB,YACjBC,oBAAoB,0BAGxB+Y,eAAe,CACX7a,QAAQ,IACRD,WAAW,MACX6b,OAAO,IACPC,aAAa,WAGjBV,iBAAiB,CACbnb,QAAQ,IACRD,WAAW,IACX+N,OAAQ,QAGZgO,gBAAgB,CACZ9b,QAAQ,IACRD,WAAW,IACX+N,OAAQ,QAGZiO,gBAAgB,CACZ/b,QAAQ,IACRD,WAAW,IACX+N,OAAQ,QAKZkO,SAAS,CACLxa,OAAQ,OACRya,SAAU,SACVta,QAAQ,OACRC,QAAQ,OACRC,iBAAiB,cACjBC,oBAAoB,WAExBoB,WAAY,CACRtC,YAAaS,EAAMoa,QAAQ,IAE/BjO,MAAO,CACH0O,SAAU,MA0VmB/a,CAAuBqV,MCpW7C,O,WAzDX,2BAAe,uCALfhS,UAAU,IAAI/I,oBAAgB,GAKhB,KAJdgC,OAAS,IAAIH,WAIC,KAHdrB,KAAO,IAAIqB,WAKPnB,KAAKsB,OAAOrB,UAAUD,KAAKE,QAAQC,KAAKH,O,0EAQpCI,GACP,IAAD,OAEUoI,EADUlI,GAAYjB,SAASkB,WACf,uBAEhBkI,EAAU,IAAIC,QACpBD,EAAQE,OAAO,SAAU,YACzBF,EAAQE,OAAO,gBAAiB,YAChCF,EAAQE,OAAO,SAAU,oBAEzB3I,KAAKqI,UAAUpG,MAAK,GAEpBzB,MAAOgI,EAAM,CACT/H,OAAQ,MACRiT,KAAM,OACNjL,QAASA,EACTI,YAAa,YAGZpK,MAAK,SAAAiC,GAKF,OAJGA,EAASC,aACR1B,QAAQC,IAAI,gBAAiBwB,EAASE,KACtC5C,OAAOC,SAAWyC,EAASE,KAExBF,KAGVjC,MAAK,SAACiC,GAAD,OAAcA,EAASoI,UAC5BrK,MAAK,SAAAqK,GACF,EAAKhJ,KAAKmC,KAAK6G,MAElB3J,OAAM,SAAA0B,GAEH,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC1B9C,OAAOC,SAAW,QACf,CACHgB,QAAQG,MAAMyB,EAAIG,YAClB,IAAID,EAAS,CAAC,KAAQF,EAAIC,OAAQ,OAAUD,EAAIG,WAAY,QAAWH,EAAII,cAAcJ,EAAIqM,SAC7F,EAAKpN,KAAKV,MAAM2B,W,oBCxC9Bif,G,sDACF,aAAYre,EAAOqE,GAAU,IAAD,gCACxB,cAAMrE,EAAOqE,IAGRjH,MAAQ,CACT,QAAWiH,EACX,OAAU,QACV,iBAAmB,EACnB,WAAa,EACb,WAAa,GAIbhI,OAAOC,SAASsG,KAAK0b,QAAQ,SAbT,E,oFAsBR,IAAD,OACfjgB,KAAKsG,SAAS,CAAC,WAAa,IAE5B4Z,GAAepgB,KAAKkK,WAAU,kBAAM,EAAKjL,MAAM4K,aAAW1J,WAAU,SAACkgB,GAE7DA,GAEA,EAAK7Z,SAAS,CAAC,iBAAkB,EAAM,WAAY,EAAO,KAAQ6Z,OAI1ED,GAAe5e,OAAOW,KAAK,Q,kEAK3BjC,KAAKsG,SAAS,CAAC,WAAY,M,sCAIrB,IAAD,OACClE,EAAUpC,KAAK2B,MAAMS,QACrBge,EAAS,QAGf,OAAIpgB,KAAKjB,MAAMsJ,UAEP,6BACI,kBAACgY,EAAA,EAAD,CAAkB7d,UAAWJ,EAAQ6K,SAAUU,KAAM,MAM7D,kBAAC,IAAD,CAAcyS,OAAQA,EAAQ9b,IAAK8b,EAAQE,SAAUtgB,KAAK2B,MAAM4e,aAAaH,IACzE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3c,KAAK,IAAIR,UAAW,4BAAM,kBAAC,GAAD,CAAWrB,KAAM,EAAK7C,MAAM6C,iB,KA5DnEkD,aAsEHE,gBAnFI,SAAbC,WAAcC,GAAD,MAAY,CAC3B+H,SAAU,CACN0E,OAAO,KAAD,OAAyB,EAAlBzM,EAAMoa,UAAb,MACNna,MAAO,QACPE,OAAQ,QACRuB,SAAU,WACVuX,IAAK,MACLoB,KAAM,MACNC,UAAW,4BA2EJxa,CAAuBgb,IC5EhCO,GAAe,CACjB,QAAQxU,EAAQ,MAQd7G,GAAQsb,YAAe,CACzB9L,QAAS,CACLxR,KAAM,QACNyB,QAAS8b,IACTC,UAAU,eACHC,KAEPvhB,MAAOwhB,QAMG,SAAZC,YAEFC,IAASjK,OACL,kBAAC,IAAD,CAAkB3R,MAAOA,IACrB,kBAAC,GAAD,CAAKqb,aAAcA,MAErBjE,SAASyE,eAAe,SAIlCF,GzBjCe,SAASriB,WACtB,GAA6C,kBAAmBF,UAAW,CAGzE,GADkB,IAAI0iB,IAAIC,SAAwBjjB,OAAOC,UAC3CijB,SAAWljB,OAAOC,SAASijB,OAIvC,OAGFljB,OAAOmjB,iBAAiB,QAAQ,WAC9B,IAAM9iB,EAAK,UAAM4iB,SAAN,sBAENnjB,EAwCX,SAASsjB,wBAAwB/iB,GAE/BmC,MAAMnC,GACDI,MAAK,SAAAiC,GAGoB,MAApBA,EAASI,SACuD,IAAhEJ,EAAS+H,QAAQ6C,IAAI,gBAAgB2U,QAAQ,cAG/C3hB,UAAUC,cAAc8iB,MAAM5iB,MAAK,SAAAC,GACjCA,EAAa4iB,aAAa7iB,MAAK,WAC7BT,OAAOC,SAAS8e,eAKpB3e,gBAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACJ,oEAzDJkiB,CAAwB/iB,GAHxBD,gBAAgBC,OyBkBxBkjB,K","file":"static/js/main.57315caf.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {BehaviorSubject} from '@reactivex/rxjs';\n\nclass AppSettings {\n\n    baseHost = new BehaviorSubject(\"http://localhost:9000\");\n    basicUser = new BehaviorSubject(window.localStorage.getItem(\"u\"));\n    basicPwd = new BehaviorSubject(window.localStorage.getItem(\"p\"));\n\n}\n\nexport default new AppSettings();\n","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../../../library/actions/AppSettings';\n\nclass LogoutService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.getUser.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    getUser(username_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        fetch( baseUrl +'/logout', {\n            method: 'GET'\n        })\n        //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\n\nexport default LogoutService;\n","import {Subject} from '@reactivex/rxjs';\nimport LogoutService from \"./processors/LogoutService\";\n\nclass AppActions {\n\n    constructor() {\n        this.logoutService = new LogoutService(this.logout.source, this.logout.sink);\n    }\n\n\n    //Use this to navigation around the app Or outside\n    navigateTo = new Subject();\n\n    logout = {'source':new Subject(), 'sink':new Subject()};\n\n}\n\nexport default new AppActions();\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\n//import Button from '@material-ui/core/Button';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n//import PhotoIcon from '@material-ui/icons/Photo';\n\nimport AppActions from '../actions/AppActions';\n\n\nconst styleSheet = (theme) => ({\n\n    sidebarOpen:{\n        width: '240px',\n        minHeight: '100vh',\n        height: '100%',\n        background:'#fff'\n    },\n\n    sidebarClosed:{\n        width: '72px',\n        minHeight: '100vh',\n        height: '100%',\n        background:'#fff'\n    },\n\n    sidebarUserInfo:{\n        width:'100%',\n        padding:'8px',\n        display:'grid',\n        gridGap: '8px',\n        gridTemplateRows: \"auto\",\n        gridTemplateColumns: \"60px auto\"\n    },\n\n    sidebarUserInfoClosed:{\n        display:'none'\n    },\n\n    sidebarProfileIcon:{\n        gridColumn: \"1\",\n        gridRow: \"1\",\n    },\n\n    sidebarProfileName:{\n        gridColumn: \"2\",\n        gridRow: \"1\",\n        alignSelf:'center'\n    },\n\n    sidebarButtons:{\n        gridColumn: \"1/3\",\n        gridRow: \"2\",\n        justifySelf:'center'\n    },\n\n    appListsOpen:{\n        display:'grid',\n        gridGap: '0px',\n        gridTemplateRows: \"24px auto\",\n        gridTemplateColumns: \"auto\",\n        marginTop:'16px'\n    },\n\n    appListsClosed:{\n        height:'90%',\n        display:'grid',\n        gridGap: '0px',\n        gridTemplateRows: \"0px auto 72px\",\n        gridTemplateColumns: \"auto\"\n    },\n\n    openLabel:{\n        display:'inline'\n    },\n\n    closedLabel:{\n        display:'none'\n    },\n\n\n\n});\n\nclass Sidebar extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.open !== this.props.open\n            || nextProps.user !== this.props.user\n            || nextProps.apps !== this.props.apps\n            || nextProps.secondaryApps !== this.props.secondaryApps);\n    }\n\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        window.location = \"/index.html\";\n    }\n\n\n    findApp(slug, apps){\n        if( apps ) {\n            for (let app of apps) {\n                if (app.slug === slug) {\n                    return app;\n                }\n            }\n        }\n        return null;\n    }\n\n\n\n    render() {\n        var classes = this.props.classes;\n        //find specific app in the installed list of apps, if it's not installed don't show link\n        var profileApp = this.findApp('usermanager', this.props.secondaryApps);\n\n        return (\n            <Paper className={this.props.open?classes.sidebarOpen:classes.sidebarClosed} >\n\n                <Paper className={this.props.open?classes.sidebarUserInfo:classes.sidebarUserInfoClosed}>\n                    <div className={classes.sidebarProfileIcon}>\n                        <AccountCircle\n                            style={{'width': 60, 'height': 60}}\n                        />\n                    </div>\n                    <div className={classes.sidebarProfileName}>\n                        <Typography component=\"div\" type={\"title\"}>{this.props.user.name} {this.props.user.lastName}</Typography>\n                    </div>\n                    <div className={classes.sidebarButtons}>\n\n                        <Button onClick={this.handleLogout}>Logout</Button>\n\n                        {profileApp &&\n                        <Button onClick={()=>AppActions.navigateTo.next(profileApp.path)}>Profile</Button>\n                        }\n                    </div>\n                </Paper>\n\n\n                <div className={this.props.open?classes.appListsOpen:classes.appListsClosed}>\n\n                    <div style={{gridColumn: \"1\",gridRow: \"1\"}}>\n                        <Typography type=\"title\"\n                                    className={this.props.open?classes.openLabel:classes.closedLabel}\n                                    style={{'paddingLeft':'16px', paddingTop:'16px', gridColumn: \"1\", gridRow: \"1\"}}>Apps</Typography>\n                    </div>\n\n                    <List style={{gridColumn: \"1\",gridRow: \"2\"}}>\n\n                        {this.props.apps && this.props.apps.map((item)=>{\n                            return (\n                                <ListItem button key={item.path} onClick={()=>window.location.href = item.path}>\n                                    <Avatar style={{marginRight:'8px'}}>\n                                        <FolderIcon />\n                                    </Avatar>\n                                    <ListItemText primary={item.label} primaryTypographyProps={{type:\"body2\"}}\n                                                  className={this.props.open?classes.openLabel:classes.closedLabel}/>\n                                </ListItem>\n\n                            )\n                        })}\n                    </List>\n\n\n                    <List style={{gridColumn: \"1\",gridRow: \"3\"}} className={!this.props.open?classes.openLabel:classes.closedLabel}>\n                        <ListItem button onClick={()=>window.location.href = '://app-usermanager/index.html'}>\n                            <Avatar>\n                                <AccountCircle\n                                    style={{'width': 48, 'height': 48}}\n                                />\n                            </Avatar>\n                        </ListItem>\n                    </List>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(Sidebar));","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport AppBar from '@material-ui/core/AppBar';\n//import Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport AppActions from '../actions/AppActions';\n\n\nconst styleSheet = (theme) => ({\n\n    root: {\n        width: '100%',\n        height: '64px'\n    },\n    headerContainer: {\n        display: \"grid\",\n        gridTemplateRows: \"auto\",\n        gridTemplateColumns: \"48px auto 48px\"\n    },\n    hamburgerMenu: {\n        display: 'block',\n        gridRow: \"1\",\n        gridColumn: \"1\",\n    },\n    mainSection: {\n        gridRow: \"1\",\n        gridColumn: \"2\"\n    },\n    rightSection: {\n        gridRow: \"2\",\n        gridColumn: \"3\",\n        textAlign: \"right\"\n    },\n    flex: {\n        flex: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n        color: '#ffffff'\n    },\n    moreButton:{\n        color: '#ffffff'\n    }\n});\n\nclass AppHeader extends Component {\n\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            openMoreMenu:false\n        };\n\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleOpenMoreMenu = this.handleOpenMoreMenu.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.onToggle !== this.props.onToggle\n                || nextProps.apps !== this.props.apps\n                || nextState.openMoreMenu !== this.state.openMoreMenu);\n    }\n\n    handleOpenMoreMenu(event){\n        this.setState({ openMoreMenu: true, openMoreMenuAnchorEl: event.currentTarget });\n    }\n\n    handleToggle(){\n        if( this.props.onToggle){\n            this.props.onToggle();\n        }\n    }\n\n    handleNavClick(path){\n        if( this.props.onNavClick){\n            this.props.onNavClick(path);\n        }\n    }\n\n    handleMenuClose(){\n        this.setState({\"openMoreMenu\": false});\n    }\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        window.location = \"/\";\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        return (\n            <AppBar className={classes.root} position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        onClick={this.handleToggle}\n                        className={classes.menuButton}\n                        color=\"secondary\" aria-label=\"Menu\">\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Typography variant=\"h5\" color=\"inherit\" className={classes.flex} onClick={()=>this.handleNavClick('://home/index.html')}>\n                        Family <i>D.A.M</i>\n                    </Typography>\n\n                    <IconButton\n                        aria-label=\"More\"\n                        aria-owns={this.state.open ? 'long-menu' : null}\n                        aria-haspopup=\"true\"\n                        onClick={this.handleOpenMoreMenu}\n                        className={classes.moreButton}>\n                        <MoreVertIcon/>\n                    </IconButton>\n\n                    <Menu\n                        id=\"long-menu\"\n                        keepMounted\n                        anchorEl={this.state.openMoreMenuAnchorEl}\n                        open={this.state.openMoreMenu}>\n                        <MenuItem onClick={()=>{this.handleLogout();this.handleMenuClose()}}>Logout</MenuItem>\n                        <Divider/>\n                        {this.props.apps && this.props.apps.map((item)=>{\n                            return (\n                                <MenuItem key={item.path}\n                                          color=\"secondary\"\n                                          onClick={()=>{window.location=item.path;this.handleMenuClose()}}>{item.label}</MenuItem>\n                            )\n                        })}\n\n                    </Menu>\n                </Toolbar>\n\n            </AppBar>\n        );\n\n\n    }\n}\n\nexport default injectIntl(withStyles(styleSheet)(AppHeader));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from \"../actions/AppSettings\";\nimport {BehaviorSubject, Subject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass LoadClientAppsService {\n\n    isLoading=new BehaviorSubject(false);\n    source=new Subject();\n    sink=new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.loadApps.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    async loadApps(data_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/api/v1/apps/'; //+'/core/api/apps';\n\n        const headers = new Headers();\n        headers.append('Accept', 'application/hal+json');\n\n        this.isLoading.next(true);\n\n        //Save or Create user\n        const apps = await fetch( _url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers,\n            credentials: 'include'\n        });\n\n        const response = await apps.json();\n        if( apps.status == 200 && response._embedded && response._embedded.apps ){\n            const primaryApps = [];\n            const secondaryApps = [];\n            response._embedded.apps.forEach( (app)=>{\n                if( app.primary ){\n                    primaryApps.push(app);\n                    return;\n                }\n                secondaryApps.push(app);\n            });\n\n            var _primaryApps = primaryApps.sort((a,b)=>a.order - b.order)\n            var _secondaryApps = secondaryApps.sort((a,b)=>a.order - b.order)\n            this.sink.next({\"primaryApps\":_primaryApps, \"secondaryApps\":_secondaryApps});\n        }\n\n    }\n\n}\n\n\nexport default new LoadClientAppsService();\n","import React, {Component} from 'react';\nimport {injectIntl} from 'react-intl';\nimport {withRouter} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {takeWhile} from 'rxjs/operators';\n\nimport Sidebar from '../sidebar/Sidebar';\nimport AppHeader from '../appheader/AppHeader';\nimport AppActions from '../actions/AppActions';\nimport LoadClientAppsService from \"../services/LoadClientAppsService\";\n\n\nconst styleSheet = (theme) => ({\n\n    dashboardShellContainerOpen:{\n        display: \"grid\",\n        gridTemplateRows: \"64px auto\",\n        gridTemplateColumns: \"240px auto\"\n\n    },\n    dashboardShellContainerClosed:{\n        display: \"grid\",\n        gridTemplateRows: \"64px auto\",\n        gridTemplateColumns: \"72px auto\"\n    },\n    header: {\n        gridColumn: \"1/3\",\n        gridRow: \"1\",\n        position: \"inherit\",\n        height: '64px'\n    },\n\n    main:{\n        fontSize: '.5rem',\n        background:'#eee'\n    },\n\n});\n\nclass AppShell extends Component {\n\n\n    constructor(props, context) {\n        super(props);\n\n        var isOpenCachedValue = window.localStorage.getItem(\"AppShell.isOpen\");\n\n        if( !isOpenCachedValue ){\n            if( props.open !== undefined ) {\n                isOpenCachedValue = props.open;\n            }else{\n                isOpenCachedValue = true;\n            }\n        }\n\n        this.state = {\n            isMounted:true,\n            isOpen:Boolean(isOpenCachedValue)\n        };\n\n        this.handleOpenCloseToggle = this.handleOpenCloseToggle.bind(this);\n        this.handleOpenMoreMenu = this.handleOpenMoreMenu.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return (nextProps.open !== this.props.open\n            || nextProps.user !== this.props.user\n            || nextProps.children !== this.props.children\n            || nextState.isOpen !== this.state.isOpen\n            || nextState.primaryApps !== this.state.primaryApps\n            || nextState.secondaryApps !== this.state.secondaryApps );\n    }\n\n\n    componentDidMount(){\n        this.setState({\"isMounted\":true});\n\n        AppActions.navigateTo.pipe(takeWhile(() => this.state.isMounted)).subscribe(function(path){\n            //debugger;\n            if ( path !== \"://\" && path.substring(0, 3) === \"://\") {\n                window.location.href = path.substring(2);\n            }else if(this.props.history){\n                this.props.history.push(path);\n            }\n        }.bind(this));\n\n        LoadClientAppsService.sink.pipe(takeWhile(() => this.state.isMounted)).subscribe( (data)=> {\n            if( data ) {\n                this.setState({\n                    \"primaryApps\": data.primaryApps || [],\n                    \"secondaryApps\": data.secondaryApps || []\n                });\n            }\n        });\n        LoadClientAppsService.source.next(true);\n    }\n\n    componentWillUnmount() {\n        this.setState({\"isMounted\":false});\n    }\n\n    handleOpenMoreMenu(event){\n        this.setState({ openMoreMenu: true, openMoreMenuAnchorEl: event.currentTarget });\n    }\n\n    handleOpenCloseToggle(){\n        var val = !this.state.isOpen;\n        this.setState({'isOpen':val});\n        window.localStorage.setItem(\"AppShell.isOpen\", val);\n    }\n\n    handleLogout(){\n        window.localStorage.clear();\n        //UserActions.getUser.sink.next(next);\n        AppActions.logout.source.next(true);\n        AppActions.navigateTo.next(\"://\");\n    }\n\n\n    render() {\n        var classes = this.props.classes;\n\n        if( !this.props.user ){\n            return (<div></div>);\n        }\n\n        return (\n            <div className={this.state.isOpen?classes.dashboardShellContainerOpen:classes.dashboardShellContainerClosed}>\n                <header className={classes.header}>\n                    <AppHeader\n                        apps={this.state.secondaryApps}\n                        onToggle={this.handleOpenCloseToggle}\n                        onNavClick={(path)=>window.location=path}/>\n                </header>\n\n\n                <Sidebar\n                    user={this.props.user}\n                    apps={this.state.primaryApps}\n                    secondaryApps={this.state.secondaryApps}\n                    open={this.state.isOpen}\n                    onNavClick={(path)=>window.location=path}/>\n\n\n                <div className={classes.main}>\n                    {this.props.children}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(withRouter(withStyles(styleSheet)(AppShell)));","import request from 'superagent';\nimport AppSettings from '../../library/actions/AppSettings';\n\nclass GetFileDataService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.sink = sink_;\n\n        source_.subscribe(function (path_) {\n            this.getFiles(path_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    getFiles(paths_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n\n        if( paths_ !== undefined && paths_.length > 0 )\n        {\n            var pathPromises = [];\n\n            for (var i = 0; i < paths_.length; i++) {\n                var path = paths_[i];\n\n                var promise = request.get( baseUrl +path )\n                    .withCredentials()\n                    .set('Accept', 'application/json');\n\n                pathPromises.push(promise);\n            }\n\n            Promise.all(pathPromises).then((results)=>{\n\n               var nodes = [];\n                for (var i = 0; i < results.length; i++) {\n                    var response = results[i];\n                    nodes.push(response.body);\n                }\n               this.sink.next(nodes);\n            }).catch(reason => {\n                debugger;\n                console.log(reason)\n            });\n        }\n    }\n\n};\n\n\nexport default GetFileDataService;\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport {Observable} from '@reactivex/rxjs';\n\nimport request from 'superagent';\nimport AppSettings from '../../library/actions/AppSettings';\nimport FileActions from './../FileActions';\nrequire('superagent-charset')(request);\n\nclass UploadFileService {\n\n    sink = undefined;\n    /**\n     * Setup action Listeners\n     */\n    constructor(source_, sink_) {\n\n        this.sink = sink_;\n\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        source_\n            .mergeMap(file_ => {\n                if( Array.isArray(file_) ){\n                    for (var i = 0; i < file_.length; i++) {\n                        var file = file_[i];\n                        return this.uploadNextFile(baseUrl, file);\n                    }\n                }else {\n                    return this.uploadNextFile(baseUrl, file_);\n                }\n            }, 3)\n            .subscribe(console.debug);\n    }\n\n\n    uploadNextFile(baseUrl, file) {\n\n        //console.log(\"file: \" + file);\n\n        if (file)//!file.path)\n        {\n            //console.log(\"else clause, upload\");\n            //debugger;\n            return Observable\n                .of(file)\n                .flatMap(req => new Promise((resolve, reject) => {\n                    return this.uploadFile(baseUrl, file)\n                        .then(result=>resolve(result))\n                        .catch(err => {\n                            //debugger;\n                            let retry = 1;\n                            if( file.retry ){\n                                retry=file.retry+1;\n                            }\n                            file.progress = 0;\n                            file.retry = retry;\n                            file.error = \"Retrying request (\" +retry +\"/3)\";\n                            return reject(err);\n                        });\n                })).retry(2).catch(err => {\n                    //debugger;\n                    //var _error = {'code': err.status, 'message': err.message};\n                    file.error = err.status +\": \" +err.message;\n                    file.progress = 0;\n                    return Observable.of(err);\n                });\n\n        }\n\n        return null;\n        /**\n        else\n        {\n            //console.log(\"check access\");\n            this.checkAccess(file).then(\n                function (v0) {\n                    //debugger;\n                    console.log(v0);\n                    if (v0.visible) {\n                        //console.log(\"visible, copy\");\n                        this.copyLocalFile(file).then(\n                            function (v1) {\n                                this.uploadNextFile();\n                            }.bind(this),\n                            function (e1) {\n                                this.uploadNextFile();\n                            }.bind(this));\n                    } else {\n                        //console.log(\"not visible, upload\");\n                        this.uploadFile(file).then(\n                            function (v2) {\n                                this.uploadNextFile();\n                            }.bind(this),\n                            function (e2) {\n                                this.uploadNextFile();\n                            }.bind(this));\n                    }\n                }.bind(this),\n                function (e0) {\n                    //console.log(\"error\");\n                    this.uploadNextFile();\n                }.bind(this));\n        }\n         **/\n    }\n\n\n\n    /**\n     * The server can't access the file locally, or we are in a browser.\n     * So this method will do a regular AJAX file upload\n     * @param dir\n     * @param path\n     */\n    uploadFile(baseUrl, file_) {\n\n        var filePathName = file_.uploadPath;\n        if( file_.webkitRelativePath ){\n            filePathName += \"/\" +file_.webkitRelativePath.substr(0, file_.webkitRelativePath.lastIndexOf(\"/\"));\n        }else if( file_.relativePath ){\n            filePathName += file_.relativePath.substr(0, file_.relativePath.lastIndexOf(\"/\"));\n        }\n\n\n        var formData = new FormData();\n        formData.append(\"name\", file_.name);\n        formData.append(\"path\", filePathName);\n        formData.append(\"destination\", filePathName);\n        formData.append(\"file\", file_);\n        formData.append(\"type\", file_.type);\n        formData.append(\"size\", file_.size);\n        formData.append(\"jcr:primaryType\", \"nt:file\");\n        formData.append(\"dam:date.created\", file_.lastModified);\n        formData.append(\"dam:date.modified\", file_.lastModified);\n\n\n\n        //console.log(\"Upload to:\" +baseUrl +filePathName );\n        //console.dir(file_);\n\n        return request\n            .post(baseUrl +filePathName)\n            .withCredentials()\n            .charset('UTF-8')\n            .send(formData)\n            .parse(({ text }) => {\n                if( text.length === 0 ) return {};\n                return JSON.parse(text)\n            })\n            .on('progress', event => {\n                //console.log(event);\n                file_.progress = event.percent;\n                FileActions.uploadProgress.next(file_);\n                //the event is:\n                //{direction: \"upload\" or \"download\"\n                //  percent: 0 to 100 // may be missing if file size is unknown\n                //  total: // total file size, may be missing\n                //  loaded: // bytes downloaded or uploaded so far}\n            });\n\n\n\n        /**\n         .set(\"Content-Type\", \"application/octet-stream\")\n         .end(function(err, res){\n                if( !err ){\n                    UploadActions.uploadCompleted.onNext(data_);\n                }else {\n                    if (err.timeout) {\n                        // timed out!\n                    }\n\n                    // handle the error\n                    UploadActions.uploadError.onNext(file_);\n                    //send the error to the store (through the sink observer\n                    if (xhr_.status == 401)\n                    {\n                        AuthActions.loginRedirect.onNext(true);\n                    }\n                    if (xhr_.status == 403)\n                    {\n                        UserActions.alert.onNext(\"You do not have permission to upload to this folder\");\n                    } else\n                    {\n                        var _error = {'code': xhr_.status, 'status': xhr_.statusText, 'message': xhr_.responseText};\n                        _this.sink.onError(_error);\n                    }\n                }\n            });\n         **/\n\n\n    }\n\n\n\n\n    /**\n     * Check to see if the file is accessible to the embedded server, so we can do a quick copy. Instead of upload.\n     * @param dir - passthrough for the next step in the sequence\n     * @param path\n     * @returns {HttpPromise}\n\n    checkAccess(file_){\n\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        return request\n            .get(baseUrl +'/api/familydam/v1/files/upload/info')\n            .withCredentials()\n            .send({path: encodeURI(file_.path).replace(\"&\", \"%26\")})\n            .then(data => {\n                //debugger;\n                return JSON.parse(data);\n            }, error => {\n                if (error.status === 401) {\n                    AppActions.navigateTo.next('://login');\n                } else {\n                    var _error = {'code': error.status, 'message': error.message};\n                    //file_.error = _error;\n                    FileActions.uploadError.next(_error);\n                }\n            });\n    }*/\n\n\n    /**\n     * Tell the embedded server to copy a local file, by path.\n     * @param dir\n     * @param path\n\n    copyLocalFile(baseUrl, file_) {\n\n        if (!file_.recursive) {\n            file_.recursive = true;\n        }\n\n        return request\n            .post(baseUrl +'/api/familydam/v1/files/upload/copy')\n            .withCredentials()\n            .field(\"dir\", file_.uploadPath)\n            .field(\"path\", file_.path)\n            .field(\"recursive\", file_.recursive)\n            .then(data_ => {\n                //debugger;\n                file_.status = \"COMPLETE\";\n                file_.percentComplete = \"100\";\n                FileActions.uploadCompleted.next(data_);\n                return JSON.parse(data_);\n            });\n\n    }*/\n\n\n\n}\n\n\nexport default UploadFileService;\n","import AppActions from '../../library/actions/AppActions';\nimport AppSettings from '../../library/actions/AppSettings';\nimport request from 'superagent';\n\nclass DeleteFileOrFolderService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.sink = sink_;\n\n        source_.subscribe(function (path_) {\n            this.deleteFileOrFolder(path_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    deleteFileOrFolder(path_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        if( path_ !== undefined && path_.length > 0 )\n        {\n            var _url =  baseUrl +path_ ;\n\n            request.delete(_url)\n                .withCredentials()\n                .set('Accept', 'application/json')\n                .end((err, res)=>{\n\n                    if( !err ){\n\n                        this.sink.next(true);\n\n                    }else{\n                        //send the error to the store (through the sink observer\n                        if (err.status === 401) {\n                            AppActions.navigateTo.next(\"/\");\n                        } else if (err.status === 403) {\n                            AppActions.alert.next(\"You do not have permission to access these files\");\n                        } else {\n                            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                            this.sink.error(_error);\n                        }\n                    }\n\n                });\n\n        }\n    }\n\n};\n\n\nexport default DeleteFileOrFolderService;\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppActions from \"../../library/actions/AppActions\";\nimport AppSettings from '../../library/actions/AppSettings';\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass CreateFolderService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.sink = sink_;\n        source_.subscribe(this.createDirectory.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    createDirectory(data_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        var _name = data_.name ;\n        var _url = baseUrl +data_.path +\"/\" +_name;\n\n        var formData = new FormData();\n        formData.append(\"name\", data_.username);\n        formData.append(\"jcr:primaryType\", \"nt:folder\");\n\n        fetch(_url, {\n            method: \"POST\",\n            body: formData\n        })\n            .then(response => {\n                console.info(\"CreateFolder success handler\");\n                if(response.redirected) {\n                    console.debug(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                //continue on\n                this.sink.next(true);\n            })\n            .then((response) => response.json())\n            .then(json => {\n                if (!json.firstName) {\n                    json.firstName = json.username;\n                }\n                this.sink.next(json);\n            })\n            .catch(err => {\n                console.warn(err);\n                //send the error to the store (through the sink observer\n                if (err.status === 401) {\n                    AppActions.navigateTo.next(\"/\");\n                }\n                else if (err.status === 403) {\n                    AppActions.alert.next(\"You do not have permission to add a new user\");\n                } else {\n                    console.error(err);\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n\n\n        /**\n        return $.ajax({\n                    method: \"post\",\n                    url: _dir,\n                    data: {':name':_name, 'jcr:mixins':'dam:folder'},\n                    'xhrFields': {\n                        withCredentials: true\n                    }\n                }).then(function(data_, status_, xhr_){\n                    _this.sink.onNext(data_);\n                    // refresh the overall directories list\n                    DirectoryActions.refreshDirectories.onNext(true);\n                    FileActions.refreshFiles.onNext(true);\n\n                    // update token\n                    var _token = xhr_.getResponseHeader(\"X-Auth-Token\");\n                    if( _token != null && _token !== undefined ){\n                        AuthActions.saveToken.onNext(_token);\n                    }\n\n                }, function (xhr_, status_, errorThrown_){\n\n                    //send the error to the store (through the sink observer\n                    if( xhr_.status == 401){\n                        AuthActions.loginRedirect.onNext(true);\n                    }else\n                    {\n                        UserActions.alert.onNext(\"Error creating folder, you might now have permission\");\n                        //var _error = {'code':xhr_.status, 'status':xhr_.statusText, 'message': xhr_.responseText};\n                        //_this.sink.onError(_error);\n                    }\n                });\n         **/\n\n\n    }\n\n}\n\n\nexport default CreateFolderService;\n","import AppSettings from '../../library/actions/AppSettings';\n\nclass SetFilePropertyService {\n\n    sink=undefined;\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.sink = sink_;\n\n        source_.subscribe(function (properties_) {\n            this.execute(properties_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    execute(properties_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        let formData = new FormData();\n        for (const key in properties_)\n        {\n            if( key !== \"path\") {\n                formData.append(key, properties_[key]);\n            }\n        }\n\n\n        fetch( baseUrl +properties_['path'], {\n            method: 'PUT',\n            body: formData\n        })\n        //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            //parse json\n            .then((response) => response.json())\n            .then(json => {\n                this.sink.next(json);\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText||err.message};\n                    this.sink.error(_error);\n                }\n            });\n    }\n\n};\n\n\nexport default SetFilePropertyService;\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport {Subject} from '@reactivex/rxjs';\n\nimport GetFileDataService from \"./processors/GetFileDataService\";\nimport UploadFileService from \"./processors/UploadFileService\";\nimport DeleteFileOrFolderService from \"./processors/DeleteFileOrFolderService\";\nimport CreateFolderService from \"./processors/CreateFolderService\";\nimport SetFilePropertyService from \"./processors/SetFilePropertyService\";\n\nclass FileActions {\n\n\n    constructor() {\n        this.getFileDataService = new GetFileDataService(this.getFileData.source, this.getFileData.sink);\n        this.setFilePropertyService = new SetFilePropertyService(this.setFileProperty.source, this.setFileProperty.sink);\n        this.uploadFileService = new UploadFileService(this.uploadFile.source, this.uploadFile.sink);\n        this.deleteFileOrFolderService = new DeleteFileOrFolderService(this.deleteFileOrFolder.source, this.deleteFileOrFolder.sink);\n        this.createFolderService = new CreateFolderService(this.createFolder.source, this.createFolder.sink);\n    }\n\n\n    /**\n     * Get the file nodes for all files, using an array of paths\n     */\n    getFileData = {source:new Subject(), sink:new Subject()};\n\n    /**\n     * Get the file nodes for all files, using an array of paths\n     */\n    setFileProperty = {source:new Subject(), sink:new Subject()};\n\n    /**\n     * Upload a files\n     */\n    uploadFile = {source:new Subject(), sink:new Subject()};\n\n    /**\n     * Delete a File\n     */\n    deleteFileOrFolder = {source:new Subject(), sink:new Subject()};\n\n\n    /**\n     * Create a Folder\n     */\n    createFolder = {source:new Subject(), sink:new Subject()};\n\n\n    /**\n     * local event called when upload is complete\n     */\n    stageAction = new Subject();\n    stageFile = new Subject();\n    uploadProgress = new Subject();\n    uploadCompleted = new Subject();\n    uploadError = new Subject();\n\n};\n\n\n\nexport default new FileActions();\n\n","import AppActions from '../library/actions/AppActions.js';\nimport AppSettings from '../library/actions/AppSettings.js';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\nclass GetFilesAndFoldersService {\n\n    isLoading = new BehaviorSubject(false);\n    sink = new Subject();\n    source = new Subject();\n\n    constructor() {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (path_) {\n            this.getFilesAndFolders(path_);\n        }.bind(this));\n\n\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async getFilesAndFolders(path_)\n    {\n        //console.log(\"loading files & folders: \" +path_);\n\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        let _url = baseUrl +'/content/';\n\n        if (path_ && path_.length > 1) {\n            if( path_.startsWith(\"http\")){\n                _url = path_;\n            }else {\n                _url = baseUrl + path_;\n            }\n        }\n\n        const headers = new Headers();\n        headers.append('Accept', 'application/hal+json');\n\n        this.isLoading.next(true);\n\n        //Save or Create user\n        const req = await fetch(_url, {\n            method: 'GET',\n            cache: \"no-cache\",\n            headers: headers,\n            credentials: 'include'\n        });\n\n        const json = await req.json();\n        if (req.status == 200 ) {\n            if( json._embedded ) {\n                var _nodes = json._embedded.nodes.filter(f => !f.name.startsWith(\".\"));\n                this.sink.next(_nodes);\n            }else{\n                this.sink.next([]);\n            }\n\n            this.isLoading.next(false);\n        } else {\n            this.isLoading.next(false);\n            //console.dir(req);\n            var _error = {'code': req.status, 'status': req.statusText, 'message': await req.text()};\n            this.sink.error(_error);\n        }\n\n\n    }\n\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    getFilesAndFoldersOld(path_)\n    {\n        //console.log(\"loading files & folders: \" +path_);\n\n        const baseUrl = AppSettings.baseHost.getValue();\n\n\n        if( path_ !== undefined && path_.length > 0 )\n        {\n\n            //console.log(\"{GetFiles Service} getFiles()\");\n            //\"http://localhost:9000/\"\n            var _url = baseUrl +path_;// + \".graph.1.json/nt:file,sling:file,nt:folder,sling:folder,dam:file,dam:folder/name,index,parent,links,path,jcr:primaryType,jcr:created,jcr:mixinTypes&t=1\";\n\n\n            request.get(_url)\n                .withCredentials()\n                .set('Accept', 'application/json')\n                .end((err, res) => {\n\n                    if (!err) {\n\n                        var _nodes = [];\n                        if (res.body) {\n                            _nodes = res.body.filter(f => !f.name.toString().startsWith(\".\"));\n                        }\n                        this.sink.next(_nodes);\n\n                    } else {\n                        //send the error to the store (through the sink observer\n                        if (err.status === 401) {\n                            AppActions.navigateTo.next(\"/\");\n                        } else if (err.status === 403) {\n                            AppActions.alert.next(\"You do not have permission to access these files\");\n                        } else {\n                            var _error = {\n                                'code': err.status,\n                                'status': err.statusText,\n                                'message': err.responseText\n                            };\n                            this.sink.error(_error);\n                        }\n                    }\n\n                });\n\n        }\n    }\n\n};\n\n\nexport default new GetFilesAndFoldersService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\n//import AppActions from \"../../actions/AppActions\";\n\nimport { Modal } from 'antd';\nimport TextField from '@material-ui/core/TextField';\n\nimport FileActions from '../../actions/FileActions';\nimport GetFilesAndFoldersService from \"../../services/GetFileAndFoldersService\";\n\nconst styleSheet = (theme) => ({ });\n\n\n\nclass NewFolderDialog extends Component {\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            folderName:\"\",\n            open:false\n        };\n\n        this.handleSave = this.handleSave.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({isMounted:true});\n    }\n\n\n    componentWillUnmount(){\n        this.setState({isMounted:false});\n    }\n\n    componentWillReceiveProps(newProps){\n        this.props = newProps;\n        this.setState({\"open\":newProps.open})\n    }\n\n\n    showModal = () => {\n        this.setState({\n            open: true,\n        });\n    };\n\n    hideModal = () => {\n        this.setState({\n            open: false,\n        });\n    };\n\n\n    handleSave(){\n        if( this.props.onSave && this.state.folderName.length > 0) {\n            this.props.onSave(this.state.folderName)\n        }\n        this.setState({\"open\":false});\n    }\n\n\n    render() {\n        //var classes = this.props.classes;\n        return (\n            <Modal\n                visible={this.state.open}\n                onCancel={this.hideModal}\n                onOk={this.handleSave}\n                okText=\"Create\"\n                cancelText=\"Cancel\"\n                title=\"New Folder\">\n\n                    <TextField\n                        id=\"newFolderName\"\n                        label=\"Folder Name\"\n                        value={this.state.folderName}\n                        onChange={(e)=>this.setState({folderName: e.target.value})}\n                        margin=\"dense\"\n                    />\n\n            </Modal>\n\n        );\n    }\n\n}\n\n\nexport default withStyles(styleSheet)(NewFolderDialog);","import React, {Component} from 'react';\n\nimport { Input, Rate, Select, Tabs } from 'antd';\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\n\nimport {withStyles} from \"@material-ui/core/styles\";\nimport AppSettings from \"../../library/actions/AppSettings\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport moment from \"moment\";\n\nconst styleSheet = (theme) => ({\n    gridListRoot: {\n        margin: '0px',\n        display:'grid',\n        gridGap:'8px',\n        gridTemplateRows:'175px 25px 50px 25px 50px 25px 25px 3fr',\n        gridTemplateColumns:'16px auto 16px',\n        background: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    itemPreview: {\n        gridRow: '1',\n        gridColumn: '2',\n        justifyContent: 'center'\n    },\n    itemRating: {\n        gridRow: '2',\n        gridColumn: '2'\n    },\n    itemKeywords: {\n        gridRow: '3',\n        gridColumn: '2'\n    },\n    itemDescription: {\n        gridRow: '5',\n        gridColumn: '2',\n        width: '100%'\n    },\n    itemInfo: {\n        gridRow: '8',\n        gridColumn: '2'\n    },\n});\n\n\nclass SingleImageView extends Component {\n\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            keyword: \"\",\n            tabIndex: this.props.tabIndex?this.props.tabIndex:0\n        };\n\n        this.handleRatingChange = this.handleRatingChange.bind(this);\n        this.handleTagChange = this.handleTagChange.bind(this);\n        this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n        this.handleDescriptionSave = this.handleDescriptionSave.bind(this);\n    }\n\n    handleRatingChange(rating){\n        this.props.node['rating'] = rating;\n\n        if( this.props.onRatingChange ){\n            this.props.onRatingChange(this.props.node);\n        }\n\n        this.setState({\"rating\":rating}); //set value to refresh UI\n    }\n\n    //send to parent, with keyword field value\n    handleTagChange(tags){\n        this.props.node['tags'] = tags;\n\n        if( this.props.onTagChange ){\n            this.props.onTagChange(this.props.node);\n        }\n\n        this.setState({\"tags\":tags}); //set value to refresh UI\n    }\n\n    //update local prop\n    handleDescriptionChange(event){\n        this.props.node['description'] = event.currentTarget.value;\n        this.setState({\"description\":event.currentTarget.value}); //set value to refresh UI\n    }\n\n    //on focus out, save to server\n    handleDescriptionSave(event){\n        if( this.props.onDescriptionChange ){\n            this.props.onDescriptionChange(this.props.node);\n        }\n    }\n\n\n\n    render(){\n        var classes = this.props.classes;\n\n        const tags = [];\n        if(this.props.node['tags']){\n            this.props.node['tags'].map((tag)=>{\n                tags.push(<Option key={tag}>{tag}</Option>);\n            });\n        }\n\n\n        return (\n            <div className={classes.gridListRoot}>\n\n                <div className={classes.itemPreview} >\n\n                    <div style={{height: '100%', maxWidth: '100%', textAlign: 'center'}}>\n                        <img src={AppSettings.baseHost.getValue() + (this.props.node['path'])}\n                             alt={this.props.node['path']}\n                             style={{maxHeight: '100%', maxWidth: '100%', alignSelf: 'center'}}/>\n                    </div>\n\n                </div>\n\n\n                <div className={classes.itemRating}>\n                    <Rate\n                        allowHalf\n                        onChange={this.handleRatingChange}\n                        value={this.props.node['rating']}\n                        style={{ float: 'right' }}/>\n                </div>\n\n\n\n                <div className={classes.itemKeywords}>\n                    <Typography variant=\"h6\">Keywords:</Typography>\n\n                    <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Tags Mode\" value={this.props.node['tags']} onChange={this.handleTagChange}>\n                        {tags}\n                    </Select>\n                </div>\n\n                <div className={classes.itemDescription}>\n                    <Typography variant=\"h6\">Description:</Typography>\n                    <TextArea id=\"description\"\n                              rows={3}\n                              value={this.props.node['description']}\n                              onChange={this.handleDescriptionChange}\n                              onBlur={this.handleDescriptionSave}></TextArea>\n                </div>\n\n                <div className={classes.itemInfo}>\n\n                    <Tabs defaultActiveKey=\"details\" style={{width:'100%'}}>\n                        <TabPane tab=\"Details\" key=\"details\">\n                            <div>\n                                <Table>\n                                    <TableBody>\n                                        <TableRow style={{padding:'8px'}}>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Type</TableCell>\n                                            <TableCell align=\"left\">{this.props.node['mimeType']}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Resolution</TableCell>\n                                            <TableCell align=\"left\">{this.props.node['width']} x {this.props.node['height']}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Created</TableCell>\n                                            <TableCell align=\"left\">{moment(this.props.node['dateCreated']).format('MMM Do YYYY, h:mm:ss a')}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component=\"th\" scope=\"row\" align=\"right\" style={{padding:'8px'}}>Modified</TableCell>\n                                            <TableCell align=\"left\">{moment(this.props.node['dateLastModified']).format('MMM Do YYYY, h:mm:ss a')}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                                <br/>\n                                <p>{this.props.node['path']}</p>\n                            </div>\n                        </TabPane>\n                        <TabPane tab=\"Versions\" key=\"versions\">\n                            (coming soon)\n                        </TabPane>\n                        <TabPane tab=\"Duplicates\" key=\"duplicates\">\n                            (coming soon)\n                        </TabPane>\n                    </Tabs>\n\n                </div>\n\n\n            </div>\n        )\n\n    }\n}\n\nexport default withStyles(styleSheet)(SingleImageView);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, withRouter} from 'react-router-dom';\n\nimport {Drawer, Modal, Space, Table} from 'antd';\nimport {FileOutlined, FolderOutlined} from '@ant-design/icons';\n\n\nimport {format, parseISO} from 'date-fns'\nimport Button from \"@material-ui/core/Button\";\nimport SingleImageView from \"../fileinfosidebar/SingleImageView\";\n\n\nclass TableView extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMounted: true,\n            showDeleteFileDialog: false,\n            showSidebar: false,\n            pendingFileToDelete: [],\n            folders: [],\n            files: [],\n            selectedFile: {}\n        };\n\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleFileDelete = this.handleFileDelete.bind(this);\n        this.handleFileDeleteConfirmation = this.handleFileDeleteConfirmation.bind(this);\n        this.handleFolderDelete = this.handleFolderDelete.bind(this);\n        this.handleFolderDeleteConfirmation = this.handleFolderDeleteConfirmation.bind(this);\n        this.handleNodeChange = this.handleNodeChange.bind(this);\n    }\n\n    handleRowClick(e){\n        const id = e.currentTarget.attributes['data-id'].value;\n        this.props.onRowClick(id);\n    }\n\n    onTableChangeHandler(pagination, filters, sorter, extra){\n        //extra: { currentDataSource: [], action: paginate | sort | filter }\n        console.log(\"onTableChange\");\n    }\n\n    handleFileDelete(event_){\n        const path = event_.currentTarget.attributes['data-path'].value;\n        this.setState({showDeleteFileDialog:true, deletePath:path});//, pendingFileToDelete: path_\n        return false;\n    }\n\n    handleFileDeleteConfirmation(event_){\n        if( this.props.onDeleteFile ) this.props.onDeleteFile(this.state.deletePath);\n        this.setState({showDeleteFileDialog:false, deletePath:null}); //, pendingFileToDelete: path_\n        return false;\n    }\n\n    handleFolderDelete(event_){\n        const path = event_.currentTarget.attributes['data-path'].value;\n        this.setState({showDeleteFolderDialog:true, deletePath:path}); //, pendingFolderToDelete: path_\n        return false;\n    }\n\n    handleFolderDeleteConfirmation(event_){\n        if( this.props.onDeleteFolder ) this.props.onDeleteFolder(this.state.deletePath);\n        this.setState({showDeleteFolderDialog:false, deletePath:null}); //, pendingFolderToDelete: path_\n        return false;\n    }\n\n    //Save changes\n    handleNodeChange(node){\n        if( this.props.onNodeChange ){\n            this.props.onNodeChange(node);\n        }\n    }\n\n\n    fieldNameSorter(a, b, c){\n        //first put folders before files\n        console.log(c);\n        if( a.primaryType===\"nt:folder\" && b.primaryType===\"nt:file\") return -1;\n        else if( a.primaryType===\"nt:file\" && b.primaryType===\"nt:folder\") return 1;\n        else if( a.primaryType === b.primaryType) {\n            // sort by field\n            if( a.name.trim().toLowerCase() < b.name.trim().toLowerCase() ) return -1;//c===\"descend\")?-1:1;\n            else if( a.name.trim().toLowerCase() > b.name.trim().toLowerCase() ) return 1;//c===\"descend\")?1:-1;\n            else return 0;\n        }\n        else return 0;\n    }\n\n    fieldDateSorter(a, b, c, d){\n        //first put folders before files\n        if( a.primaryType===\"nt:folder\" && b.primaryType===\"nt:file\") return -1;\n        else if( a.primaryType===\"nt:file\" && b.primaryType===\"nt:folder\") return 1;\n        else if( a.primaryType === b.primaryType) {\n            // sort by field\n            if( a.createdDate < b.createdDate ) return c===\"ascend\"?1:-1;\n            else if( a.createdDate > b.createdDate ) return c===\"ascend\"?-1:1;\n            else return 0;\n        }\n        else return 0;\n    }\n\n\n\n\n    getColumns(){\n        return [\n            {\n                title: '',\n                dataIndex: 'type',\n                width: 30,\n                render: (text, record) => {\n                    if( record.primaryType === \"nt:folder\" ){\n                        return (<FolderOutlined style={{fontSize:'24px'}}/>);\n                    }if( record.primaryType === \"nt:file\" && record.mimeType.startsWith(\"image/\") ){\n                        return (<img src={record.path +\"?size=100\"} alt=\"\" style={{width:'24px'}}/>);\n                    }else{\n                        return (<FileOutlined style={{fontSize:'24px'}}/>);\n                    }\n                }\n            }, {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                sorter: this.fieldNameSorter,\n                render: (text, record) => {\n\n                    if( record.primaryType === \"nt:folder\" ){\n                        return (<Link to={record.path}>{text}</Link>);\n                    }else{\n                        return (<a onClick={()=>this.setState({showSidebar:true, selectedFile: record})}>{text}</a>);\n                    }\n                },\n            },\n            {\n                title: 'Date Created',\n                dataIndex: 'dateCreated',\n                key: 'dateCreated',\n                width: 200,\n                responsive: ['md'],\n                sorter: this.fieldDateSorter,\n                render: text => <span>{text?format(parseISO(text || \"\"),'yyyy-MM-dd hh:mm:ss a'):''}</span>,\n            },\n            {\n                title: 'Action',\n                key: 'action',\n                width: 200,\n                render: (text, record) => {\n                    const downloadBtn = record._links.download && this.props.onDownload? <Button type=\"link\" data-path={record.path} onClick={()=>this.props.onDownload(record.name, record._links.download.href)}>Download</Button> : <span/>;\n                    const deleteBtn = record._links.self? <Button type=\"link\" data-path={record.path} onClick={this.handleFileDelete}>Delete</Button> : <span/>;\n                    const editBtn = <span/>; //<Button type=\"link\" data-path={record.path} onClick={()=>this.setState({showSidebar:true, selectedFile: record})}>Edit</Button>\n\n                    if (record.primaryType === 'nt:file' && record.mimeType.startsWith(\"image/\")) {\n                        return (<Space size=\"middle\">\n                            {downloadBtn}\n                            {deleteBtn}\n                            {editBtn}\n                        </Space>)\n                    } else {\n                        return (<Space size=\"middle\">\n                            {downloadBtn}\n                            {deleteBtn}\n                        </Space>)\n                    }\n                },\n            },\n        ];\n    }\n\n    getRowSelection(){\n        return  {\n            onChange: (selectedRowKeys, selectedRows) => {\n                console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n            },\n            getCheckboxProps: record => ({\n                disabled: record.contentType === 'application/folder', // Column configuration not to be checked\n                name: record.name,\n            }),\n        };\n    }\n\n\n\n    render() {\n        const classes = this.props.classes;\n\n\n        let rows = [];\n        rows = rows.concat(this.props.folders);\n        rows = rows.concat(this.props.files);\n        rows.sort(this.fieldNameSorter);\n\n        const rowSelection = this.getRowSelection();\n\n        return (\n            <div>\n                <Table rowKey=\"path\"\n                       loading={this.props.loading}\n                       columns={this.getColumns()}\n                       dataSource={rows}\n                       size=\"small\"\n                       pagination={{'pageSize':10, hideOnSinglePage:false}}\n                       sortDirections={['ascend', 'descend']}\n                       rowSelection={{\n                           type: \"checkbox\",\n                           ...rowSelection,\n                       }}\n                       onChange={this.onTableChangeHandler}></Table>\n\n                <Drawer\n                    title=\"File Info\"\n                    placement=\"right\"\n                    closable={true}\n                    getContainer={false}\n                    width=\"350\"\n                    bodyStyle={{padding:'0px'}}\n                    onClose={()=>this.setState({showSidebar:false, selectedFile:{}})}\n                    visible={this.state.showSidebar}\n                >\n                    <SingleImageView\n                        node={this.state.selectedFile}\n                        onRatingChange={this.handleNodeChange}\n                        onDescriptionChange={this.handleNodeChange}\n                        onTagChange={this.handleNodeChange}/>\n                </Drawer>\n\n                <Modal\n                    visible={this.state.showDeleteFileDialog}\n                    onCancel={() => {this.setState({showDeleteFileDialog: false})}}\n                    onOk={this.handleFileDeleteConfirmation}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Are you sure?\">\n                    <p>Do you want to delete this file?</p>\n                </Modal>\n\n                <Modal\n                    visible={this.state.showDeleteFolderDialog}\n                    onCancel={() => {this.setState({showDeleteFolderDialog: false})}}\n                    onOk={this.handleFolderDeleteConfirmation}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    title=\"Are you sure?\">\n                    <p>Do you want to delete this folder and all files in it?</p>\n                </Modal>\n            </div>\n\n    );\n\n    }\n}\n\nTableView.propTypes = {\n    files: PropTypes.array.isRequired,\n    folders: PropTypes.array.isRequired,\n};\n\nexport default withRouter(TableView);","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass CreateFolderService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (props_) {\n            this.createDirectory(props_);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async createDirectory(props_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        var _name = props_.name ;\n        var _url = baseUrl +props_.path +\"/\";\n\n        var formData = new FormData();\n        formData.append(\"name\", props_.name);\n        formData.append(\"jcr:primaryType\", \"nt:folder\");\n\n        try {\n            const req = await fetch(_url, {\n                method: \"POST\",\n                body: formData,\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                const body = await req.json();\n                const location = body._links.self.href;\n                this.sink.next(location);\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n        /**\n            .then(response => {\n                console.info(\"CreateFolder success handler\");\n                if(response.redirected) {\n                    console.debug(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                //continue on\n                this.sink.next(true);\n            })\n            .then((response) => response.json())\n            .then(json => {\n                if (!json.firstName) {\n                    json.firstName = json.username;\n                }\n                this.sink.next(json);\n            })\n            .catch(err => {\n                console.warn(err);\n                //send the error to the store (through the sink observer\n                if (err.status === 401) {\n                    AppActions.navigateTo.next(\"/\");\n                }\n                else if (err.status === 403) {\n                    AppActions.alert.next(\"You do not have permission to add a new user\");\n                } else {\n                    console.error(err);\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n                    this.sink.error(_error);\n                }\n            });\n         **/\n\n\n        /**\n        return $.ajax({\n                    method: \"post\",\n                    url: _dir,\n                    data: {':name':_name, 'jcr:mixins':'dam:folder'},\n                    'xhrFields': {\n                        withCredentials: true\n                    }\n                }).then(function(data_, status_, xhr_){\n                    _this.sink.onNext(data_);\n                    // refresh the overall directories list\n                    DirectoryActions.refreshDirectories.onNext(true);\n                    FileActions.refreshFiles.onNext(true);\n\n                    // update token\n                    var _token = xhr_.getResponseHeader(\"X-Auth-Token\");\n                    if( _token != null && _token !== undefined ){\n                        AuthActions.saveToken.onNext(_token);\n                    }\n\n                }, function (xhr_, status_, errorThrown_){\n\n                    //send the error to the store (through the sink observer\n                    if( xhr_.status == 401){\n                        AuthActions.loginRedirect.onNext(true);\n                    }else\n                    {\n                        UserActions.alert.onNext(\"Error creating folder, you might now have permission\");\n                        //var _error = {'code':xhr_.status, 'status':xhr_.statusText, 'message': xhr_.responseText};\n                        //_this.sink.onError(_error);\n                    }\n                });\n         **/\n\n\n    }\n\n}\n\n\nexport default new CreateFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject, BehaviorSubject, Observable} from '@reactivex/rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport request from \"superagent\";\nimport FileActions from \"../actions/FileActions\";\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass UploadFileService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.pipe(mergeMap(file_ => {\n            if( Array.isArray(file_) ){\n                for (var i = 0; i < file_.length; i++) {\n                    var file = file_[i];\n                    return this.uploadNextFile(file_);\n                }\n            }else {\n                return this.uploadNextFile(file_);\n            }\n        }, 3)).subscribe(console.debug);\n    }\n\n\n\n    uploadNextFile(props_) {\n\n        //console.log(\"file: \" + file);\n\n        if (props_.file)//!file.path)\n        {\n            //console.log(\"else clause, upload\");\n            //debugger;\n            return Observable\n                .of(props_)\n                .flatMap(req => new Promise((resolve, reject) => {\n                    return this.uploadFile(props_)\n                        .then(result=>resolve(result))\n                        .catch(err => {\n                            //debugger;\n                            let retry = 1;\n                            if( props_.retry ){\n                                retry=props_.retry+1;\n                            }\n                            props_.progress = 0;\n                            props_.retry = retry;\n                            props_.errorMsg = \"Retrying request (\" +retry +\"/3)\";\n                            return reject(err);\n                        });\n                })).retry(2).catch(err => {\n                    //debugger;\n                    //var _error = {'code': err.status, 'message': err.message};\n                    props_.errorMsg = err.status +\": \" +err.message;\n                    props_.progress = 0;\n                    return Observable.of(err);\n                });\n\n        }\n\n        return null;\n    }\n\n\n\n    /**\n     * The server can't access the file locally, or we are in a browser.\n     * So this method will do a regular AJAX file upload\n     * @param dir\n     * @param path\n     */\n    uploadFile(props_) {\n\n        var filePathName = props_.path;\n        if( props_.file.webkitRelativePath ){\n            filePathName = props_.file.webkitRelativePath;\n        }else if( props_.file.relativePath ){\n            filePathName += props_.file.relativePath.substr(0, props_.file.relativePath.lastIndexOf(\"/\"));\n        }\n\n\n        var formData = new FormData();\n        formData.append(\"name\", props_.file.name);\n        formData.append(\"path\", filePathName);\n        formData.append(\"destination\", filePathName);\n        formData.append(\"file\", props_.file);\n        formData.append(\"type\", props_.file.type);\n        formData.append(\"size\", props_.file.size);\n        formData.append(\"jcr:primaryType\", \"nt:file\");\n        formData.append(\"dam:date.created\", props_.file.lastModified);\n        formData.append(\"dam:date.modified\", props_.file.lastModified);\n\n\n\n        console.log(\"Upload to:\" +baseUrl +filePathName );\n        //console.dir(file_);\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +props_.path\n\n        return request\n            .post(_url)\n            .withCredentials()\n            .charset('UTF-8')\n            .send(formData)\n            .parse(({ text }) => {\n                if( props_.onSuccess ) props_.onSuccess(null, props_.file);\n            })\n            .on('progress', event => {\n                //console.log(event);\n                props_.progress = event.percent;\n                if( props_.onProgress ) props_.onProgress({ percent: event.percent });\n\n                //the event is:\n                //{direction: \"upload\" or \"download\"\n                //  percent: 0 to 100 // may be missing if file size is unknown\n                //  total: // total file size, may be missing\n                //  loaded: // bytes downloaded or uploaded so far}\n            });\n\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(props_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        const _name = props_.file.name ;\n        const _url = baseUrl +props_.path;\n\n\n        const contentType = props_.file.type;\n        let relativePath = \"/\";\n        if( props_.file.webkitRelativePath ) {\n            relativePath = props_.file.webkitRelativePath;\n        }\n\n\n\n        var formData = new FormData();\n        formData.append(\"name\", _name);\n        formData.append(\"path\", props_.path);\n        formData.append(\"destination\", relativePath);\n        formData.append(\"file\", props_.file);\n        formData.append(\"type\", props_.file.type);\n        formData.append(\"size\", props_.file.size);\n        formData.append(\"jcr:primaryType\", \"nt:file\");\n        formData.append(\"dam:date.created\", props_.file.lastModified);\n        formData.append(\"dam:date.modified\", props_.file.lastModified);\n\n\n\n        try {\n            const response = await fetch(_url, {\n                method: \"POST\",\n                body: formData,\n                credentials: \"include\"\n            });\n\n            const reader = response.body.getReader();\n            let bytesReceived = 0;\n            while (true) {\n                const result = await reader.read();\n                if (result.done) {\n                    console.log('Fetch complete');\n                    if( props_.onSuccess ) props_.onSuccess(null, props_.file);\n                    this.isLoading.next(false);\n                    break;\n                }\n                //todo, change ajax library. This is not supported by fetch()\n                bytesReceived += result.value.length;\n                console.log('Received', bytesReceived, '/', props_.file.size, 'bytes of data so far | ', props_.file.name);\n                if( props_.onProgress ) props_.onProgress({ percent: (bytesReceived / props_.file.size) * 100 });\n            }\n        }catch(err){\n            if(props_.onError) props_.onError(err);\n            console.dir(err);\n            const _error = {'code': err.status, 'status': err.statusText, 'error':err.message};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n\n    }\n\n}\n\n\nexport default new UploadFileService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * Since most logic needs to invoke this service and wait for results, this class\n * does not use RX sink/source for an async process. Instead code will invoke execute() method\n * directly, using await command.\n *\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass DeleteFileOrFolderService {\n\n    isLoading = new BehaviorSubject();\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(path_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        var _url = baseUrl +path_;\n    ;\n\n        try {\n            this.isLoading.next(true);\n\n            const req = await fetch(_url, {\n                method: \"DELETE\",\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n    }\n\n}\n\n\nexport default new DeleteFileOrFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\n\nimport AppSettings from '../library/actions/AppSettings';\nimport {Subject,BehaviorSubject} from '@reactivex/rxjs';\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass SaveFileOrFolderService {\n\n    sink = new Subject();\n    source = new Subject();\n    isLoading = new BehaviorSubject();\n\n    constructor(source_, sink_) {\n        //console.log(\"{createUser Service} subscribe\");\n        this.source.subscribe(function (n) {\n            this.execute(n);\n        }.bind(this));\n    }\n\n    /**\n     * Return all of the files in a given directory\n     * @param val_\n     * @returns {*}\n     */\n    async execute(node_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n\n        var _name = node_.name ;\n        var _url = baseUrl +node_.path;\n\n        try {\n            const req = await fetch(_url, {\n                method: \"PUT\",\n                body: JSON.stringify(node_),\n                credentials: \"include\"\n            });\n\n\n            if (req.status == 200) {\n                this.isLoading.next(false);\n            } else {\n                throw new Error(\"Unknown Error\");//todo, send better error\n            }\n        } catch(err){\n            console.dir(err);\n            var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText};\n            this.sink.error(_error);\n            this.isLoading.next(false);\n        }\n\n    }\n\n}\n\n\nexport default new SaveFileOrFolderService();\n","/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {injectIntl} from 'react-intl';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\n\nimport {Breadcrumb, Button, message, Space, Upload} from 'antd';\nimport {FileOutlined, FolderAddOutlined, FolderOutlined, HomeOutlined} from '@ant-design/icons';\n\nimport AppShell from '../../library/appShell/AppShell';\nimport NewFolderDialog from '../../components/newfolderdialog/NewFolderDialog';\nimport Typography from \"@material-ui/core/Typography\";\nimport GetFilesAndFoldersService from \"../../services/GetFileAndFoldersService\";\nimport TableView from \"../../components/tableView/TableView\";\nimport CreateFolderService from \"../../services/CreateFolderService\";\nimport AppSettings from \"../../library/actions/AppSettings\";\nimport UploadFileService from \"../../services/UploadFileService\";\nimport DeleteFileOrFolderService from \"../../services/DeleteFileOrFolderService\";\nimport SaveFileOrFolderService from \"../../services/SaveFileOrFolderService\";\n\nconst styleSheet = (theme) => ({\n    progress: {\n        margin: `0 ${theme.spacing() * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n\n    toolbarContainer:{\n\n    },\n\n    fileGrid:{\n        height:'100%',\n        display:'grid',\n        gridTemplateRows:'64px auto',\n        gridTemplateColumns:'4fr minmax(2px, 400px)'\n    },\n\n    fileGridAppBar:{\n        gridRow:'1',\n        gridColumn:'1/3',\n        zIndex:500,\n        colorDefault:'#eeeeee'\n    },\n\n    fileGridFileList:{\n        gridRow:'2',\n        gridColumn:'1',\n        margin: '24px'\n    },\n\n    fileGridSidebar:{\n        gridRow:'2',\n        gridColumn:'2',\n        margin: '24px'\n    },\n\n    filePondSidebar:{\n        gridRow:'2',\n        gridColumn:'2',\n        margin: '24px'\n    },\n\n\n\n    mainGrid:{\n        height: '100%',\n        overflow: 'scroll',\n        display:'grid',\n        gridGap:'16px',\n        gridTemplateRows:'1fr 1fr 1fr',\n        gridTemplateColumns:'2fr 6fr'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }\n});\n\n\nclass FilesPage extends React.PureComponent {\n\n\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            isLoading:true,\n            isMounted:true,\n            canAddFile:true,\n            canAddFolder:true,\n            showAddFolderDialog:false,\n            showUploadSidebar:false,\n            showNewFolderDialog:false,\n            showUploadDialog:false,\n            selectedFiles:[],\n            uploadFiles:[],\n            path:\"/content/files\",\n            visibleRoot:\"/content/files\",\n            folders:[],\n            files:[]\n        };\n\n        //create refs\n        this.fileInputFieldRef = React.createRef();\n        this.uploadRef = React.createRef();\n\n        this.handleFileDelete = this.handleFileDelete.bind(this);\n        this.handleFolderDelete = this.handleFolderDelete.bind(this);\n        this.handleNodeChange = this.handleNodeChange.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.setState({isMounted:true});\n        this.validatePath();\n\n        GetFilesAndFoldersService.isLoading.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            this.setState({'isLoading': data_ });\n        });\n        CreateFolderService.isLoading.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            this.setState({'isLoading': data_ });\n        });\n\n        GetFilesAndFoldersService.sink.takeWhile(() => this.state.isMounted).subscribe((data_)=>{\n            const folder = data_;\n            const folders = data_.folders || [];\n            const files = data_.files || [];\n\n            this.setState({'folder': data_, 'folders': data_, 'files': files});\n        });\n\n\n        SaveFileOrFolderService.sink.takeWhile(() => this.state.isMounted).subscribe({\n            next: (v) => message.info('Item has been saved'),\n            error: (e) => message.info('Error saving item')\n        });\n\n\n        //trigger load of all folders and files\n        if( this.props.location.pathname.startsWith(this.state.path)) {\n            this.setState({path: this.props.location.pathname})\n            GetFilesAndFoldersService.source.next(this.props.location.pathname );\n        }else{\n            GetFilesAndFoldersService.source.next(this.state.path);\n        }\n    }\n\n\n    componentWillUnmount(){\n        this.setState({isMounted:false});\n    }\n\n\n    componentDidUpdate(props_, state_) {\n        //this.props = props_;\n        this.setState({showAddFolderDialog:false, showUploadSidebar:false, showNewFolderDialog:false, showUploadDialog:false});\n\n        const currentPath = this.state.path;\n        const newPath = this.validatePath();\n        if( currentPath !== newPath ) {\n            GetFilesAndFoldersService.source.next(newPath);\n        }\n    }\n\n    // shouldComponentUpdate(nextProps, nextState, nextContext) {\n    //     return this.props.location.pathname != nextProps.location.pathname\n    //         || this.state.folders != nextState.folders\n    //         || this.state.files != nextState.files\n    //         || this.state.showNewFolderDialog != nextState.showNewFolderDialog\n    //         || this.state.isLoading != nextState.isLoading;\n    // }\n\n\n    validatePath() {\n        let _path = this.props.path;\n        if( this.props.location.pathname && this.props.location.pathname.toString().startsWith(this.state.visibleRoot) ){\n            _path = this.props.location.pathname;\n        }\n        if( !_path ){\n            _path = this.state.visibleRoot;\n        }\n\n        if( _path.toString().startsWith(this.state.visibleRoot)) {\n            this.setState({\"path\": _path});\n            return _path;\n        }else{\n            //todo show invalid path\n            console.log(\"Invalid Path: \" +_path);\n            return this.props.path;\n        }\n    }\n\n\n    parseBreadcrumbPath(path, part){\n        let parts = path.split(\"/\");\n        if(path.startsWith(\"/\")){\n            parts = parts.slice(1)\n        }\n\n        const visibleParts = [];\n        for (let i = 1; i < parts.length; i++) {\n            const p = parts[i];\n            visibleParts.push( {label: p, path: '/' +parts.slice(0, i+1).join(\"/\")} )\n        }\n        return visibleParts;\n    }\n\n\n    handleCreateFolder(folderName){\n        const parentId = this.state.folder.id || null;\n        const basehost = AppSettings.baseHost.value;\n\n        CreateFolderService.sink.takeWhile(() => this.state.isMounted).subscribe(function (location_) {\n            console.log(\"Create Folder:\" +location_);\n            this.setState({showAddFolderDialog:false, showUploadSidebar:false, showNewFolderDialog:false, showUploadDialog:false});\n\n            //trigger load of all folders and files\n            GetFilesAndFoldersService.source.next(this.state.path);\n        }.bind(this));\n        CreateFolderService.source.next({\"path\": this.state.path, \"name\": folderName});\n    }\n\n\n    async handleFileDelete(path_){\n        await DeleteFileOrFolderService.execute(path_);\n        //reload after deletion\n        GetFilesAndFoldersService.source.next(this.state.path);\n    }\n\n    async handleFolderDelete(path_){\n        await DeleteFileOrFolderService.execute(path_);\n        //reload after deletion\n        GetFilesAndFoldersService.source.next(this.state.path);\n    }\n\n\n    handleFileDownload(name_, path_){\n        var link=document.createElement('a');\n        document.body.appendChild(link);\n        link.href=path_ ;\n        link.download=name_;\n        link.click();\n        link.remove();\n    }\n\n\n    UploadOnChangeHandler(info){\n        //console.log(\"Upload OnChange\");\n        //console.dir(info);\n        //console.dir(this.uploadRef);\n\n        const { status } = info.file;\n        if (status !== 'uploading') {\n            //console.log(info.file, info.fileList);\n        }\n        if (status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully.`);\n            if(info.fileList){\n                let allDone = true;\n                info.fileList.forEach((x)=>{\n                    if( x.status !== \"done\"){\n                        allDone = false;\n                    }\n                });\n\n                if( allDone ){\n                    //GetFilesAndFoldersService.source.next(this.props.location.pathname);\n                    //window.location = location.pathname;\n                    window.location.reload();\n                    //console.log(\"done\");\n                }\n            }\n        } else if (status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n    UploadCustomRequestHandler(req){\n        UploadFileService.source.next({path:req.action, file:req.file, onError:req.onError, onProgress:req.onProgress, onSuccess:req.onSuccess})\n    }\n\n    /**\n     * remove file items that have been uploaded successfully\n     * @param originNode : ReactElement\n     * @param file\n     * @param fileList\n     * @return originNode\n     * @constructor\n     */\n    UploadItemRenderHandler(originNode, file, fileList){\n        if( file.status !== \"done\" ) {\n            return originNode;\n        }\n    }\n\n\n    handleOnRowClick(event){\n        console.log(event);\n    }\n\n\n\n    //Node has been update, save changes\n    handleNodeChange(node){\n        SaveFileOrFolderService.source.next(node);\n    }\n\n\n\n    render() {\n        //console.log(\"render:\" +this.state.uploadFiles.length);\n        var classes = this.props.classes;\n        const _sidebarVisible = this.state.showUploadSidebar || this.state.uploadFiles.length>0 || this.state.selectedFiles.length>0;\n        const {Dragger} = Upload;\n        const location = this.props.location;\n\n        const draggerProps = {\n            name: 'file',\n            multiple: true,\n            listType: 'picture',\n            withCredentials: true,\n            directory:true,\n            showUploadList: {showRemoveIcon:true, showPreviewIcon:false, showDownloadIcon:false},\n            action: this.props.location.pathname,\n            onChange: this.UploadOnChangeHandler.bind(this),\n            customRequest: this.UploadCustomRequestHandler.bind(this),\n            itemRender: this.UploadItemRenderHandler.bind(this)\n        };\n\n        message.config({\n            top: 24,\n            duration: .5,\n            maxCount: 3\n        });\n\n        //console.dir(draggerProps);\n\n        const pathParts = this.parseBreadcrumbPath(this.props.location.pathname);\n\n\n        return (\n            <AppShell user={this.props.user} open={false}>\n                <div className={classes.fileGrid}>\n                    <AppBar color=\"default\" position=\"static\" elevation={0}\n                            className={classes.fileGridAppBar}>\n\n                        <Toolbar className={classes.toolbarContainer}>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                <Breadcrumb>\n                                    <Breadcrumb.Item href=\"/home/index.html\">\n                                        <HomeOutlined />\n                                    </Breadcrumb.Item>\n                                    <Breadcrumb.Item href={'#/'}>\n                                        <FileOutlined />\n                                        <span>Files</span>\n                                    </Breadcrumb.Item>\n                                    {pathParts.map((p)=>{\n                                        return (<Breadcrumb.Item key={p.path}><Link to={p.path} >{p.label}</Link></Breadcrumb.Item>);\n                                    })}\n                                </Breadcrumb>\n                            </Typography>\n                            <Space>\n                                <Button type=\"primary\"\n                                        disabled={!this.state.canAddFolder}\n                                        onClick={()=>{this.setState({'showNewFolderDialog':true})}}\n                                        icon={<FolderAddOutlined />}>New Folder</Button>\n                            </Space>\n                        </Toolbar>\n                    </AppBar>\n\n\n                    <div className={classes.fileGridFileList} style={{gridColumn:_sidebarVisible?'1/2':'1/3'}}>\n\n                        <TableView\n                            loading={this.state.isLoading}\n                            folders={this.state.folders}\n                            files={this.state.files}\n                            onRowClick={this.handleOnRowClick}\n                            onNodeChange={this.handleNodeChange}\n                            onDownload={this.handleFileDownload}\n                            onDeleteFile={this.handleFileDelete}\n                            onDeleteFolder={this.handleFolderDelete}/>\n\n\n                        <div style={{marginTop:'24px'}}>\n                            <Dragger {...draggerProps} ref={this.uploadRef}>\n                                <p className=\"ant-upload-drag-icon\">\n                                    <FolderOutlined />\n                                </p>\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                <p className=\"ant-upload-hint\">\n                                    Support for a single or bulk upload. Strictly prohibit from uploading company data or other\n                                    band files\n                                </p>\n                            </Dragger>\n                        </div>\n                    </div>\n\n\n                    <NewFolderDialog\n                        onSave={this.handleCreateFolder.bind(this)}\n                        onClose={()=>{this.setState({'showNewFolderDialog':false})}}\n                        open={this.state.showNewFolderDialog}\n                        path={this.state.path}/>\n                </div>\n\n\n                <input type=\"file\"\n                       ref={this.fileInputFieldRef}\n                       style={{'display': 'none'}}\n                       multiple\n                       onChange={this.handleFileChange}/>\n\n            </AppShell>\n        );\n\n    }\n}\n\n\nexport default injectIntl(withRouter(withStyles(styleSheet)(FilesPage)));","\n/*\n * Copyright (c) 2015  Mike Nimer & 11:58 Labs\n */\nimport AppSettings from '../actions/AppSettings';\nimport {BehaviorSubject, Subject} from \"@reactivex/rxjs\";\n\n\n/**\n * @SEE http://docs.spring.io/spring-xd/docs/1.2.0.M1/reference/html/#processors\n * @type {{subscribe: Function, onNext: Function}}\n */\nclass GetUsersService {\n\n    isLoading=new BehaviorSubject(false); //todo, wire up\n    source = new Subject();\n    sink = new Subject();\n\n\n    constructor() {\n        //console.log(\"{GetUsers Service} subscribe\");\n        this.source.subscribe(this.getUser.bind(this));\n    }\n\n    /**\n     * Return all of the users\n     * @param val_\n     * @returns {*}\n     */\n    getUser(username_)\n    {\n        const baseUrl = AppSettings.baseHost.getValue();\n        const _url = baseUrl +'/api/v1/auth/user/me';\n\n        const headers = new Headers();\n        headers.append('pragma', 'no-cache');\n        headers.append('cache-control', 'no-cache');\n        headers.append('accept', 'application/json');\n\n        this.isLoading.next(true);\n\n        fetch( _url, {\n            method: 'GET',\n            mode: 'cors',\n            headers: headers,\n            credentials: \"include\"\n        })\n            //check for redirect\n            .then(response => {\n                if(response.redirected) {\n                    console.log(\"redirect to: \" +response.url);\n                    window.location = response.url\n                }\n                return response;\n            })\n            //parse json\n            .then((response) => response.json())\n            .then(json => {\n                this.sink.next(json);\n            })\n            .catch(err => {\n                //send the error to the store (through the sink observer\n                if( err.status === 401 || err.status === 403){\n                    window.location = \"/\";\n                } else {\n                    console.error(err.statusText);\n                    var _error = {'code': err.status, 'status': err.statusText, 'message': err.responseText||err.message};\n                    this.sink.error(_error);\n                }\n            });\n\n    }\n\n}\n\n\nexport default new GetUsersService();\n","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {IntlProvider} from 'react-intl';\n\nimport {withStyles} from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// https://rsuitejs.com/\nimport 'rsuite/dist/styles/rsuite-default.css';\n\n//views\nimport FilesPage from './pages/files/FilesPage';\nimport GetUserService from \"./library/services/GetUserService\";\n\nconst styleSheet = (theme) => ({\n    progress: {\n        margin: `0 ${theme.spacing() * 2}px`,\n        width: '100px',\n        height: '100px',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n});\n\n\nclass App extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n\n        this.state = {\n            \"context\": context,\n            \"locale\": \"en-EN\",\n            \"isAuthenticated\": false,\n            \"isLoading\": true,\n            \"isMounted\": false\n        };\n\n        // set it running locally with npm start, so you can still call running server\n        if( window.location.href.indexOf(\":3000\") > -1){\n            //AppSettings.baseHost.next(\"http://localhost:9000\");\n            //AppSettings.basicUser.next(\"Mike\");\n            //AppSettings.basicPwd.next(\"admin\");\n            //UserActions.getUser.sink.next( {\"user\":{\"firstName\":\"\",\"lastName\":\"\"}} );\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({\"isMounted\": true});\n\n        GetUserService.sink.takeWhile(() => this.state.isMounted).subscribe((user_)=>{\n            // redirect to dashboard\n            if( user_ )\n            {\n                this.setState({\"isAuthenticated\":true, \"isLoading\":false, \"user\": user_});\n            }\n        });\n\n        GetUserService.source.next(null);\n    }\n\n\n    componentWillUnmount(){\n        this.setState({\"isMounted\":false});\n    }\n\n\n    render() {\n        const classes = this.props.classes;\n        const locale = \"en-EN\";\n\n\n        if (this.state.isLoading) {\n            return (\n                <div>\n                    <CircularProgress className={classes.progress} size={50}/>\n                </div>\n            );\n        }\n\n        return (\n            <IntlProvider locale={locale} key={locale} messages={this.props.i18nMessages[locale]}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" component={() => <FilesPage user={this.state.user}/>}/>\n                    </Switch>\n                </Router>\n            </IntlProvider>\n        );\n\n    }\n\n}\n\nexport default withStyles(styleSheet)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {addLocaleData} from 'react-intl';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport 'antd/dist/antd.css';\n\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n//@see https://www.materialpalette.com\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport indigo from '@material-ui/core/colors/indigo';\nimport red from '@material-ui/core/colors/red';\nimport './index.css';\n\nimport App from './App';\n\n/**\n * Setup i18n/Localization formats & messages\n */\n//addLocaleData(require('../react-intl/locale-data/en'));\nconst i18nMessages = {\n    \"en-EN\":require('./i18n/locales/en-EN.json')\n};\n\n\n\n/**\n * Setup Material-Ui Theme\n */\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light', // Switching the dark mode on is a single property value change.\n        primary: deepPurple, // Purple and green play nicely together.\n        secondary: {\n            ...indigo\n        },\n        error: red\n    }\n});\n\n\n\nconst renderApp = function(){\n\n    ReactDOM.render(\n        <MuiThemeProvider theme={theme}>\n            <App i18nMessages={i18nMessages}/>\n        </MuiThemeProvider>\n        , document.getElementById('root'));\n\n}\n\nrenderApp();\nregisterServiceWorker();\n"],"sourceRoot":""}